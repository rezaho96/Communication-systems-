
AVRASM ver. 2.1.30  F:\train\term8\Communication systems\New folder\project3\Debug\List\Recieve.asm Mon Jun 28 13:46:31 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2020060:
F:\train\term8\Communication systems\New folder\project3\Debug\List\Recieve.asm(1123): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2020000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\train\term8\Communication systems\New folder\project3\Debug\List\Recieve.asm(1126): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0001      	.DW  0x01
00003a 0276      	.DW  __seed_G101
00003b 0066      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 006a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;float Temperature,duty,t;
                 ;char str[10];
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000A DDRD.0=0;
00006a 9888      	CBI  0x11,0
                 ; 0000 000B DDRC = 0xFF;
00006b efef      	LDI  R30,LOW(255)
00006c bbe4      	OUT  0x14,R30
                 ; 0000 000C 
                 ; 0000 000D UCSRB = 0x10;
00006d e1e0      	LDI  R30,LOW(16)
00006e b9ea      	OUT  0xA,R30
                 ; 0000 000E UCSRC = 0x86;
00006f e8e6      	LDI  R30,LOW(134)
000070 bde0      	OUT  0x20,R30
                 ; 0000 000F UBRRL = 71;
000071 e4e7      	LDI  R30,LOW(71)
000072 b9e9      	OUT  0x9,R30
                 ; 0000 0010 UBRRH = 0;
000073 e0e0      	LDI  R30,LOW(0)
000074 bde0      	OUT  0x20,R30
                 ; 0000 0011 
                 ; 0000 0012 
                 ; 0000 0013 while (1){
                 _0x5:
                 ; 0000 0014    gets(str,10);
000075 940e 0227 	CALL SUBOPT_0x0
                 ; 0000 0015    Temperature = atof(str);
000077 93e0 0260 	STS  _Temperature,R30
000079 93f0 0261 	STS  _Temperature+1,R31
00007b 9360 0262 	STS  _Temperature+2,R22
00007d 9370 0263 	STS  _Temperature+3,R23
                 ; 0000 0016    duty = (25*Temperature - 575)/100;
00007f 940e 0233 	CALL SUBOPT_0x1
                +
000081 e0a0     +LDI R26 , LOW ( 0x41C80000 )
000082 e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000083 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000084 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
000085 940e 0381 	CALL __MULF12
000087 01df      	MOVW R26,R30
000088 01cb      	MOVW R24,R22
                +
000089 e0e0     +LDI R30 , LOW ( 0x440FC000 )
00008a ecf0     +LDI R31 , HIGH ( 0x440FC000 )
00008b e06f     +LDI R22 , BYTE3 ( 0x440FC000 )
00008c e474     +LDI R23 , BYTE4 ( 0x440FC000 )
                 	__GETD1N 0x440FC000
00008d 940e 0446 	CALL __SWAPD12
00008f 940e 032a 	CALL __SUBF12
000091 01df      	MOVW R26,R30
000092 01cb      	MOVW R24,R22
                +
000093 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000094 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000095 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000096 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000097 940e 03cf 	CALL __DIVF21
000099 93e0 0264 	STS  _duty,R30
00009b 93f0 0265 	STS  _duty+1,R31
00009d 9360 0266 	STS  _duty+2,R22
00009f 9370 0267 	STS  _duty+3,R23
                 ; 0000 0017    while(1){
                 _0x8:
                 ; 0000 0018     gets(str,10);
0000a1 940e 0227 	CALL SUBOPT_0x0
                 ; 0000 0019     t = atof(str);
0000a3 93e0 0268 	STS  _t,R30
0000a5 93f0 0269 	STS  _t+1,R31
0000a7 9360 026a 	STS  _t+2,R22
0000a9 9370 026b 	STS  _t+3,R23
                 ; 0000 001A     if(t != Temperature)
0000ab 940e 0233 	CALL SUBOPT_0x1
0000ad 91a0 0268 	LDS  R26,_t
0000af 91b0 0269 	LDS  R27,_t+1
0000b1 9180 026a 	LDS  R24,_t+2
0000b3 9190 026b 	LDS  R25,_t+3
0000b5 940e 0459 	CALL __CPD12
0000b7 f551      	BRNE _0xA
                 ; 0000 001B         break;
                 ; 0000 001C     else{
                 ; 0000 001D         if(duty>0 && duty<1 ){
0000b8 940e 023c 	CALL SUBOPT_0x2
0000ba 940e 0453 	CALL __CPD02
0000bc f42c      	BRGE _0xE
0000bd 940e 0245 	CALL SUBOPT_0x3
0000bf 940e 0414 	CALL __CMPF12
0000c1 f008      	BRLO _0xF
                 _0xE:
0000c2 c015      	RJMP _0xD
                 _0xF:
                 ; 0000 001E             PORTC = 0x01;
0000c3 e0e1      	LDI  R30,LOW(1)
0000c4 bbe5      	OUT  0x15,R30
                 ; 0000 001F             delay_ms(50*duty);
0000c5 91e0 0264 	LDS  R30,_duty
0000c7 91f0 0265 	LDS  R31,_duty+1
0000c9 9160 0266 	LDS  R22,_duty+2
0000cb 9170 0267 	LDS  R23,_duty+3
0000cd 940e 024b 	CALL SUBOPT_0x4
                 ; 0000 0020             PORTC = 0x00;
0000cf e0e0      	LDI  R30,LOW(0)
0000d0 bbe5      	OUT  0x15,R30
                 ; 0000 0021             delay_ms((1-duty)*50);
0000d1 940e 0245 	CALL SUBOPT_0x3
0000d3 940e 032a 	CALL __SUBF12
0000d5 940e 024b 	CALL SUBOPT_0x4
                 ; 0000 0022             }
                 ; 0000 0023         else if(duty>=1)
0000d7 c009      	RJMP _0x10
                 _0xD:
0000d8 940e 0245 	CALL SUBOPT_0x3
0000da 940e 0414 	CALL __CMPF12
0000dc f010      	BRLO _0x11
                 ; 0000 0024             PORTC = 0x01;
0000dd e0e1      	LDI  R30,LOW(1)
0000de c001      	RJMP _0x14
                 ; 0000 0025         else
                 _0x11:
                 ; 0000 0026             PORTC = 0x00;
0000df e0e0      	LDI  R30,LOW(0)
                 _0x14:
0000e0 bbe5      	OUT  0x15,R30
                 ; 0000 0027     }
                 _0x10:
                 ; 0000 0028    }
0000e1 cfbf      	RJMP _0x8
                 _0xA:
                 ; 0000 0029 
                 ; 0000 002A }
0000e2 cf92      	RJMP _0x5
                 ; 0000 002B 
                 ; 0000 002C }
                 _0x13:
0000e3 cfff      	RJMP _0x13
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
0000e4 9b5f           sbis usr,rxc
0000e5 cffe           rjmp getchar0
0000e6 b1ec           in   r30,udr
0000e7 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
0000e8 93ba      	ST   -Y,R27
0000e9 93aa      	ST   -Y,R26
0000ea 940e 045e 	CALL __SAVELOCR6
                +
0000ec 810e     +LDD R16 , Y + 6
0000ed 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
0000ee 8528     +LDD R18 , Y + 8
0000ef 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
0000f0 2e00      	MOV  R0,R16
0000f1 2a01      	OR   R0,R17
0000f2 f0d9      	BREQ _0x200000B
                 _0x200000C:
0000f3 dff0      	RCALL _getchar
0000f4 2f5e      	MOV  R21,R30
0000f5 3058      	CPI  R21,8
0000f6 f451      	BRNE _0x200000D
0000f7 81ae      	LDD  R26,Y+6
0000f8 81bf      	LDD  R27,Y+6+1
0000f9 170a      	CP   R16,R26
0000fa 071b      	CPC  R17,R27
0000fb f420      	BRSH _0x200000E
                +
0000fc 5021     +SUBI R18 , LOW ( 1 )
0000fd 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
0000fe 5f0f     +SUBI R16 , LOW ( - 1 )
0000ff 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
000100 cff2      	RJMP _0x200000C
                 _0x200000D:
000101 305a      	CPI  R21,10
000102 f059      	BREQ _0x200000B
000103 933f      	PUSH R19
000104 932f      	PUSH R18
                +
000105 5f2f     +SUBI R18 , LOW ( - 1 )
000106 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000107 2fe5      	MOV  R30,R21
000108 91af      	POP  R26
000109 91bf      	POP  R27
00010a 93ec      	ST   X,R30
                +
00010b 5001     +SUBI R16 , LOW ( 1 )
00010c 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00010d cfe2      	RJMP _0x2000009
                 _0x200000B:
00010e 01d9      	MOVW R26,R18
00010f e0e0      	LDI  R30,LOW(0)
000110 93ec      	ST   X,R30
000111 85e8      	LDD  R30,Y+8
000112 85f9      	LDD  R31,Y+8+1
000113 940e 0465 	CALL __LOADLOCR6
000115 962a      	ADIW R28,10
000116 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atof:
                 ; .FSTART _atof
000117 93ba      	ST   -Y,R27
000118 93aa      	ST   -Y,R26
000119 972a      	SBIW R28,10
00011a 940e 045e 	CALL __SAVELOCR6
00011c e0e0      	LDI  R30,LOW(0)
                +
00011d 87e8     +STD Y + 8 , R30
00011e 87e9     +STD Y + 8 + 1 , R30
00011f 87ea     +STD Y + 8 + 2 , R30
000120 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x202003C:
000121 89a8      	LDD  R26,Y+16
000122 89b9      	LDD  R27,Y+16+1
000123 91ec      	LD   R30,X
000124 2f5e      	MOV  R21,R30
000125 2fae      	MOV  R26,R30
000126 940e 021c 	CALL _isspace
000128 30e0      	CPI  R30,0
000129 f031      	BREQ _0x202003E
00012a 89e8      	LDD  R30,Y+16
00012b 89f9      	LDD  R31,Y+16+1
00012c 9631      	ADIW R30,1
00012d 8be8      	STD  Y+16,R30
00012e 8bf9      	STD  Y+16+1,R31
00012f cff1      	RJMP _0x202003C
                 _0x202003E:
000130 e0e0      	LDI  R30,LOW(0)
000131 83ef      	STD  Y+7,R30
000132 325b      	CPI  R21,43
000133 f021      	BREQ _0x202006C
000134 325d      	CPI  R21,45
000135 f439      	BRNE _0x2020041
000136 e0e1      	LDI  R30,LOW(1)
000137 83ef      	STD  Y+7,R30
                 _0x202006C:
000138 89e8      	LDD  R30,Y+16
000139 89f9      	LDD  R31,Y+16+1
00013a 9631      	ADIW R30,1
00013b 8be8      	STD  Y+16,R30
00013c 8bf9      	STD  Y+16+1,R31
                 _0x2020041:
00013d e0e0      	LDI  R30,LOW(0)
00013e 2f4e      	MOV  R20,R30
00013f 2f5e      	MOV  R21,R30
                +
000140 8908     +LDD R16 , Y + 16
000141 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2020042:
000142 89a8      	LDD  R26,Y+16
000143 89b9      	LDD  R27,Y+16+1
000144 91ac      	LD   R26,X
000145 940e 0213 	CALL _isdigit
000147 30e0      	CPI  R30,0
000148 f449      	BRNE _0x2020045
000149 89a8      	LDD  R26,Y+16
00014a 89b9      	LDD  R27,Y+16+1
00014b 91ac      	LD   R26,X
00014c e2ee      	LDI  R30,LOW(46)
00014d 940e 0441 	CALL __EQB12
00014f 2f5e      	MOV  R21,R30
000150 30e0      	CPI  R30,0
000151 f039      	BREQ _0x2020044
                 _0x2020045:
000152 2b45      	OR   R20,R21
000153 89e8      	LDD  R30,Y+16
000154 89f9      	LDD  R31,Y+16+1
000155 9631      	ADIW R30,1
000156 8be8      	STD  Y+16,R30
000157 8bf9      	STD  Y+16+1,R31
000158 cfe9      	RJMP _0x2020042
                 _0x2020044:
                +
000159 8928     +LDD R18 , Y + 16
00015a 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00015b 3040      	CPI  R20,0
00015c f129      	BREQ _0x2020047
00015d 89e8      	LDD  R30,Y+16
00015e 89f9      	LDD  R31,Y+16+1
00015f 9731      	SBIW R30,1
000160 8be8      	STD  Y+16,R30
000161 8bf9      	STD  Y+16+1,R31
                 _0x2020048:
000162 89a8      	LDD  R26,Y+16
000163 89b9      	LDD  R27,Y+16+1
000164 91ac      	LD   R26,X
000165 32ae      	CPI  R26,LOW(0x2E)
000166 f0d9      	BREQ _0x202004A
000167 89a8      	LDD  R26,Y+16
000168 89b9      	LDD  R27,Y+16+1
000169 91ec      	LD   R30,X
00016a e0f0      	LDI  R31,0
00016b 97f0      	SBIW R30,48
00016c 940e 0256 	CALL SUBOPT_0x5
00016e 940e 043c 	CALL __CWD1
000170 940e 02f7 	CALL __CDF1
000172 940e 0331 	CALL __ADDF12
000174 01df      	MOVW R26,R30
000175 01cb      	MOVW R24,R22
000176 940e 025b 	CALL SUBOPT_0x6
000178 940e 03cf 	CALL __DIVF21
00017a 940e 0260 	CALL SUBOPT_0x7
00017c 89e8      	LDD  R30,Y+16
00017d 89f9      	LDD  R31,Y+16+1
00017e 9731      	SBIW R30,1
00017f 8be8      	STD  Y+16,R30
000180 8bf9      	STD  Y+16+1,R31
000181 cfe0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000182 940e 0265 	CALL SUBOPT_0x8
                 _0x202004B:
000184 89a8      	LDD  R26,Y+16
000185 89b9      	LDD  R27,Y+16+1
000186 9711      	SBIW R26,1
000187 8ba8      	STD  Y+16,R26
000188 8bb9      	STD  Y+16+1,R27
000189 17a0      	CP   R26,R16
00018a 07b1      	CPC  R27,R17
00018b f0a0      	BRLO _0x202004D
00018c 91ec      	LD   R30,X
00018d e0f0      	LDI  R31,0
00018e 97f0      	SBIW R30,48
00018f 940e 026e 	CALL SUBOPT_0x9
000191 940e 043c 	CALL __CWD1
000193 940e 02f7 	CALL __CDF1
000195 940e 0381 	CALL __MULF12
000197 940e 0256 	CALL SUBOPT_0x5
000199 940e 0331 	CALL __ADDF12
00019b 940e 0260 	CALL SUBOPT_0x7
00019d 940e 0273 	CALL SUBOPT_0xA
00019f cfe4      	RJMP _0x202004B
                 _0x202004D:
0001a0 01d9      	MOVW R26,R18
                +
0001a1 5f2f     +SUBI R18 , LOW ( - 1 )
0001a2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a3 915c      	LD   R21,X
0001a4 3655      	CPI  R21,101
0001a5 f019      	BREQ _0x202004F
0001a6 3455      	CPI  R21,69
0001a7 f009      	BREQ _0x202004F
0001a8 c057      	RJMP _0x202004E
                 _0x202004F:
0001a9 e0e0      	LDI  R30,LOW(0)
0001aa 2f4e      	MOV  R20,R30
0001ab 83ee      	STD  Y+6,R30
0001ac 01d9      	MOVW R26,R18
0001ad 915c      	LD   R21,X
0001ae 325b      	CPI  R21,43
0001af f021      	BREQ _0x202006D
0001b0 325d      	CPI  R21,45
0001b1 f421      	BRNE _0x2020053
0001b2 e0e1      	LDI  R30,LOW(1)
0001b3 83ee      	STD  Y+6,R30
                 _0x202006D:
                +
0001b4 5f2f     +SUBI R18 , LOW ( - 1 )
0001b5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2020053:
                 _0x2020054:
0001b6 01d9      	MOVW R26,R18
                +
0001b7 5f2f     +SUBI R18 , LOW ( - 1 )
0001b8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001b9 91ec      	LD   R30,X
0001ba 2f5e      	MOV  R21,R30
0001bb 2fae      	MOV  R26,R30
0001bc 940e 0213 	CALL _isdigit
0001be 30e0      	CPI  R30,0
0001bf f039      	BREQ _0x2020056
0001c0 e0aa      	LDI  R26,LOW(10)
0001c1 024a      	MULS R20,R26
0001c2 01f0      	MOVW R30,R0
0001c3 0fe5      	ADD  R30,R21
0001c4 53e0      	SUBI R30,LOW(48)
0001c5 2f4e      	MOV  R20,R30
0001c6 cfef      	RJMP _0x2020054
                 _0x2020056:
0001c7 3247      	CPI  R20,39
0001c8 f068      	BRLO _0x2020057
0001c9 81ef      	LDD  R30,Y+7
0001ca 30e0      	CPI  R30,0
0001cb f029      	BREQ _0x2020058
                +
0001cc efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0001cd efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0001ce e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0001cf ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0001d0 c03e      	RJMP _0x20A0001
                 _0x2020058:
                +
0001d1 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
0001d2 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
0001d3 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
0001d4 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
0001d5 c039      	RJMP _0x20A0001
                 _0x2020057:
0001d6 e250      	LDI  R21,LOW(32)
0001d7 940e 0265 	CALL SUBOPT_0x8
                 _0x2020059:
0001d9 3050      	CPI  R21,0
0001da f089      	BREQ _0x202005B
0001db 940e 027c 	CALL SUBOPT_0xB
0001dd 940e 026e 	CALL SUBOPT_0x9
0001df 940e 0381 	CALL __MULF12
                +
0001e1 87ec     +STD Y + 12 , R30
0001e2 87fd     +STD Y + 12 + 1 , R31
0001e3 876e     +STD Y + 12 + 2 , R22
0001e4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0001e5 2fe4      	MOV  R30,R20
0001e6 23e5      	AND  R30,R21
0001e7 f011      	BREQ _0x202005C
0001e8 940e 0273 	CALL SUBOPT_0xA
                 _0x202005C:
0001ea 9556      	LSR  R21
0001eb cfed      	RJMP _0x2020059
                 _0x202005B:
0001ec 81ee      	LDD  R30,Y+6
0001ed 30e0      	CPI  R30,0
0001ee f039      	BREQ _0x202005D
0001ef 940e 027c 	CALL SUBOPT_0xB
0001f1 940e 0256 	CALL SUBOPT_0x5
0001f3 940e 03cf 	CALL __DIVF21
0001f5 c006      	RJMP _0x202006E
                 _0x202005D:
0001f6 940e 027c 	CALL SUBOPT_0xB
0001f8 940e 0256 	CALL SUBOPT_0x5
0001fa 940e 0381 	CALL __MULF12
                 _0x202006E:
                +
0001fc 87e8     +STD Y + 8 , R30
0001fd 87f9     +STD Y + 8 + 1 , R31
0001fe 876a     +STD Y + 8 + 2 , R22
0001ff 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x202004E:
000200 81ef      	LDD  R30,Y+7
000201 30e0      	CPI  R30,0
000202 f041      	BREQ _0x202005F
                +
000203 85e8     +LDD R30 , Y + 8
000204 85f9     +LDD R31 , Y + 8 + 1
000205 856a     +LDD R22 , Y + 8 + 2
000206 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
000207 940e 028b 	CALL __ANEGF1
000209 940e 0260 	CALL SUBOPT_0x7
                 _0x202005F:
                +
00020b 85e8     +LDD R30 , Y + 8
00020c 85f9     +LDD R31 , Y + 8 + 1
00020d 856a     +LDD R22 , Y + 8 + 2
00020e 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                 _0x20A0001:
00020f 940e 0465 	CALL __LOADLOCR6
000211 9662      	ADIW R28,18
000212 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000213 93aa      	ST   -Y,R26
000214 e0e1          ldi  r30,1
000215 91f9          ld   r31,y+
000216 33f0          cpi  r31,'0'
000217 f010          brlo isdigit0
000218 33fa          cpi  r31,'9'+1
000219 f008          brlo isdigit1
                 isdigit0:
00021a 27ee          clr  r30
                 isdigit1:
00021b 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
00021c 93aa      	ST   -Y,R26
00021d e0e1          ldi  r30,1
00021e 91f9          ld   r31,y+
00021f 32f0          cpi  r31,' '
000220 f029          breq isspace1
000221 30f9          cpi  r31,9
000222 f010          brlo isspace0
000223 30fe          cpi  r31,13+1
000224 f008          brlo isspace1
                 isspace0:
000225 27ee          clr  r30
                 isspace1:
000226 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _Temperature:
000260           	.BYTE 0x4
                 _duty:
000264           	.BYTE 0x4
                 _t:
000268           	.BYTE 0x4
                 _str:
00026c           	.BYTE 0xA
                 __seed_G101:
000276           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000227 e6ec      	LDI  R30,LOW(_str)
000228 e0f2      	LDI  R31,HIGH(_str)
000229 93fa      	ST   -Y,R31
00022a 93ea      	ST   -Y,R30
00022b e0aa      	LDI  R26,LOW(10)
00022c e0b0      	LDI  R27,0
00022d 940e 00e8 	CALL _gets
00022f e6ac      	LDI  R26,LOW(_str)
000230 e0b2      	LDI  R27,HIGH(_str)
000231 940c 0117 	JMP  _atof
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000233 91e0 0260 	LDS  R30,_Temperature
000235 91f0 0261 	LDS  R31,_Temperature+1
000237 9160 0262 	LDS  R22,_Temperature+2
000239 9170 0263 	LDS  R23,_Temperature+3
00023b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2:
00023c 91a0 0264 	LDS  R26,_duty
00023e 91b0 0265 	LDS  R27,_duty+1
000240 9180 0266 	LDS  R24,_duty+2
000242 9190 0267 	LDS  R25,_duty+3
000244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000245 dff6      	RCALL SUBOPT_0x2
                +
000246 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000247 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000248 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000249 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00024a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
                +
00024b e0a0     +LDI R26 , LOW ( 0x42480000 )
00024c e0b0     +LDI R27 , HIGH ( 0x42480000 )
00024d e488     +LDI R24 , BYTE3 ( 0x42480000 )
00024e e492     +LDI R25 , BYTE4 ( 0x42480000 )
                 	__GETD2N 0x42480000
00024f 940e 0381 	CALL __MULF12
000251 940e 02be 	CALL __CFD1U
000253 01df      	MOVW R26,R30
000254 940c 0281 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
000256 85a8     +LDD R26 , Y + 8
000257 85b9     +LDD R27 , Y + 8 + 1
000258 858a     +LDD R24 , Y + 8 + 2
000259 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00025a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
00025b e0e0     +LDI R30 , LOW ( 0x41200000 )
00025c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00025d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00025e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00025f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000260 87e8     +STD Y + 8 , R30
000261 87f9     +STD Y + 8 + 1 , R31
000262 876a     +STD Y + 8 + 2 , R22
000263 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
                +
000265 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000266 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000267 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000268 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000269 87ec     +STD Y + 12 , R30
00026a 87fd     +STD Y + 12 + 1 , R31
00026b 876e     +STD Y + 12 + 2 , R22
00026c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00026d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
                +
00026e 85ac     +LDD R26 , Y + 12
00026f 85bd     +LDD R27 , Y + 12 + 1
000270 858e     +LDD R24 , Y + 12 + 2
000271 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000272 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000273 dffa      	RCALL SUBOPT_0x9
000274 dfe6      	RCALL SUBOPT_0x6
000275 940e 0381 	CALL __MULF12
                +
000277 87ec     +STD Y + 12 , R30
000278 87fd     +STD Y + 12 + 1 , R31
000279 876e     +STD Y + 12 + 2 , R22
00027a 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00027b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
00027c 85ec     +LDD R30 , Y + 12
00027d 85fd     +LDD R31 , Y + 12 + 1
00027e 856e     +LDD R22 , Y + 12 + 2
00027f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000280 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000281 9610      	adiw r26,0
000282 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000283 ed80     +LDI R24 , LOW ( 0x7D0 )
000284 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000285 9701     +SBIW R24 , 1
000286 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000287 95a8      	wdr
000288 9711      	sbiw r26,1
000289 f7c9      	brne __delay_ms0
                 __delay_ms1:
00028a 9508      	ret
                 
                 __ANEGF1:
00028b 9730      	SBIW R30,0
00028c 4060      	SBCI R22,0
00028d 4070      	SBCI R23,0
00028e f009      	BREQ __ANEGF10
00028f 5870      	SUBI R23,0x80
                 __ANEGF10:
000290 9508      	RET
                 
                 __ROUND_REPACK:
000291 2355      	TST  R21
000292 f442      	BRPL __REPACK
000293 3850      	CPI  R21,0x80
000294 f411      	BRNE __ROUND_REPACK0
000295 ffe0      	SBRS R30,0
000296 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000297 9631      	ADIW R30,1
000298 1f69      	ADC  R22,R25
000299 1f79      	ADC  R23,R25
00029a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00029b e850      	LDI  R21,0x80
00029c 2757      	EOR  R21,R23
00029d f411      	BRNE __REPACK0
00029e 935f      	PUSH R21
00029f c0cf      	RJMP __ZERORES
                 __REPACK0:
0002a0 3f5f      	CPI  R21,0xFF
0002a1 f031      	BREQ __REPACK1
0002a2 0f66      	LSL  R22
0002a3 0c00      	LSL  R0
0002a4 9557      	ROR  R21
0002a5 9567      	ROR  R22
0002a6 2f75      	MOV  R23,R21
0002a7 9508      	RET
                 __REPACK1:
0002a8 935f      	PUSH R21
0002a9 2000      	TST  R0
0002aa f00a      	BRMI __REPACK2
0002ab c0cf      	RJMP __MAXRES
                 __REPACK2:
0002ac c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0002ad e850      	LDI  R21,0x80
0002ae 2e19      	MOV  R1,R25
0002af 2215      	AND  R1,R21
0002b0 0f88      	LSL  R24
0002b1 1f99      	ROL  R25
0002b2 2795      	EOR  R25,R21
0002b3 0f55      	LSL  R21
0002b4 9587      	ROR  R24
                 
                 __UNPACK1:
0002b5 e850      	LDI  R21,0x80
0002b6 2e07      	MOV  R0,R23
0002b7 2205      	AND  R0,R21
0002b8 0f66      	LSL  R22
0002b9 1f77      	ROL  R23
0002ba 2775      	EOR  R23,R21
0002bb 0f55      	LSL  R21
0002bc 9567      	ROR  R22
0002bd 9508      	RET
                 
                 __CFD1U:
0002be 9468      	SET
0002bf c001      	RJMP __CFD1U0
                 __CFD1:
0002c0 94e8      	CLT
                 __CFD1U0:
0002c1 935f      	PUSH R21
0002c2 dff2      	RCALL __UNPACK1
0002c3 3870      	CPI  R23,0x80
0002c4 f018      	BRLO __CFD10
0002c5 3f7f      	CPI  R23,0xFF
0002c6 f408      	BRCC __CFD10
0002c7 c0a7      	RJMP __ZERORES
                 __CFD10:
0002c8 e156      	LDI  R21,22
0002c9 1b57      	SUB  R21,R23
0002ca f4aa      	BRPL __CFD11
0002cb 9551      	NEG  R21
0002cc 3058      	CPI  R21,8
0002cd f40e      	BRTC __CFD19
0002ce 3059      	CPI  R21,9
                 __CFD19:
0002cf f030      	BRLO __CFD17
0002d0 efef      	SER  R30
0002d1 efff      	SER  R31
0002d2 ef6f      	SER  R22
0002d3 e77f      	LDI  R23,0x7F
0002d4 f977      	BLD  R23,7
0002d5 c01a      	RJMP __CFD15
                 __CFD17:
0002d6 2777      	CLR  R23
0002d7 2355      	TST  R21
0002d8 f0b9      	BREQ __CFD15
                 __CFD18:
0002d9 0fee      	LSL  R30
0002da 1fff      	ROL  R31
0002db 1f66      	ROL  R22
0002dc 1f77      	ROL  R23
0002dd 955a      	DEC  R21
0002de f7d1      	BRNE __CFD18
0002df c010      	RJMP __CFD15
                 __CFD11:
0002e0 2777      	CLR  R23
                 __CFD12:
0002e1 3058      	CPI  R21,8
0002e2 f028      	BRLO __CFD13
0002e3 2fef      	MOV  R30,R31
0002e4 2ff6      	MOV  R31,R22
0002e5 2f67      	MOV  R22,R23
0002e6 5058      	SUBI R21,8
0002e7 cff9      	RJMP __CFD12
                 __CFD13:
0002e8 2355      	TST  R21
0002e9 f031      	BREQ __CFD15
                 __CFD14:
0002ea 9576      	LSR  R23
0002eb 9567      	ROR  R22
0002ec 95f7      	ROR  R31
0002ed 95e7      	ROR  R30
0002ee 955a      	DEC  R21
0002ef f7d1      	BRNE __CFD14
                 __CFD15:
0002f0 2000      	TST  R0
0002f1 f40a      	BRPL __CFD16
0002f2 d141      	RCALL __ANEGD1
                 __CFD16:
0002f3 915f      	POP  R21
0002f4 9508      	RET
                 
                 __CDF1U:
0002f5 9468      	SET
0002f6 c001      	RJMP __CDF1U0
                 __CDF1:
0002f7 94e8      	CLT
                 __CDF1U0:
0002f8 9730      	SBIW R30,0
0002f9 4060      	SBCI R22,0
0002fa 4070      	SBCI R23,0
0002fb f0b1      	BREQ __CDF10
0002fc 2400      	CLR  R0
0002fd f026      	BRTS __CDF11
0002fe 2377      	TST  R23
0002ff f412      	BRPL __CDF11
000300 9400      	COM  R0
000301 d132      	RCALL __ANEGD1
                 __CDF11:
000302 2e17      	MOV  R1,R23
000303 e17e      	LDI  R23,30
000304 2011      	TST  R1
                 __CDF12:
000305 f032      	BRMI __CDF13
000306 957a      	DEC  R23
000307 0fee      	LSL  R30
000308 1fff      	ROL  R31
000309 1f66      	ROL  R22
00030a 1c11      	ROL  R1
00030b cff9      	RJMP __CDF12
                 __CDF13:
00030c 2fef      	MOV  R30,R31
00030d 2ff6      	MOV  R31,R22
00030e 2d61      	MOV  R22,R1
00030f 935f      	PUSH R21
000310 df8a      	RCALL __REPACK
000311 915f      	POP  R21
                 __CDF10:
000312 9508      	RET
                 
                 __SWAPACC:
000313 934f      	PUSH R20
000314 01af      	MOVW R20,R30
000315 01fd      	MOVW R30,R26
000316 01da      	MOVW R26,R20
000317 01ab      	MOVW R20,R22
000318 01bc      	MOVW R22,R24
000319 01ca      	MOVW R24,R20
00031a 2d40      	MOV  R20,R0
00031b 2c01      	MOV  R0,R1
00031c 2e14      	MOV  R1,R20
00031d 914f      	POP  R20
00031e 9508      	RET
                 
                 __UADD12:
00031f 0fea      	ADD  R30,R26
000320 1ffb      	ADC  R31,R27
000321 1f68      	ADC  R22,R24
000322 9508      	RET
                 
                 __NEGMAN1:
000323 95e0      	COM  R30
000324 95f0      	COM  R31
000325 9560      	COM  R22
000326 5fef      	SUBI R30,-1
000327 4fff      	SBCI R31,-1
000328 4f6f      	SBCI R22,-1
000329 9508      	RET
                 
                 __SUBF12:
00032a 935f      	PUSH R21
00032b df81      	RCALL __UNPACK
00032c 3890      	CPI  R25,0x80
00032d f171      	BREQ __ADDF129
00032e e850      	LDI  R21,0x80
00032f 2615      	EOR  R1,R21
                 
000330 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000331 935f      	PUSH R21
000332 df7a      	RCALL __UNPACK
000333 3890      	CPI  R25,0x80
000334 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000335 3870      	CPI  R23,0x80
000336 f121      	BREQ __ADDF128
                 __ADDF121:
000337 2f57      	MOV  R21,R23
000338 1b59      	SUB  R21,R25
000339 f12b      	BRVS __ADDF1211
00033a f412      	BRPL __ADDF122
00033b dfd7      	RCALL __SWAPACC
00033c cffa      	RJMP __ADDF121
                 __ADDF122:
00033d 3158      	CPI  R21,24
00033e f018      	BRLO __ADDF123
00033f 27aa      	CLR  R26
000340 27bb      	CLR  R27
000341 2788      	CLR  R24
                 __ADDF123:
000342 3058      	CPI  R21,8
000343 f028      	BRLO __ADDF124
000344 2fab      	MOV  R26,R27
000345 2fb8      	MOV  R27,R24
000346 2788      	CLR  R24
000347 5058      	SUBI R21,8
000348 cff9      	RJMP __ADDF123
                 __ADDF124:
000349 2355      	TST  R21
00034a f029      	BREQ __ADDF126
                 __ADDF125:
00034b 9586      	LSR  R24
00034c 95b7      	ROR  R27
00034d 95a7      	ROR  R26
00034e 955a      	DEC  R21
00034f f7d9      	BRNE __ADDF125
                 __ADDF126:
000350 2d50      	MOV  R21,R0
000351 2551      	EOR  R21,R1
000352 f072      	BRMI __ADDF127
000353 dfcb      	RCALL __UADD12
000354 f438      	BRCC __ADDF129
000355 9567      	ROR  R22
000356 95f7      	ROR  R31
000357 95e7      	ROR  R30
000358 9573      	INC  R23
000359 f413      	BRVC __ADDF129
00035a c020      	RJMP __MAXRES
                 __ADDF128:
00035b dfb7      	RCALL __SWAPACC
                 __ADDF129:
00035c df3e      	RCALL __REPACK
00035d 915f      	POP  R21
00035e 9508      	RET
                 __ADDF1211:
00035f f7d8      	BRCC __ADDF128
000360 cffb      	RJMP __ADDF129
                 __ADDF127:
000361 1bea      	SUB  R30,R26
000362 0bfb      	SBC  R31,R27
000363 0b68      	SBC  R22,R24
000364 f051      	BREQ __ZERORES
000365 f410      	BRCC __ADDF1210
000366 9400      	COM  R0
000367 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000368 2366      	TST  R22
000369 f392      	BRMI __ADDF129
00036a 0fee      	LSL  R30
00036b 1fff      	ROL  R31
00036c 1f66      	ROL  R22
00036d 957a      	DEC  R23
00036e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00036f 27ee      	CLR  R30
000370 27ff      	CLR  R31
000371 2766      	CLR  R22
000372 2777      	CLR  R23
000373 915f      	POP  R21
000374 9508      	RET
                 
                 __MINRES:
000375 efef      	SER  R30
000376 efff      	SER  R31
000377 e76f      	LDI  R22,0x7F
000378 ef7f      	SER  R23
000379 915f      	POP  R21
00037a 9508      	RET
                 
                 __MAXRES:
00037b efef      	SER  R30
00037c efff      	SER  R31
00037d e76f      	LDI  R22,0x7F
00037e e77f      	LDI  R23,0x7F
00037f 915f      	POP  R21
000380 9508      	RET
                 
                 __MULF12:
000381 935f      	PUSH R21
000382 df2a      	RCALL __UNPACK
000383 3870      	CPI  R23,0x80
000384 f351      	BREQ __ZERORES
000385 3890      	CPI  R25,0x80
000386 f341      	BREQ __ZERORES
000387 2401      	EOR  R0,R1
000388 9408      	SEC
000389 1f79      	ADC  R23,R25
00038a f423      	BRVC __MULF124
00038b f31c      	BRLT __ZERORES
                 __MULF125:
00038c 2000      	TST  R0
00038d f33a      	BRMI __MINRES
00038e cfec      	RJMP __MAXRES
                 __MULF124:
00038f 920f      	PUSH R0
000390 931f      	PUSH R17
000391 932f      	PUSH R18
000392 933f      	PUSH R19
000393 934f      	PUSH R20
000394 2711      	CLR  R17
000395 2722      	CLR  R18
000396 2799      	CLR  R25
000397 9f68      	MUL  R22,R24
000398 01a0      	MOVW R20,R0
000399 9f8f      	MUL  R24,R31
00039a 2d30      	MOV  R19,R0
00039b 0d41      	ADD  R20,R1
00039c 1f59      	ADC  R21,R25
00039d 9f6b      	MUL  R22,R27
00039e 0d30      	ADD  R19,R0
00039f 1d41      	ADC  R20,R1
0003a0 1f59      	ADC  R21,R25
0003a1 9f8e      	MUL  R24,R30
0003a2 d027      	RCALL __MULF126
0003a3 9fbf      	MUL  R27,R31
0003a4 d025      	RCALL __MULF126
0003a5 9f6a      	MUL  R22,R26
0003a6 d023      	RCALL __MULF126
0003a7 9fbe      	MUL  R27,R30
0003a8 d01d      	RCALL __MULF127
0003a9 9faf      	MUL  R26,R31
0003aa d01b      	RCALL __MULF127
0003ab 9fae      	MUL  R26,R30
0003ac 0d11      	ADD  R17,R1
0003ad 1f29      	ADC  R18,R25
0003ae 1f39      	ADC  R19,R25
0003af 1f49      	ADC  R20,R25
0003b0 1f59      	ADC  R21,R25
0003b1 2fe3      	MOV  R30,R19
0003b2 2ff4      	MOV  R31,R20
0003b3 2f65      	MOV  R22,R21
0003b4 2f52      	MOV  R21,R18
0003b5 914f      	POP  R20
0003b6 913f      	POP  R19
0003b7 912f      	POP  R18
0003b8 911f      	POP  R17
0003b9 900f      	POP  R0
0003ba 2366      	TST  R22
0003bb f02a      	BRMI __MULF122
0003bc 0f55      	LSL  R21
0003bd 1fee      	ROL  R30
0003be 1fff      	ROL  R31
0003bf 1f66      	ROL  R22
0003c0 c002      	RJMP __MULF123
                 __MULF122:
0003c1 9573      	INC  R23
0003c2 f24b      	BRVS __MULF125
                 __MULF123:
0003c3 decd      	RCALL __ROUND_REPACK
0003c4 915f      	POP  R21
0003c5 9508      	RET
                 
                 __MULF127:
0003c6 0d10      	ADD  R17,R0
0003c7 1d21      	ADC  R18,R1
0003c8 1f39      	ADC  R19,R25
0003c9 c002      	RJMP __MULF128
                 __MULF126:
0003ca 0d20      	ADD  R18,R0
0003cb 1d31      	ADC  R19,R1
                 __MULF128:
0003cc 1f49      	ADC  R20,R25
0003cd 1f59      	ADC  R21,R25
0003ce 9508      	RET
                 
                 __DIVF21:
0003cf 935f      	PUSH R21
0003d0 dedc      	RCALL __UNPACK
0003d1 3870      	CPI  R23,0x80
0003d2 f421      	BRNE __DIVF210
0003d3 2011      	TST  R1
                 __DIVF211:
0003d4 f40a      	BRPL __DIVF219
0003d5 cf9f      	RJMP __MINRES
                 __DIVF219:
0003d6 cfa4      	RJMP __MAXRES
                 __DIVF210:
0003d7 3890      	CPI  R25,0x80
0003d8 f409      	BRNE __DIVF218
                 __DIVF217:
0003d9 cf95      	RJMP __ZERORES
                 __DIVF218:
0003da 2401      	EOR  R0,R1
0003db 9408      	SEC
0003dc 0b97      	SBC  R25,R23
0003dd f41b      	BRVC __DIVF216
0003de f3d4      	BRLT __DIVF217
0003df 2000      	TST  R0
0003e0 cff3      	RJMP __DIVF211
                 __DIVF216:
0003e1 2f79      	MOV  R23,R25
0003e2 931f      	PUSH R17
0003e3 932f      	PUSH R18
0003e4 933f      	PUSH R19
0003e5 934f      	PUSH R20
0003e6 2411      	CLR  R1
0003e7 2711      	CLR  R17
0003e8 2722      	CLR  R18
0003e9 2733      	CLR  R19
0003ea 2744      	CLR  R20
0003eb 2755      	CLR  R21
0003ec e290      	LDI  R25,32
                 __DIVF212:
0003ed 17ae      	CP   R26,R30
0003ee 07bf      	CPC  R27,R31
0003ef 0786      	CPC  R24,R22
0003f0 0741      	CPC  R20,R17
0003f1 f030      	BRLO __DIVF213
0003f2 1bae      	SUB  R26,R30
0003f3 0bbf      	SBC  R27,R31
0003f4 0b86      	SBC  R24,R22
0003f5 0b41      	SBC  R20,R17
0003f6 9408      	SEC
0003f7 c001      	RJMP __DIVF214
                 __DIVF213:
0003f8 9488      	CLC
                 __DIVF214:
0003f9 1f55      	ROL  R21
0003fa 1f22      	ROL  R18
0003fb 1f33      	ROL  R19
0003fc 1c11      	ROL  R1
0003fd 1faa      	ROL  R26
0003fe 1fbb      	ROL  R27
0003ff 1f88      	ROL  R24
000400 1f44      	ROL  R20
000401 959a      	DEC  R25
000402 f751      	BRNE __DIVF212
000403 01f9      	MOVW R30,R18
000404 2d61      	MOV  R22,R1
000405 914f      	POP  R20
000406 913f      	POP  R19
000407 912f      	POP  R18
000408 911f      	POP  R17
000409 2366      	TST  R22
00040a f032      	BRMI __DIVF215
00040b 0f55      	LSL  R21
00040c 1fee      	ROL  R30
00040d 1fff      	ROL  R31
00040e 1f66      	ROL  R22
00040f 957a      	DEC  R23
000410 f243      	BRVS __DIVF217
                 __DIVF215:
000411 de7f      	RCALL __ROUND_REPACK
000412 915f      	POP  R21
000413 9508      	RET
                 
                 __CMPF12:
000414 2399      	TST  R25
000415 f09a      	BRMI __CMPF120
000416 2377      	TST  R23
000417 f042      	BRMI __CMPF121
000418 1797      	CP   R25,R23
000419 f048      	BRLO __CMPF122
00041a f429      	BRNE __CMPF121
00041b 17ae      	CP   R26,R30
00041c 07bf      	CPC  R27,R31
00041d 0786      	CPC  R24,R22
00041e f020      	BRLO __CMPF122
00041f f031      	BREQ __CMPF123
                 __CMPF121:
000420 9498      	CLZ
000421 9488      	CLC
000422 9508      	RET
                 __CMPF122:
000423 9498      	CLZ
000424 9408      	SEC
000425 9508      	RET
                 __CMPF123:
000426 9418      	SEZ
000427 9488      	CLC
000428 9508      	RET
                 __CMPF120:
000429 2377      	TST  R23
00042a f7c2      	BRPL __CMPF122
00042b 1797      	CP   R25,R23
00042c f398      	BRLO __CMPF121
00042d f7a9      	BRNE __CMPF122
00042e 17ea      	CP   R30,R26
00042f 07fb      	CPC  R31,R27
000430 0768      	CPC  R22,R24
000431 f388      	BRLO __CMPF122
000432 f399      	BREQ __CMPF123
000433 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000434 95f0      	COM  R31
000435 9560      	COM  R22
000436 9570      	COM  R23
000437 95e1      	NEG  R30
000438 4fff      	SBCI R31,-1
000439 4f6f      	SBCI R22,-1
00043a 4f7f      	SBCI R23,-1
00043b 9508      	RET
                 
                 __CWD1:
00043c 2f6f      	MOV  R22,R31
00043d 0f66      	ADD  R22,R22
00043e 0b66      	SBC  R22,R22
00043f 2f76      	MOV  R23,R22
000440 9508      	RET
                 
                 __EQB12:
000441 17ea      	CP   R30,R26
000442 e0e1      	LDI  R30,1
000443 f009      	BREQ __EQB12T
000444 27ee      	CLR  R30
                 __EQB12T:
000445 9508      	RET
                 
                 __SWAPD12:
000446 2e18      	MOV  R1,R24
000447 2f86      	MOV  R24,R22
000448 2d61      	MOV  R22,R1
000449 2e19      	MOV  R1,R25
00044a 2f97      	MOV  R25,R23
00044b 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00044c 2e1b      	MOV  R1,R27
00044d 2fbf      	MOV  R27,R31
00044e 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00044f 2e1a      	MOV  R1,R26
000450 2fae      	MOV  R26,R30
000451 2de1      	MOV  R30,R1
000452 9508      	RET
                 
                 __CPD02:
000453 2400      	CLR  R0
000454 160a      	CP   R0,R26
000455 060b      	CPC  R0,R27
000456 0608      	CPC  R0,R24
000457 0609      	CPC  R0,R25
000458 9508      	RET
                 
                 __CPD12:
000459 17ea      	CP   R30,R26
00045a 07fb      	CPC  R31,R27
00045b 0768      	CPC  R22,R24
00045c 0779      	CPC  R23,R25
00045d 9508      	RET
                 
                 __SAVELOCR6:
00045e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00045f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000460 933a      	ST   -Y,R19
                 __SAVELOCR3:
000461 932a      	ST   -Y,R18
                 __SAVELOCR2:
000462 931a      	ST   -Y,R17
000463 930a      	ST   -Y,R16
000464 9508      	RET
                 
                 __LOADLOCR6:
000465 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000466 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000467 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000468 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000469 8119      	LDD  R17,Y+1
00046a 8108      	LD   R16,Y
00046b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  34 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   9 r17:  19 r18:  26 r19:  22 r20:  32 r21:  87 r22:  76 r23:  67 
r24:  40 r25:  41 r26:  65 r27:  41 r28:   4 r29:   1 r30: 167 r31:  78 
x  :  14 y  : 119 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   7 and   :   3 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  34 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  18 
brlt  :   2 brmi  :   9 brne  :  20 brpl  :   7 brsh  :   1 brtc  :   1 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   0 call  :  60 
cbi   :   1 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  26 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :  10 cpc   :  15 cpi   :  40 cpse  :   0 dec   :   8 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  24 ld    :  12 ldd   :  62 ldi   :  91 
lds   :  16 lpm   :   7 lsl   :  11 lsr   :   3 mov   :  51 movw  :  23 
mul   :   9 muls  :   1 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   0 out   :  14 pop   :  20 push  :  20 rcall :  24 ret   :  42 
reti  :   0 rjmp  :  45 rol   :  24 ror   :  12 sbc   :   7 sbci  :  16 
sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :  13 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   4 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  19 std   :  40 sts   :  12 sub   :   4 subi  :  12 swap  :   0 
tst   :  17 wdr   :   1 
Instructions used: 71 out of 116 (61.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008d8   2226     38   2264   32768   6.9%
[.dseg] 0x000060 0x00027a      0     26     26    2048   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
