;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <mega32.h>
;#include <delay.h>
;#include <stdlib.h>
;#include <stdio.h>
;
;char str[10];
; int n=0 ;
;interrupt [2] void isr_int0(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000B   UDR=255;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000C }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;void main(void){
; 0000 000E void main(void){
;PCODE: $00000014 VOL: 0
; 0000 000F 
; 0000 0010 UCSRB = 0x18;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0011 UCSRC = 0x86;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0012 UBRRL = 71;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0013 UBRRH = 0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0014 
; 0000 0015 DDRB = 0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0016 DDRC = 255;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0017 GICR |= 1 << INT0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0018 MCUCR |= 1<<ISC01;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0019 
; 0000 001A #asm("sei")
;PCODE: $00000027 VOL: 0
	sei
;PCODE: $00000028 VOL: 0
; 0000 001B while (1){
;PCODE: $00000029 VOL: 0
; 0000 001C        gets(str,10);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001D        n=atoi(str);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001E        PORTC=n;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001F 
; 0000 0020 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0021 }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
