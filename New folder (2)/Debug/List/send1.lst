
AVRASM ver. 2.1.30  F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm Sat Jul 03 15:48:11 2021

F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1088): warning: Register r5 already defined by the .DEF directive
F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1090): warning: Register r7 already defined by the .DEF directive
F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _c=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6554
000034 706d
000035 6572
000036 7574      	.DB  0x54,0x65,0x6D,0x70,0x72,0x65,0x74,0x75
000037 6572
000038 3d20
000039 0020      	.DB  0x72,0x65,0x20,0x3D,0x20,0x0
                 _0x2000060:
F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1132): warning: .cseg .db misalignment - padding zero byte
00003a 0001      	.DB  0x1
                 _0x2000000:
00003b 4e2d
00003c 4e41
00003d 4900
00003e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\train\term8\Communication systems\New folder\New folder (2)\Debug\List\send1.asm(1135): warning: .cseg .db misalignment - padding zero byte
00003f 0000      	.DB  0x0
                 _0x2040003:
000040 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000041 000e      	.DW  0x0E
000042 0260      	.DW  _0x18
000043 0066      	.DW  _0x0*2
                 
000044 0001      	.DW  0x01
000045 0280      	.DW  __seed_G100
000046 0074      	.DW  _0x2000060*2
                 
000047 0002      	.DW  0x02
000048 0284      	.DW  __base_y_G102
000049 0080      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00004a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004b 94f8      	CLI
00004c 27ee      	CLR  R30
00004d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004e e0f1      	LDI  R31,1
00004f bffb      	OUT  GICR,R31
000050 bfeb      	OUT  GICR,R30
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000052 e08d      	LDI  R24,(14-2)+1
000053 e0a2      	LDI  R26,2
000054 27bb      	CLR  R27
                 __CLEAR_REG:
000055 93ed      	ST   X+,R30
000056 958a      	DEC  R24
000057 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000058 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000059 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005b 93ed      	ST   X+,R30
00005c 9701      	SBIW R24,1
00005d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005e e8e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000060 9185      	LPM  R24,Z+
000061 9195      	LPM  R25,Z+
000062 9700      	SBIW R24,0
000063 f061      	BREQ __GLOBAL_INI_END
000064 91a5      	LPM  R26,Z+
000065 91b5      	LPM  R27,Z+
000066 9005      	LPM  R0,Z+
000067 9015      	LPM  R1,Z+
000068 01bf      	MOVW R22,R30
000069 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006a 9005      	LPM  R0,Z+
00006b 920d      	ST   X+,R0
00006c 9701      	SBIW R24,1
00006d f7e1      	BRNE __GLOBAL_INI_LOOP
00006e 01fb      	MOVW R30,R22
00006f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000070 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000071 bfed      	OUT  SPL,R30
000072 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000073 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000074 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000075 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000076 940c 0087 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <lcd.h>
                 ;#include <spi.h>
                 ;
                 ;#asm
                     .equ __lcd_port = 0x15;
                 ; 0000 000A #endasm
                 ;
                 ;
                 ;float Tempreture,T;
                 ;char c,str[10];
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0014 ADMUX=adc_input | ADC_VREF_TYPE;
000078 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000079 81e8      	LD   R30,Y
00007a 64e0      	ORI  R30,0x40
00007b b9e7      	OUT  0x7,R30
                 ; 0000 0015 delay_us(10);
                +
00007c e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
00007d 958a     +DEC R24
00007e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0016 ADCSRA|=(1<<ADSC);
00007f 9a36      	SBI  0x6,6
                 ; 0000 0017 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000080 9b34      	SBIS 0x6,4
000081 cffe      	RJMP _0x3
                 ; 0000 0018 ADCSRA|=(1<<ADIF);
000082 9a34      	SBI  0x6,4
                 ; 0000 0019 return ADCW;
000083 b1e4      	IN   R30,0x4
000084 b1f5      	IN   R31,0x4+1
000085 940c 027b 	JMP  _0x20E0002
                 ; 0000 001A }
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001E {
                 _main:
                 ; .FSTART _main
                 ; 0000 001F lcd_init(16);
000087 e1a0      	LDI  R26,LOW(16)
000088 940e 024a 	CALL _lcd_init
                 ; 0000 0020 DDRB = 0xB0;
00008a ebe0      	LDI  R30,LOW(176)
00008b bbe7      	OUT  0x17,R30
                 ; 0000 0021 PORTB.4=1;
00008c 9ac4      	SBI  0x18,4
                 ; 0000 0022 
                 ; 0000 0023 //ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
                 ; 0000 0024 ADMUX=ADC_VREF_TYPE;
00008d e4e0      	LDI  R30,LOW(64)
00008e b9e7      	OUT  0x7,R30
                 ; 0000 0025 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
00008f e8e3      	LDI  R30,LOW(131)
000090 b9e6      	OUT  0x6,R30
                 ; 0000 0026 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000091 e0e0      	LDI  R30,LOW(0)
000092 bbea      	OUT  0x1A,R30
                 ; 0000 0027 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000093 bbeb      	OUT  0x1B,R30
                 ; 0000 0028 
                 ; 0000 0029 Tempreture = read_adc(0)/2.054;
000094 940e 02d2 	CALL SUBOPT_0x0
000096 940e 02e2 	CALL SUBOPT_0x1
                 ; 0000 002A 
                 ; 0000 002B while (1){
                 _0x8:
                 ; 0000 002C 
                 ; 0000 002D     T = read_adc(0)/2.054;
000098 940e 02d2 	CALL SUBOPT_0x0
00009a 93e0 0272 	STS  _T,R30
00009c 93f0 0273 	STS  _T+1,R31
00009e 9360 0274 	STS  _T+2,R22
0000a0 9370 0275 	STS  _T+3,R23
                 ; 0000 002E     while(Tempreture != T){
                 _0xB:
0000a2 940e 02eb 	CALL SUBOPT_0x2
0000a4 91a0 026e 	LDS  R26,_Tempreture
0000a6 91b0 026f 	LDS  R27,_Tempreture+1
0000a8 9180 0270 	LDS  R24,_Tempreture+2
0000aa 9190 0271 	LDS  R25,_Tempreture+3
0000ac 940e 051f 	CALL __CPD12
0000ae f169      	BREQ _0xD
                 ; 0000 002F     while(PINB.0==0);
                 _0xE:
0000af 9bb0      	SBIS 0x16,0
0000b0 cffe      	RJMP _0xE
                 ; 0000 0030     SPCR = 0x71;
0000b1 e7e1      	LDI  R30,LOW(113)
0000b2 b9ed      	OUT  0xD,R30
                 ; 0000 0031     c = T;
0000b3 940e 02eb 	CALL SUBOPT_0x2
0000b5 940e 0376 	CALL __CFD1U
0000b7 2e5e      	MOV  R5,R30
                 ; 0000 0032     PORTB.4 = 0;
0000b8 98c4      	CBI  0x18,4
                 ; 0000 0033     SPDR = c;
0000b9 b85f      	OUT  0xF,R5
                 ; 0000 0034     while(SPSR.SPIF == 0);
                 _0x13:
0000ba 9b77      	SBIS 0xE,7
0000bb cffe      	RJMP _0x13
                 ; 0000 0035     SPCR = 0X00;
0000bc e0e0      	LDI  R30,LOW(0)
0000bd b9ed      	OUT  0xD,R30
                 ; 0000 0036     delay_ms(10);
0000be e0aa      	LDI  R26,LOW(10)
0000bf e0b0      	LDI  R27,0
0000c0 940e 0339 	CALL _delay_ms
                 ; 0000 0037     PORTB.4 = 1;
0000c2 9ac4      	SBI  0x18,4
                 ; 0000 0038     Tempreture = T;
0000c3 940e 02eb 	CALL SUBOPT_0x2
0000c5 940e 02e2 	CALL SUBOPT_0x1
                 ; 0000 0039     lcd_clear();
0000c7 940e 01fb 	CALL _lcd_clear
                 ; 0000 003A     lcd_puts("Tempreture = ");
                +
0000c9 e6a0     +LDI R26 , LOW ( _0x18 + ( 0 ) )
0000ca e0b2     +LDI R27 , HIGH ( _0x18 + ( 0 ) )
                 	__POINTW2MN _0x18,0
0000cb 940e 0228 	CALL _lcd_puts
                 ; 0000 003B     ftoa(T,0,str);
0000cd 940e 02eb 	CALL SUBOPT_0x2
0000cf 940e 0508 	CALL __PUTPARD1
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 93ea      	ST   -Y,R30
0000d3 e7a6      	LDI  R26,LOW(_str)
0000d4 e0b2      	LDI  R27,HIGH(_str)
0000d5 940e 00de 	CALL _ftoa
                 ; 0000 003C     lcd_puts(str);
0000d7 e7a6      	LDI  R26,LOW(_str)
0000d8 e0b2      	LDI  R27,HIGH(_str)
0000d9 940e 0228 	CALL _lcd_puts
                 ; 0000 003D     }
0000db cfc6      	RJMP _0xB
                 _0xD:
                 ; 0000 003E 
                 ; 0000 003F 
                 ; 0000 0040 }
0000dc cfbb      	RJMP _0x8
                 ; 0000 0041 
                 ; 0000 0042 }
                 _0x19:
0000dd cfff      	RJMP _0x19
                 ; .FEND
                 
                 	.DSEG
                 _0x18:
000260           	.BYTE 0xE
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0000de 93ba      	ST   -Y,R27
0000df 93aa      	ST   -Y,R26
0000e0 9724      	SBIW R28,4
0000e1 e0e0      	LDI  R30,LOW(0)
0000e2 83e8      	ST   Y,R30
0000e3 83e9      	STD  Y+1,R30
0000e4 83ea      	STD  Y+2,R30
0000e5 e3ef      	LDI  R30,LOW(63)
0000e6 83eb      	STD  Y+3,R30
0000e7 931a      	ST   -Y,R17
0000e8 930a      	ST   -Y,R16
0000e9 85eb      	LDD  R30,Y+11
0000ea 85fc      	LDD  R31,Y+11+1
0000eb 3fef      	CPI  R30,LOW(0xFFFF)
0000ec efaf      	LDI  R26,HIGH(0xFFFF)
0000ed 07fa      	CPC  R31,R26
0000ee f439      	BRNE _0x200000D
0000ef 940e 02f4 	CALL SUBOPT_0x3
                +
0000f1 e7a6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0000f2 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0000f3 940e 02c5 	CALL _strcpyf
0000f5 c0b1      	RJMP _0x20E0004
                 _0x200000D:
0000f6 3fef      	CPI  R30,LOW(0x7FFF)
0000f7 e7af      	LDI  R26,HIGH(0x7FFF)
0000f8 07fa      	CPC  R31,R26
0000f9 f439      	BRNE _0x200000C
0000fa 940e 02f4 	CALL SUBOPT_0x3
                +
0000fc e7a7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0000fd e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0000fe 940e 02c5 	CALL _strcpyf
000100 c0a6      	RJMP _0x20E0004
                 _0x200000C:
000101 85ac      	LDD  R26,Y+12
000102 23aa      	TST  R26
000103 f462      	BRPL _0x200000F
                +
000104 85e9     +LDD R30 , Y + 9
000105 85fa     +LDD R31 , Y + 9 + 1
000106 856b     +LDD R22 , Y + 9 + 2
000107 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000108 940e 0343 	CALL __ANEGF1
00010a 940e 02f9 	CALL SUBOPT_0x4
00010c 940e 02fe 	CALL SUBOPT_0x5
00010e e2ed      	LDI  R30,LOW(45)
00010f 93ec      	ST   X,R30
                 _0x200000F:
000110 85a8      	LDD  R26,Y+8
000111 30a7      	CPI  R26,LOW(0x7)
000112 f010      	BRLO _0x2000010
000113 e0e6      	LDI  R30,LOW(6)
000114 87e8      	STD  Y+8,R30
                 _0x2000010:
000115 8518      	LDD  R17,Y+8
                 _0x2000011:
000116 2fe1      	MOV  R30,R17
000117 5011      	SUBI R17,1
000118 30e0      	CPI  R30,0
000119 f039      	BREQ _0x2000013
00011a 940e 0305 	CALL SUBOPT_0x6
00011c 940e 030a 	CALL SUBOPT_0x7
00011e 940e 0311 	CALL SUBOPT_0x8
000120 cff5      	RJMP _0x2000011
                 _0x2000013:
000121 940e 0316 	CALL SUBOPT_0x9
000123 940e 03e9 	CALL __ADDF12
000125 940e 02f9 	CALL SUBOPT_0x4
000127 e010      	LDI  R17,LOW(0)
                +
000128 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000129 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00012a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00012b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00012c 940e 0311 	CALL SUBOPT_0x8
                 _0x2000014:
00012e 940e 0316 	CALL SUBOPT_0x9
000130 940e 04cc 	CALL __CMPF12
000132 f088      	BRLO _0x2000016
000133 940e 0305 	CALL SUBOPT_0x6
000135 940e 031f 	CALL SUBOPT_0xA
000137 940e 0311 	CALL SUBOPT_0x8
000139 5f1f      	SUBI R17,-LOW(1)
00013a 3217      	CPI  R17,39
00013b f038      	BRLO _0x2000017
00013c 940e 02f4 	CALL SUBOPT_0x3
                +
00013e e7ab     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00013f e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
000140 940e 02c5 	CALL _strcpyf
000142 c064      	RJMP _0x20E0004
                 _0x2000017:
000143 cfea      	RJMP _0x2000014
                 _0x2000016:
000144 3010      	CPI  R17,0
000145 f429      	BRNE _0x2000018
000146 940e 02fe 	CALL SUBOPT_0x5
000148 e3e0      	LDI  R30,LOW(48)
000149 93ec      	ST   X,R30
00014a c02f      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00014b 2fe1      	MOV  R30,R17
00014c 5011      	SUBI R17,1
00014d 30e0      	CPI  R30,0
00014e f159      	BREQ _0x200001C
00014f 940e 0305 	CALL SUBOPT_0x6
000151 940e 030a 	CALL SUBOPT_0x7
                +
000153 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000154 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000155 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000156 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000157 940e 03e9 	CALL __ADDF12
000159 01df      	MOVW R26,R30
00015a 01cb      	MOVW R24,R22
00015b 940e 02ae 	CALL _floor
00015d 940e 0311 	CALL SUBOPT_0x8
00015f 940e 0316 	CALL SUBOPT_0x9
000161 940e 0487 	CALL __DIVF21
000163 940e 0376 	CALL __CFD1U
000165 2f0e      	MOV  R16,R30
000166 940e 02fe 	CALL SUBOPT_0x5
000168 2fe0      	MOV  R30,R16
000169 5de0      	SUBI R30,-LOW(48)
00016a 93ec      	ST   X,R30
00016b 2fe0      	MOV  R30,R16
00016c e0f0      	LDI  R31,0
00016d 940e 0305 	CALL SUBOPT_0x6
00016f 940e 04f4 	CALL __CWD1
000171 940e 03af 	CALL __CDF1
000173 940e 0439 	CALL __MULF12
000175 940e 0326 	CALL SUBOPT_0xB
000177 940e 032b 	CALL SUBOPT_0xC
000179 cfd1      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00017a 85e8      	LDD  R30,Y+8
00017b 30e0      	CPI  R30,0
00017c f131      	BREQ _0x20E0003
00017d 940e 02fe 	CALL SUBOPT_0x5
00017f e2ee      	LDI  R30,LOW(46)
000180 93ec      	ST   X,R30
                 _0x200001E:
000181 85e8      	LDD  R30,Y+8
000182 50e1      	SUBI R30,LOW(1)
000183 87e8      	STD  Y+8,R30
000184 5fef      	SUBI R30,-LOW(1)
000185 f0e9      	BREQ _0x2000020
000186 940e 0326 	CALL SUBOPT_0xB
000188 940e 031f 	CALL SUBOPT_0xA
00018a 940e 02f9 	CALL SUBOPT_0x4
                +
00018c 85e9     +LDD R30 , Y + 9
00018d 85fa     +LDD R31 , Y + 9 + 1
00018e 856b     +LDD R22 , Y + 9 + 2
00018f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000190 940e 0376 	CALL __CFD1U
000192 2f0e      	MOV  R16,R30
000193 940e 02fe 	CALL SUBOPT_0x5
000195 2fe0      	MOV  R30,R16
000196 5de0      	SUBI R30,-LOW(48)
000197 93ec      	ST   X,R30
000198 2fe0      	MOV  R30,R16
000199 e0f0      	LDI  R31,0
00019a 940e 0326 	CALL SUBOPT_0xB
00019c 940e 04f4 	CALL __CWD1
00019e 940e 03af 	CALL __CDF1
0001a0 940e 032b 	CALL SUBOPT_0xC
0001a2 cfde      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E0003:
0001a3 81ae      	LDD  R26,Y+6
0001a4 81bf      	LDD  R27,Y+6+1
0001a5 e0e0      	LDI  R30,LOW(0)
0001a6 93ec      	ST   X,R30
                 _0x20E0004:
0001a7 8119      	LDD  R17,Y+1
0001a8 8108      	LDD  R16,Y+0
0001a9 962d      	ADIW R28,13
0001aa 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G102:
                 ; .FSTART __lcd_delay_G102
0001ab e0ff          ldi   r31,15
                 __lcd_delay0:
0001ac 95fa          dec   r31
0001ad f7f1          brne  __lcd_delay0
0001ae 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0001af b3a4          in    r26,__lcd_direction
0001b0 70af          andi  r26,0xf                 ;set as input
0001b1 bba4          out   __lcd_direction,r26
0001b2 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001b3 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0001b4 dff6      	RCALL __lcd_delay_G102
0001b5 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001b6 dff4      	RCALL __lcd_delay_G102
0001b7 b3a3          in    r26,__lcd_pin
0001b8 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001b9 dff1      	RCALL __lcd_delay_G102
0001ba 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001bb dfef      	RCALL __lcd_delay_G102
0001bc 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001bd fda7          sbrc  r26,__lcd_busy_flag
0001be cff5          rjmp  __lcd_busy
0001bf 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
0001c0 7fa0          andi  r26,0xf0
0001c1 2bab          or    r26,r27
0001c2 bba5          out   __lcd_port,r26          ;write
0001c3 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001c4 940e 01ab 	CALL __lcd_delay_G102
0001c6 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001c7 940e 01ab 	CALL __lcd_delay_G102
0001c9 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001ca 93aa      	ST   -Y,R26
0001cb 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0001cc b3a4          in    r26,__lcd_direction
0001cd 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
0001ce bba4          out   __lcd_direction,r26
0001cf b3b5          in    r27,__lcd_port
0001d0 70bf          andi  r27,0xf
0001d1 81a8          ld    r26,y
0001d2 dfed      	RCALL __lcd_write_nibble_G102
0001d3 81a8          ld    r26,y
0001d4 95a2          swap  r26
0001d5 dfea      	RCALL __lcd_write_nibble_G102
0001d6 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001d7 940c 027b 	JMP  _0x20E0002
                 ; .FEND
                 __lcd_read_nibble_G102:
                 ; .FSTART __lcd_read_nibble_G102
0001d9 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001da 940e 01ab 	CALL __lcd_delay_G102
0001dc b3e3          in    r30,__lcd_pin           ;read
0001dd 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001de 940e 01ab 	CALL __lcd_delay_G102
0001e0 7fe0          andi  r30,0xf0
0001e1 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G102:
                 ; .FSTART _lcd_read_byte0_G102
0001e2 940e 01ab 	CALL __lcd_delay_G102
0001e4 dff4      	RCALL __lcd_read_nibble_G102
0001e5 2fae          mov   r26,r30
0001e6 dff2      	RCALL __lcd_read_nibble_G102
0001e7 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
0001e8 95e2          swap  r30
0001e9 2bea          or    r30,r26
0001ea 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001eb 93aa      	ST   -Y,R26
0001ec 940e 01af 	CALL __lcd_ready
0001ee 81e8      	LD   R30,Y
0001ef e0f0      	LDI  R31,0
0001f0 57ec      	SUBI R30,LOW(-__base_y_G102)
0001f1 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0001f2 81e0      	LD   R30,Z
0001f3 81a9      	LDD  R26,Y+1
0001f4 0fae      	ADD  R26,R30
0001f5 940e 01ca 	CALL __lcd_write_data
0001f7 8049      	LDD  R4,Y+1
0001f8 8078      	LDD  R7,Y+0
0001f9 9622      	ADIW R28,2
0001fa 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001fb 940e 01af 	CALL __lcd_ready
0001fd e0a2      	LDI  R26,LOW(2)
0001fe 940e 01ca 	CALL __lcd_write_data
000200 940e 01af 	CALL __lcd_ready
000202 e0ac      	LDI  R26,LOW(12)
000203 940e 01ca 	CALL __lcd_write_data
000205 940e 01af 	CALL __lcd_ready
000207 e0a1      	LDI  R26,LOW(1)
000208 940e 01ca 	CALL __lcd_write_data
00020a e0e0      	LDI  R30,LOW(0)
00020b 2e7e      	MOV  R7,R30
00020c 2e4e      	MOV  R4,R30
00020d 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00020e 93aa      	ST   -Y,R26
00020f 93ef          push r30
000210 93ff          push r31
000211 81a8          ld   r26,y
000212 9468          set
000213 30aa          cpi  r26,10
000214 f019          breq __lcd_putchar1
000215 94e8          clt
000216 1446      	CP   R4,R6
000217 f030      	BRLO _0x2040004
                 	__lcd_putchar1:
000218 9473      	INC  R7
000219 e0e0      	LDI  R30,LOW(0)
00021a 93ea      	ST   -Y,R30
00021b 2da7      	MOV  R26,R7
00021c dfce      	RCALL _lcd_gotoxy
00021d f036      	brts __lcd_putchar0
                 _0x2040004:
00021e 9443      	INC  R4
00021f df8f          rcall __lcd_ready
000220 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
000221 81a8      	LD   R26,Y
000222 940e 01ca 	CALL __lcd_write_data
                 __lcd_putchar0:
000224 91ff          pop  r31
000225 91ef          pop  r30
000226 940c 027b 	JMP  _0x20E0002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000228 93ba      	ST   -Y,R27
000229 93aa      	ST   -Y,R26
00022a 931a      	ST   -Y,R17
                 _0x2040005:
00022b 81a9      	LDD  R26,Y+1
00022c 81ba      	LDD  R27,Y+1+1
00022d 91ed      	LD   R30,X+
00022e 83a9      	STD  Y+1,R26
00022f 83ba      	STD  Y+1+1,R27
000230 2f1e      	MOV  R17,R30
000231 30e0      	CPI  R30,0
000232 f019      	BREQ _0x2040007
000233 2fa1      	MOV  R26,R17
000234 dfd9      	RCALL _lcd_putchar
000235 cff5      	RJMP _0x2040005
                 _0x2040007:
000236 8118      	LDD  R17,Y+0
000237 9623      	ADIW R28,3
000238 9508      	RET
                 ; .FEND
                 __long_delay_G102:
                 ; .FSTART __long_delay_G102
000239 27aa          clr   r26
00023a 27bb          clr   r27
                 __long_delay0:
00023b 9711          sbiw  r26,1         ;2 cycles
00023c f7f1          brne  __long_delay0 ;2 cycles
00023d 9508      	RET
                 ; .FEND
                 __lcd_init_write_G102:
                 ; .FSTART __lcd_init_write_G102
00023e 93aa      	ST   -Y,R26
00023f 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000240 b3a4          in    r26,__lcd_direction
000241 6fa7          ori   r26,0xf7                ;set as output
000242 bba4          out   __lcd_direction,r26
000243 b3b5          in    r27,__lcd_port
000244 70bf          andi  r27,0xf
000245 81a8          ld    r26,y
000246 940e 01c0 	CALL __lcd_write_nibble_G102
000248 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000249 c031      	RJMP _0x20E0002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00024a 93aa      	ST   -Y,R26
00024b 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
00024c 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
00024d 8068      	LDD  R6,Y+0
00024e 81e8      	LD   R30,Y
00024f 58e0      	SUBI R30,-LOW(128)
                +
000250 93e0 0286+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000252 81e8      	LD   R30,Y
000253 54e0      	SUBI R30,-LOW(192)
                +
000254 93e0 0287+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000256 940e 0330 	CALL SUBOPT_0xD
000258 940e 0330 	CALL SUBOPT_0xD
00025a 940e 0330 	CALL SUBOPT_0xD
00025c dfdc      	RCALL __long_delay_G102
00025d e2a0      	LDI  R26,LOW(32)
00025e dfdf      	RCALL __lcd_init_write_G102
00025f dfd9      	RCALL __long_delay_G102
000260 e2a8      	LDI  R26,LOW(40)
000261 940e 0335 	CALL SUBOPT_0xE
000263 e0a4      	LDI  R26,LOW(4)
000264 940e 0335 	CALL SUBOPT_0xE
000266 e8a5      	LDI  R26,LOW(133)
000267 940e 0335 	CALL SUBOPT_0xE
000269 b3a4          in    r26,__lcd_direction
00026a 70af          andi  r26,0xf                 ;set as input
00026b bba4          out   __lcd_direction,r26
00026c 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00026d 940e 01e2 	CALL _lcd_read_byte0_G102
00026f 30e5      	CPI  R30,LOW(0x5)
000270 f011      	BREQ _0x204000B
000271 e0e0      	LDI  R30,LOW(0)
000272 c008      	RJMP _0x20E0002
                 _0x204000B:
000273 940e 01af 	CALL __lcd_ready
000275 e0a6      	LDI  R26,LOW(6)
000276 940e 01ca 	CALL __lcd_write_data
000278 940e 01fb 	CALL _lcd_clear
00027a e0e1      	LDI  R30,LOW(1)
                 _0x20E0002:
00027b 9621      	ADIW R28,1
00027c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00027d 940e 050d 	CALL __PUTPARD2
00027f 817b         ldd  r23,y+3
000280 816a         ldd  r22,y+2
000281 81f9         ldd  r31,y+1
000282 81e8         ld   r30,y
000283 fb77         bst  r23,7
000284 0f77         lsl  r23
000285 fd67         sbrc r22,7
000286 6071         sbr  r23,1
000287 2f97         mov  r25,r23
000288 579e         subi r25,0x7e
000289 f081         breq __ftrunc0
00028a f078         brcs __ftrunc0
00028b 3198         cpi  r25,24
00028c f490         brsh __ftrunc1
00028d 27aa         clr  r26
00028e 27bb         clr  r27
00028f 2788         clr  r24
                 __ftrunc2:
000290 9408         sec
000291 9587         ror  r24
000292 95b7         ror  r27
000293 95a7         ror  r26
000294 959a         dec  r25
000295 f7d1         brne __ftrunc2
000296 23ea         and  r30,r26
000297 23fb         and  r31,r27
000298 2368         and  r22,r24
000299 c005         rjmp __ftrunc1
                 __ftrunc0:
00029a 94e8         clt
00029b 2777         clr  r23
00029c 27ee         clr  r30
00029d 27ff         clr  r31
00029e 2766         clr  r22
                 __ftrunc1:
00029f 776f         cbr  r22,0x80
0002a0 9576         lsr  r23
0002a1 f408         brcc __ftrunc3
0002a2 6860         sbr  r22,0x80
                 __ftrunc3:
0002a3 f977         bld  r23,7
0002a4 91a9         ld   r26,y+
0002a5 91b9         ld   r27,y+
0002a6 9189         ld   r24,y+
0002a7 9199         ld   r25,y+
0002a8 17ea         cp   r30,r26
0002a9 07fb         cpc  r31,r27
0002aa 0768         cpc  r22,r24
0002ab 0779         cpc  r23,r25
0002ac fb97         bst  r25,7
0002ad 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0002ae 940e 050d 	CALL __PUTPARD2
0002b0 940e 04fe 	CALL __GETD2S0
0002b2 940e 027d 	CALL _ftrunc
0002b4 940e 0503 	CALL __PUTD1S0
0002b6 f419          brne __floor1
                 __floor0:
0002b7 940e 04f9 	CALL __GETD1S0
0002b9 c009      	RJMP _0x20E0001
                 __floor1:
0002ba f7e6          brtc __floor0
0002bb 940e 04f9 	CALL __GETD1S0
                +
0002bd e0a0     +LDI R26 , LOW ( 0x3F800000 )
0002be e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0002bf e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0002c0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0002c1 940e 03e2 	CALL __SUBF12
                 _0x20E0001:
0002c3 9624      	ADIW R28,4
0002c4 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0002c5 93ba      	ST   -Y,R27
0002c6 93aa      	ST   -Y,R26
0002c7 91e9          ld   r30,y+
0002c8 91f9          ld   r31,y+
0002c9 91a9          ld   r26,y+
0002ca 91b9          ld   r27,y+
0002cb 01cd          movw r24,r26
                 strcpyf0:
0002cc 9005      	lpm  r0,z+
0002cd 920d          st   x+,r0
0002ce 2000          tst  r0
0002cf f7e1          brne strcpyf0
0002d0 01fc          movw r30,r24
0002d1 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _Tempreture:
00026e           	.BYTE 0x4
                 _T:
000272           	.BYTE 0x4
                 _str:
000276           	.BYTE 0xA
                 __seed_G100:
000280           	.BYTE 0x4
                 __base_y_G102:
000284           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
0002d2 e0a0      	LDI  R26,LOW(0)
0002d3 940e 0078 	CALL _read_adc
0002d5 2766      	CLR  R22
0002d6 2777      	CLR  R23
0002d7 940e 03af 	CALL __CDF1
0002d9 01df      	MOVW R26,R30
0002da 01cb      	MOVW R24,R22
                +
0002db ebec     +LDI R30 , LOW ( 0x400374BC )
0002dc e7f4     +LDI R31 , HIGH ( 0x400374BC )
0002dd e063     +LDI R22 , BYTE3 ( 0x400374BC )
0002de e470     +LDI R23 , BYTE4 ( 0x400374BC )
                 	__GETD1N 0x400374BC
0002df 940e 0487 	CALL __DIVF21
0002e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0002e2 93e0 026e 	STS  _Tempreture,R30
0002e4 93f0 026f 	STS  _Tempreture+1,R31
0002e6 9360 0270 	STS  _Tempreture+2,R22
0002e8 9370 0271 	STS  _Tempreture+3,R23
0002ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2:
0002eb 91e0 0272 	LDS  R30,_T
0002ed 91f0 0273 	LDS  R31,_T+1
0002ef 9160 0274 	LDS  R22,_T+2
0002f1 9170 0275 	LDS  R23,_T+3
0002f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0002f4 81ee      	LDD  R30,Y+6
0002f5 81ff      	LDD  R31,Y+6+1
0002f6 93fa      	ST   -Y,R31
0002f7 93ea      	ST   -Y,R30
0002f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
                +
0002f9 87e9     +STD Y + 9 , R30
0002fa 87fa     +STD Y + 9 + 1 , R31
0002fb 876b     +STD Y + 9 + 2 , R22
0002fc 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0002fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
0002fe 81ae      	LDD  R26,Y+6
0002ff 81bf      	LDD  R27,Y+6+1
000300 9611      	ADIW R26,1
000301 83ae      	STD  Y+6,R26
000302 83bf      	STD  Y+6+1,R27
000303 9711      	SBIW R26,1
000304 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
                +
000305 81aa     +LDD R26 , Y + 2
000306 81bb     +LDD R27 , Y + 2 + 1
000307 818c     +LDD R24 , Y + 2 + 2
000308 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
00030a eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00030b ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00030c ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00030d e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00030e 940e 0439 	CALL __MULF12
000310 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
                +
000311 83ea     +STD Y + 2 , R30
000312 83fb     +STD Y + 2 + 1 , R31
000313 836c     +STD Y + 2 + 2 , R22
000314 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000315 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
                +
000316 81ea     +LDD R30 , Y + 2
000317 81fb     +LDD R31 , Y + 2 + 1
000318 816c     +LDD R22 , Y + 2 + 2
000319 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00031a 85a9     +LDD R26 , Y + 9
00031b 85ba     +LDD R27 , Y + 9 + 1
00031c 858b     +LDD R24 , Y + 9 + 2
00031d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00031e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
00031f e0e0     +LDI R30 , LOW ( 0x41200000 )
000320 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000321 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000322 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000323 940e 0439 	CALL __MULF12
000325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000326 85a9     +LDD R26 , Y + 9
000327 85ba     +LDD R27 , Y + 9 + 1
000328 858b     +LDD R24 , Y + 9 + 2
000329 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00032a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00032b 940e 0512 	CALL __SWAPD12
00032d 940e 03e2 	CALL __SUBF12
00032f cfc9      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
000330 940e 0239 	CALL __long_delay_G102
000332 e3a0      	LDI  R26,LOW(48)
000333 940c 023e 	JMP  __lcd_init_write_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000335 940e 01ca 	CALL __lcd_write_data
000337 940c 0239 	JMP  __long_delay_G102
                 
                 
                 	.CSEG
                 _delay_ms:
000339 9610      	adiw r26,0
00033a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00033b ef8a     +LDI R24 , LOW ( 0xFA )
00033c e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00033d 9701     +SBIW R24 , 1
00033e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00033f 95a8      	wdr
000340 9711      	sbiw r26,1
000341 f7c9      	brne __delay_ms0
                 __delay_ms1:
000342 9508      	ret
                 
                 __ANEGF1:
000343 9730      	SBIW R30,0
000344 4060      	SBCI R22,0
000345 4070      	SBCI R23,0
000346 f009      	BREQ __ANEGF10
000347 5870      	SUBI R23,0x80
                 __ANEGF10:
000348 9508      	RET
                 
                 __ROUND_REPACK:
000349 2355      	TST  R21
00034a f442      	BRPL __REPACK
00034b 3850      	CPI  R21,0x80
00034c f411      	BRNE __ROUND_REPACK0
00034d ffe0      	SBRS R30,0
00034e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00034f 9631      	ADIW R30,1
000350 1f69      	ADC  R22,R25
000351 1f79      	ADC  R23,R25
000352 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000353 e850      	LDI  R21,0x80
000354 2757      	EOR  R21,R23
000355 f411      	BRNE __REPACK0
000356 935f      	PUSH R21
000357 c0cf      	RJMP __ZERORES
                 __REPACK0:
000358 3f5f      	CPI  R21,0xFF
000359 f031      	BREQ __REPACK1
00035a 0f66      	LSL  R22
00035b 0c00      	LSL  R0
00035c 9557      	ROR  R21
00035d 9567      	ROR  R22
00035e 2f75      	MOV  R23,R21
00035f 9508      	RET
                 __REPACK1:
000360 935f      	PUSH R21
000361 2000      	TST  R0
000362 f00a      	BRMI __REPACK2
000363 c0cf      	RJMP __MAXRES
                 __REPACK2:
000364 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000365 e850      	LDI  R21,0x80
000366 2e19      	MOV  R1,R25
000367 2215      	AND  R1,R21
000368 0f88      	LSL  R24
000369 1f99      	ROL  R25
00036a 2795      	EOR  R25,R21
00036b 0f55      	LSL  R21
00036c 9587      	ROR  R24
                 
                 __UNPACK1:
00036d e850      	LDI  R21,0x80
00036e 2e07      	MOV  R0,R23
00036f 2205      	AND  R0,R21
000370 0f66      	LSL  R22
000371 1f77      	ROL  R23
000372 2775      	EOR  R23,R21
000373 0f55      	LSL  R21
000374 9567      	ROR  R22
000375 9508      	RET
                 
                 __CFD1U:
000376 9468      	SET
000377 c001      	RJMP __CFD1U0
                 __CFD1:
000378 94e8      	CLT
                 __CFD1U0:
000379 935f      	PUSH R21
00037a dff2      	RCALL __UNPACK1
00037b 3870      	CPI  R23,0x80
00037c f018      	BRLO __CFD10
00037d 3f7f      	CPI  R23,0xFF
00037e f408      	BRCC __CFD10
00037f c0a7      	RJMP __ZERORES
                 __CFD10:
000380 e156      	LDI  R21,22
000381 1b57      	SUB  R21,R23
000382 f4aa      	BRPL __CFD11
000383 9551      	NEG  R21
000384 3058      	CPI  R21,8
000385 f40e      	BRTC __CFD19
000386 3059      	CPI  R21,9
                 __CFD19:
000387 f030      	BRLO __CFD17
000388 efef      	SER  R30
000389 efff      	SER  R31
00038a ef6f      	SER  R22
00038b e77f      	LDI  R23,0x7F
00038c f977      	BLD  R23,7
00038d c01a      	RJMP __CFD15
                 __CFD17:
00038e 2777      	CLR  R23
00038f 2355      	TST  R21
000390 f0b9      	BREQ __CFD15
                 __CFD18:
000391 0fee      	LSL  R30
000392 1fff      	ROL  R31
000393 1f66      	ROL  R22
000394 1f77      	ROL  R23
000395 955a      	DEC  R21
000396 f7d1      	BRNE __CFD18
000397 c010      	RJMP __CFD15
                 __CFD11:
000398 2777      	CLR  R23
                 __CFD12:
000399 3058      	CPI  R21,8
00039a f028      	BRLO __CFD13
00039b 2fef      	MOV  R30,R31
00039c 2ff6      	MOV  R31,R22
00039d 2f67      	MOV  R22,R23
00039e 5058      	SUBI R21,8
00039f cff9      	RJMP __CFD12
                 __CFD13:
0003a0 2355      	TST  R21
0003a1 f031      	BREQ __CFD15
                 __CFD14:
0003a2 9576      	LSR  R23
0003a3 9567      	ROR  R22
0003a4 95f7      	ROR  R31
0003a5 95e7      	ROR  R30
0003a6 955a      	DEC  R21
0003a7 f7d1      	BRNE __CFD14
                 __CFD15:
0003a8 2000      	TST  R0
0003a9 f40a      	BRPL __CFD16
0003aa d141      	RCALL __ANEGD1
                 __CFD16:
0003ab 915f      	POP  R21
0003ac 9508      	RET
                 
                 __CDF1U:
0003ad 9468      	SET
0003ae c001      	RJMP __CDF1U0
                 __CDF1:
0003af 94e8      	CLT
                 __CDF1U0:
0003b0 9730      	SBIW R30,0
0003b1 4060      	SBCI R22,0
0003b2 4070      	SBCI R23,0
0003b3 f0b1      	BREQ __CDF10
0003b4 2400      	CLR  R0
0003b5 f026      	BRTS __CDF11
0003b6 2377      	TST  R23
0003b7 f412      	BRPL __CDF11
0003b8 9400      	COM  R0
0003b9 d132      	RCALL __ANEGD1
                 __CDF11:
0003ba 2e17      	MOV  R1,R23
0003bb e17e      	LDI  R23,30
0003bc 2011      	TST  R1
                 __CDF12:
0003bd f032      	BRMI __CDF13
0003be 957a      	DEC  R23
0003bf 0fee      	LSL  R30
0003c0 1fff      	ROL  R31
0003c1 1f66      	ROL  R22
0003c2 1c11      	ROL  R1
0003c3 cff9      	RJMP __CDF12
                 __CDF13:
0003c4 2fef      	MOV  R30,R31
0003c5 2ff6      	MOV  R31,R22
0003c6 2d61      	MOV  R22,R1
0003c7 935f      	PUSH R21
0003c8 df8a      	RCALL __REPACK
0003c9 915f      	POP  R21
                 __CDF10:
0003ca 9508      	RET
                 
                 __SWAPACC:
0003cb 934f      	PUSH R20
0003cc 01af      	MOVW R20,R30
0003cd 01fd      	MOVW R30,R26
0003ce 01da      	MOVW R26,R20
0003cf 01ab      	MOVW R20,R22
0003d0 01bc      	MOVW R22,R24
0003d1 01ca      	MOVW R24,R20
0003d2 2d40      	MOV  R20,R0
0003d3 2c01      	MOV  R0,R1
0003d4 2e14      	MOV  R1,R20
0003d5 914f      	POP  R20
0003d6 9508      	RET
                 
                 __UADD12:
0003d7 0fea      	ADD  R30,R26
0003d8 1ffb      	ADC  R31,R27
0003d9 1f68      	ADC  R22,R24
0003da 9508      	RET
                 
                 __NEGMAN1:
0003db 95e0      	COM  R30
0003dc 95f0      	COM  R31
0003dd 9560      	COM  R22
0003de 5fef      	SUBI R30,-1
0003df 4fff      	SBCI R31,-1
0003e0 4f6f      	SBCI R22,-1
0003e1 9508      	RET
                 
                 __SUBF12:
0003e2 935f      	PUSH R21
0003e3 df81      	RCALL __UNPACK
0003e4 3890      	CPI  R25,0x80
0003e5 f171      	BREQ __ADDF129
0003e6 e850      	LDI  R21,0x80
0003e7 2615      	EOR  R1,R21
                 
0003e8 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0003e9 935f      	PUSH R21
0003ea df7a      	RCALL __UNPACK
0003eb 3890      	CPI  R25,0x80
0003ec f139      	BREQ __ADDF129
                 
                 __ADDF120:
0003ed 3870      	CPI  R23,0x80
0003ee f121      	BREQ __ADDF128
                 __ADDF121:
0003ef 2f57      	MOV  R21,R23
0003f0 1b59      	SUB  R21,R25
0003f1 f12b      	BRVS __ADDF1211
0003f2 f412      	BRPL __ADDF122
0003f3 dfd7      	RCALL __SWAPACC
0003f4 cffa      	RJMP __ADDF121
                 __ADDF122:
0003f5 3158      	CPI  R21,24
0003f6 f018      	BRLO __ADDF123
0003f7 27aa      	CLR  R26
0003f8 27bb      	CLR  R27
0003f9 2788      	CLR  R24
                 __ADDF123:
0003fa 3058      	CPI  R21,8
0003fb f028      	BRLO __ADDF124
0003fc 2fab      	MOV  R26,R27
0003fd 2fb8      	MOV  R27,R24
0003fe 2788      	CLR  R24
0003ff 5058      	SUBI R21,8
000400 cff9      	RJMP __ADDF123
                 __ADDF124:
000401 2355      	TST  R21
000402 f029      	BREQ __ADDF126
                 __ADDF125:
000403 9586      	LSR  R24
000404 95b7      	ROR  R27
000405 95a7      	ROR  R26
000406 955a      	DEC  R21
000407 f7d9      	BRNE __ADDF125
                 __ADDF126:
000408 2d50      	MOV  R21,R0
000409 2551      	EOR  R21,R1
00040a f072      	BRMI __ADDF127
00040b dfcb      	RCALL __UADD12
00040c f438      	BRCC __ADDF129
00040d 9567      	ROR  R22
00040e 95f7      	ROR  R31
00040f 95e7      	ROR  R30
000410 9573      	INC  R23
000411 f413      	BRVC __ADDF129
000412 c020      	RJMP __MAXRES
                 __ADDF128:
000413 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000414 df3e      	RCALL __REPACK
000415 915f      	POP  R21
000416 9508      	RET
                 __ADDF1211:
000417 f7d8      	BRCC __ADDF128
000418 cffb      	RJMP __ADDF129
                 __ADDF127:
000419 1bea      	SUB  R30,R26
00041a 0bfb      	SBC  R31,R27
00041b 0b68      	SBC  R22,R24
00041c f051      	BREQ __ZERORES
00041d f410      	BRCC __ADDF1210
00041e 9400      	COM  R0
00041f dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000420 2366      	TST  R22
000421 f392      	BRMI __ADDF129
000422 0fee      	LSL  R30
000423 1fff      	ROL  R31
000424 1f66      	ROL  R22
000425 957a      	DEC  R23
000426 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000427 27ee      	CLR  R30
000428 27ff      	CLR  R31
000429 2766      	CLR  R22
00042a 2777      	CLR  R23
00042b 915f      	POP  R21
00042c 9508      	RET
                 
                 __MINRES:
00042d efef      	SER  R30
00042e efff      	SER  R31
00042f e76f      	LDI  R22,0x7F
000430 ef7f      	SER  R23
000431 915f      	POP  R21
000432 9508      	RET
                 
                 __MAXRES:
000433 efef      	SER  R30
000434 efff      	SER  R31
000435 e76f      	LDI  R22,0x7F
000436 e77f      	LDI  R23,0x7F
000437 915f      	POP  R21
000438 9508      	RET
                 
                 __MULF12:
000439 935f      	PUSH R21
00043a df2a      	RCALL __UNPACK
00043b 3870      	CPI  R23,0x80
00043c f351      	BREQ __ZERORES
00043d 3890      	CPI  R25,0x80
00043e f341      	BREQ __ZERORES
00043f 2401      	EOR  R0,R1
000440 9408      	SEC
000441 1f79      	ADC  R23,R25
000442 f423      	BRVC __MULF124
000443 f31c      	BRLT __ZERORES
                 __MULF125:
000444 2000      	TST  R0
000445 f33a      	BRMI __MINRES
000446 cfec      	RJMP __MAXRES
                 __MULF124:
000447 920f      	PUSH R0
000448 931f      	PUSH R17
000449 932f      	PUSH R18
00044a 933f      	PUSH R19
00044b 934f      	PUSH R20
00044c 2711      	CLR  R17
00044d 2722      	CLR  R18
00044e 2799      	CLR  R25
00044f 9f68      	MUL  R22,R24
000450 01a0      	MOVW R20,R0
000451 9f8f      	MUL  R24,R31
000452 2d30      	MOV  R19,R0
000453 0d41      	ADD  R20,R1
000454 1f59      	ADC  R21,R25
000455 9f6b      	MUL  R22,R27
000456 0d30      	ADD  R19,R0
000457 1d41      	ADC  R20,R1
000458 1f59      	ADC  R21,R25
000459 9f8e      	MUL  R24,R30
00045a d027      	RCALL __MULF126
00045b 9fbf      	MUL  R27,R31
00045c d025      	RCALL __MULF126
00045d 9f6a      	MUL  R22,R26
00045e d023      	RCALL __MULF126
00045f 9fbe      	MUL  R27,R30
000460 d01d      	RCALL __MULF127
000461 9faf      	MUL  R26,R31
000462 d01b      	RCALL __MULF127
000463 9fae      	MUL  R26,R30
000464 0d11      	ADD  R17,R1
000465 1f29      	ADC  R18,R25
000466 1f39      	ADC  R19,R25
000467 1f49      	ADC  R20,R25
000468 1f59      	ADC  R21,R25
000469 2fe3      	MOV  R30,R19
00046a 2ff4      	MOV  R31,R20
00046b 2f65      	MOV  R22,R21
00046c 2f52      	MOV  R21,R18
00046d 914f      	POP  R20
00046e 913f      	POP  R19
00046f 912f      	POP  R18
000470 911f      	POP  R17
000471 900f      	POP  R0
000472 2366      	TST  R22
000473 f02a      	BRMI __MULF122
000474 0f55      	LSL  R21
000475 1fee      	ROL  R30
000476 1fff      	ROL  R31
000477 1f66      	ROL  R22
000478 c002      	RJMP __MULF123
                 __MULF122:
000479 9573      	INC  R23
00047a f24b      	BRVS __MULF125
                 __MULF123:
00047b decd      	RCALL __ROUND_REPACK
00047c 915f      	POP  R21
00047d 9508      	RET
                 
                 __MULF127:
00047e 0d10      	ADD  R17,R0
00047f 1d21      	ADC  R18,R1
000480 1f39      	ADC  R19,R25
000481 c002      	RJMP __MULF128
                 __MULF126:
000482 0d20      	ADD  R18,R0
000483 1d31      	ADC  R19,R1
                 __MULF128:
000484 1f49      	ADC  R20,R25
000485 1f59      	ADC  R21,R25
000486 9508      	RET
                 
                 __DIVF21:
000487 935f      	PUSH R21
000488 dedc      	RCALL __UNPACK
000489 3870      	CPI  R23,0x80
00048a f421      	BRNE __DIVF210
00048b 2011      	TST  R1
                 __DIVF211:
00048c f40a      	BRPL __DIVF219
00048d cf9f      	RJMP __MINRES
                 __DIVF219:
00048e cfa4      	RJMP __MAXRES
                 __DIVF210:
00048f 3890      	CPI  R25,0x80
000490 f409      	BRNE __DIVF218
                 __DIVF217:
000491 cf95      	RJMP __ZERORES
                 __DIVF218:
000492 2401      	EOR  R0,R1
000493 9408      	SEC
000494 0b97      	SBC  R25,R23
000495 f41b      	BRVC __DIVF216
000496 f3d4      	BRLT __DIVF217
000497 2000      	TST  R0
000498 cff3      	RJMP __DIVF211
                 __DIVF216:
000499 2f79      	MOV  R23,R25
00049a 931f      	PUSH R17
00049b 932f      	PUSH R18
00049c 933f      	PUSH R19
00049d 934f      	PUSH R20
00049e 2411      	CLR  R1
00049f 2711      	CLR  R17
0004a0 2722      	CLR  R18
0004a1 2733      	CLR  R19
0004a2 2744      	CLR  R20
0004a3 2755      	CLR  R21
0004a4 e290      	LDI  R25,32
                 __DIVF212:
0004a5 17ae      	CP   R26,R30
0004a6 07bf      	CPC  R27,R31
0004a7 0786      	CPC  R24,R22
0004a8 0741      	CPC  R20,R17
0004a9 f030      	BRLO __DIVF213
0004aa 1bae      	SUB  R26,R30
0004ab 0bbf      	SBC  R27,R31
0004ac 0b86      	SBC  R24,R22
0004ad 0b41      	SBC  R20,R17
0004ae 9408      	SEC
0004af c001      	RJMP __DIVF214
                 __DIVF213:
0004b0 9488      	CLC
                 __DIVF214:
0004b1 1f55      	ROL  R21
0004b2 1f22      	ROL  R18
0004b3 1f33      	ROL  R19
0004b4 1c11      	ROL  R1
0004b5 1faa      	ROL  R26
0004b6 1fbb      	ROL  R27
0004b7 1f88      	ROL  R24
0004b8 1f44      	ROL  R20
0004b9 959a      	DEC  R25
0004ba f751      	BRNE __DIVF212
0004bb 01f9      	MOVW R30,R18
0004bc 2d61      	MOV  R22,R1
0004bd 914f      	POP  R20
0004be 913f      	POP  R19
0004bf 912f      	POP  R18
0004c0 911f      	POP  R17
0004c1 2366      	TST  R22
0004c2 f032      	BRMI __DIVF215
0004c3 0f55      	LSL  R21
0004c4 1fee      	ROL  R30
0004c5 1fff      	ROL  R31
0004c6 1f66      	ROL  R22
0004c7 957a      	DEC  R23
0004c8 f243      	BRVS __DIVF217
                 __DIVF215:
0004c9 de7f      	RCALL __ROUND_REPACK
0004ca 915f      	POP  R21
0004cb 9508      	RET
                 
                 __CMPF12:
0004cc 2399      	TST  R25
0004cd f09a      	BRMI __CMPF120
0004ce 2377      	TST  R23
0004cf f042      	BRMI __CMPF121
0004d0 1797      	CP   R25,R23
0004d1 f048      	BRLO __CMPF122
0004d2 f429      	BRNE __CMPF121
0004d3 17ae      	CP   R26,R30
0004d4 07bf      	CPC  R27,R31
0004d5 0786      	CPC  R24,R22
0004d6 f020      	BRLO __CMPF122
0004d7 f031      	BREQ __CMPF123
                 __CMPF121:
0004d8 9498      	CLZ
0004d9 9488      	CLC
0004da 9508      	RET
                 __CMPF122:
0004db 9498      	CLZ
0004dc 9408      	SEC
0004dd 9508      	RET
                 __CMPF123:
0004de 9418      	SEZ
0004df 9488      	CLC
0004e0 9508      	RET
                 __CMPF120:
0004e1 2377      	TST  R23
0004e2 f7c2      	BRPL __CMPF122
0004e3 1797      	CP   R25,R23
0004e4 f398      	BRLO __CMPF121
0004e5 f7a9      	BRNE __CMPF122
0004e6 17ea      	CP   R30,R26
0004e7 07fb      	CPC  R31,R27
0004e8 0768      	CPC  R22,R24
0004e9 f388      	BRLO __CMPF122
0004ea f399      	BREQ __CMPF123
0004eb cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0004ec 95f0      	COM  R31
0004ed 9560      	COM  R22
0004ee 9570      	COM  R23
0004ef 95e1      	NEG  R30
0004f0 4fff      	SBCI R31,-1
0004f1 4f6f      	SBCI R22,-1
0004f2 4f7f      	SBCI R23,-1
0004f3 9508      	RET
                 
                 __CWD1:
0004f4 2f6f      	MOV  R22,R31
0004f5 0f66      	ADD  R22,R22
0004f6 0b66      	SBC  R22,R22
0004f7 2f76      	MOV  R23,R22
0004f8 9508      	RET
                 
                 __GETD1S0:
0004f9 81e8      	LD   R30,Y
0004fa 81f9      	LDD  R31,Y+1
0004fb 816a      	LDD  R22,Y+2
0004fc 817b      	LDD  R23,Y+3
0004fd 9508      	RET
                 
                 __GETD2S0:
0004fe 81a8      	LD   R26,Y
0004ff 81b9      	LDD  R27,Y+1
000500 818a      	LDD  R24,Y+2
000501 819b      	LDD  R25,Y+3
000502 9508      	RET
                 
                 __PUTD1S0:
000503 83e8      	ST   Y,R30
000504 83f9      	STD  Y+1,R31
000505 836a      	STD  Y+2,R22
000506 837b      	STD  Y+3,R23
000507 9508      	RET
                 
                 __PUTPARD1:
000508 937a      	ST   -Y,R23
000509 936a      	ST   -Y,R22
00050a 93fa      	ST   -Y,R31
00050b 93ea      	ST   -Y,R30
00050c 9508      	RET
                 
                 __PUTPARD2:
00050d 939a      	ST   -Y,R25
00050e 938a      	ST   -Y,R24
00050f 93ba      	ST   -Y,R27
000510 93aa      	ST   -Y,R26
000511 9508      	RET
                 
                 __SWAPD12:
000512 2e18      	MOV  R1,R24
000513 2f86      	MOV  R24,R22
000514 2d61      	MOV  R22,R1
000515 2e19      	MOV  R1,R25
000516 2f97      	MOV  R25,R23
000517 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000518 2e1b      	MOV  R1,R27
000519 2fbf      	MOV  R27,R31
00051a 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00051b 2e1a      	MOV  R1,R26
00051c 2fae      	MOV  R26,R30
00051d 2de1      	MOV  R30,R1
00051e 9508      	RET
                 
                 __CPD12:
00051f 17ea      	CP   R30,R26
000520 07fb      	CPC  R31,R27
000521 0768      	CPC  R22,R24
000522 0779      	CPC  R23,R25
000523 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  78 r23:  72 
r24:  49 r25:  49 r26: 114 r27:  54 r28:   7 r29:   1 r30: 162 r31:  70 
x  :  11 y  : 124 z  :   9 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   8 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  25 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   2 brmi  :   9 brne  :  24 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 106 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  33 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 
cp    :   8 cpc   :  15 cpi   :  28 cpse  :   0 dec   :  11 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  10 inc   :   4 jmp   :  27 ld    :  22 ldd   :  55 ldi   : 100 
lds   :   8 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  54 movw  :  17 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   3 out   :  20 pop   :  20 push  :  20 rcall :  34 ret   :  54 
reti  :   0 rjmp  :  47 rol   :  24 ror   :  15 sbc   :   7 sbci  :  10 
sbi   :  13 sbic  :   0 sbis  :   3 sbiw  :  10 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  39 std   :  20 sts   :  10 sub   :   4 subi  :  15 swap  :   2 
tst   :  19 wdr   :   1 
Instructions used: 78 out of 116 (67.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000a48   2566     66   2632   32768   8.0%
[.dseg] 0x000060 0x000288      0     40     40    2048   2.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
