
AVRASM ver. 2.1.30  E:\codevision\1\C\RXD\Debug\List\RXD.asm Sat Jun 05 14:44:12 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2020060:
E:\codevision\1\C\RXD\Debug\List\RXD.asm(1123): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2020000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\codevision\1\C\RXD\Debug\List\RXD.asm(1126): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0001      	.DW  0x01
00003a 0276      	.DW  __seed_G101
00003b 0066      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 006a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;float temp,temp1;
                 ;char str[10];
                 ;float D;
                 ;void main(void)
                 ; 0000 000A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000B DDRD.0=0;
00006a 9888      	CBI  0x11,0
                 ; 0000 000C DDRC = 0xFF;
00006b efef      	LDI  R30,LOW(255)
00006c bbe4      	OUT  0x14,R30
                 ; 0000 000D 
                 ; 0000 000E UCSRB = 0x10;
00006d e1e0      	LDI  R30,LOW(16)
00006e b9ea      	OUT  0xA,R30
                 ; 0000 000F UCSRC = 0x86;
00006f e8e6      	LDI  R30,LOW(134)
000070 bde0      	OUT  0x20,R30
                 ; 0000 0010 UBRRL = 71;
000071 e4e7      	LDI  R30,LOW(71)
000072 b9e9      	OUT  0x9,R30
                 ; 0000 0011 UBRRH = 0;
000073 e0e0      	LDI  R30,LOW(0)
000074 bde0      	OUT  0x20,R30
                 ; 0000 0012 
                 ; 0000 0013 
                 ; 0000 0014 while (1){
                 _0x5:
                 ; 0000 0015    gets(str,10);
000075 940e 022d 	CALL SUBOPT_0x0
                 ; 0000 0016    temp = atof(str);
000077 93e0 0260 	STS  _temp,R30
000079 93f0 0261 	STS  _temp+1,R31
00007b 9360 0262 	STS  _temp+2,R22
00007d 9370 0263 	STS  _temp+3,R23
                 ; 0000 0017    D = (25*temp - 575)/100;
00007f 940e 0239 	CALL SUBOPT_0x1
                +
000081 e0a0     +LDI R26 , LOW ( 0x41C80000 )
000082 e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000083 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000084 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
000085 940e 0383 	CALL __MULF12
000087 01df      	MOVW R26,R30
000088 01cb      	MOVW R24,R22
                +
000089 e0e0     +LDI R30 , LOW ( 0x440FC000 )
00008a ecf0     +LDI R31 , HIGH ( 0x440FC000 )
00008b e06f     +LDI R22 , BYTE3 ( 0x440FC000 )
00008c e474     +LDI R23 , BYTE4 ( 0x440FC000 )
                 	__GETD1N 0x440FC000
00008d 940e 0448 	CALL __SWAPD12
00008f 940e 032c 	CALL __SUBF12
000091 01df      	MOVW R26,R30
000092 01cb      	MOVW R24,R22
                +
000093 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000094 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000095 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000096 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000097 940e 03d1 	CALL __DIVF21
000099 93e0 0272 	STS  _D,R30
00009b 93f0 0273 	STS  _D+1,R31
00009d 9360 0274 	STS  _D+2,R22
00009f 9370 0275 	STS  _D+3,R23
                 ; 0000 0018    while(1){
                 _0x8:
                 ; 0000 0019     gets(str,10);
0000a1 940e 022d 	CALL SUBOPT_0x0
                 ; 0000 001A     temp1 = atof(str);
0000a3 93e0 0264 	STS  _temp1,R30
0000a5 93f0 0265 	STS  _temp1+1,R31
0000a7 9360 0266 	STS  _temp1+2,R22
0000a9 9370 0267 	STS  _temp1+3,R23
                 ; 0000 001B     if(temp1 != temp)
0000ab 940e 0239 	CALL SUBOPT_0x1
0000ad 91a0 0264 	LDS  R26,_temp1
0000af 91b0 0265 	LDS  R27,_temp1+1
0000b1 9180 0266 	LDS  R24,_temp1+2
0000b3 9190 0267 	LDS  R25,_temp1+3
0000b5 940e 045b 	CALL __CPD12
0000b7 f581      	BRNE _0xA
                 ; 0000 001C         break;
                 ; 0000 001D     else{
                 ; 0000 001E         if(D<1 && D>0){
0000b8 940e 0242 	CALL SUBOPT_0x2
0000ba 940e 024b 	CALL SUBOPT_0x3
0000bc 940e 0416 	CALL __CMPF12
0000be f428      	BRSH _0xE
0000bf 940e 0242 	CALL SUBOPT_0x2
0000c1 940e 0455 	CALL __CPD02
0000c3 f00c      	BRLT _0xF
                 _0xE:
0000c4 c017      	RJMP _0xD
                 _0xF:
                 ; 0000 001F             PORTC = 0x01;
0000c5 e0e1      	LDI  R30,LOW(1)
0000c6 bbe5      	OUT  0x15,R30
                 ; 0000 0020             delay_ms(50*D);
0000c7 91e0 0272 	LDS  R30,_D
0000c9 91f0 0273 	LDS  R31,_D+1
0000cb 9160 0274 	LDS  R22,_D+2
0000cd 9170 0275 	LDS  R23,_D+3
0000cf 940e 0250 	CALL SUBOPT_0x4
                 ; 0000 0021             PORTC = 0x00;
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 bbe5      	OUT  0x15,R30
                 ; 0000 0022             delay_ms((1-D)*50);
0000d3 940e 0242 	CALL SUBOPT_0x2
0000d5 940e 024b 	CALL SUBOPT_0x3
0000d7 940e 032c 	CALL __SUBF12
0000d9 940e 0250 	CALL SUBOPT_0x4
                 ; 0000 0023             }
                 ; 0000 0024         else if(D>=1)
0000db c00b      	RJMP _0x10
                 _0xD:
0000dc 940e 0242 	CALL SUBOPT_0x2
0000de 940e 024b 	CALL SUBOPT_0x3
0000e0 940e 0416 	CALL __CMPF12
0000e2 f010      	BRLO _0x11
                 ; 0000 0025             PORTC = 0x01;
0000e3 e0e1      	LDI  R30,LOW(1)
0000e4 c001      	RJMP _0x14
                 ; 0000 0026         else
                 _0x11:
                 ; 0000 0027             PORTC = 0x00;
0000e5 e0e0      	LDI  R30,LOW(0)
                 _0x14:
0000e6 bbe5      	OUT  0x15,R30
                 ; 0000 0028     }
                 _0x10:
                 ; 0000 0029    }
0000e7 cfb9      	RJMP _0x8
                 _0xA:
                 ; 0000 002A 
                 ; 0000 002B    //delay_ms(50);
                 ; 0000 002C }
0000e8 cf8c      	RJMP _0x5
                 ; 0000 002D 
                 ; 0000 002E }
                 _0x13:
0000e9 cfff      	RJMP _0x13
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
0000ea 9b5f           sbis usr,rxc
0000eb cffe           rjmp getchar0
0000ec b1ec           in   r30,udr
0000ed 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
0000ee 93ba      	ST   -Y,R27
0000ef 93aa      	ST   -Y,R26
0000f0 940e 0460 	CALL __SAVELOCR6
                +
0000f2 810e     +LDD R16 , Y + 6
0000f3 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
0000f4 8528     +LDD R18 , Y + 8
0000f5 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
0000f6 2e00      	MOV  R0,R16
0000f7 2a01      	OR   R0,R17
0000f8 f0d9      	BREQ _0x200000B
                 _0x200000C:
0000f9 dff0      	RCALL _getchar
0000fa 2f5e      	MOV  R21,R30
0000fb 3058      	CPI  R21,8
0000fc f451      	BRNE _0x200000D
0000fd 81ae      	LDD  R26,Y+6
0000fe 81bf      	LDD  R27,Y+6+1
0000ff 170a      	CP   R16,R26
000100 071b      	CPC  R17,R27
000101 f420      	BRSH _0x200000E
                +
000102 5021     +SUBI R18 , LOW ( 1 )
000103 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000104 5f0f     +SUBI R16 , LOW ( - 1 )
000105 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
000106 cff2      	RJMP _0x200000C
                 _0x200000D:
000107 305a      	CPI  R21,10
000108 f059      	BREQ _0x200000B
000109 933f      	PUSH R19
00010a 932f      	PUSH R18
                +
00010b 5f2f     +SUBI R18 , LOW ( - 1 )
00010c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00010d 2fe5      	MOV  R30,R21
00010e 91af      	POP  R26
00010f 91bf      	POP  R27
000110 93ec      	ST   X,R30
                +
000111 5001     +SUBI R16 , LOW ( 1 )
000112 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000113 cfe2      	RJMP _0x2000009
                 _0x200000B:
000114 01d9      	MOVW R26,R18
000115 e0e0      	LDI  R30,LOW(0)
000116 93ec      	ST   X,R30
000117 85e8      	LDD  R30,Y+8
000118 85f9      	LDD  R31,Y+8+1
000119 940e 0467 	CALL __LOADLOCR6
00011b 962a      	ADIW R28,10
00011c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atof:
                 ; .FSTART _atof
00011d 93ba      	ST   -Y,R27
00011e 93aa      	ST   -Y,R26
00011f 972a      	SBIW R28,10
000120 940e 0460 	CALL __SAVELOCR6
000122 e0e0      	LDI  R30,LOW(0)
                +
000123 87e8     +STD Y + 8 , R30
000124 87e9     +STD Y + 8 + 1 , R30
000125 87ea     +STD Y + 8 + 2 , R30
000126 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x202003C:
000127 89a8      	LDD  R26,Y+16
000128 89b9      	LDD  R27,Y+16+1
000129 91ec      	LD   R30,X
00012a 2f5e      	MOV  R21,R30
00012b 2fae      	MOV  R26,R30
00012c 940e 0222 	CALL _isspace
00012e 30e0      	CPI  R30,0
00012f f031      	BREQ _0x202003E
000130 89e8      	LDD  R30,Y+16
000131 89f9      	LDD  R31,Y+16+1
000132 9631      	ADIW R30,1
000133 8be8      	STD  Y+16,R30
000134 8bf9      	STD  Y+16+1,R31
000135 cff1      	RJMP _0x202003C
                 _0x202003E:
000136 e0e0      	LDI  R30,LOW(0)
000137 83ef      	STD  Y+7,R30
000138 325b      	CPI  R21,43
000139 f021      	BREQ _0x202006C
00013a 325d      	CPI  R21,45
00013b f439      	BRNE _0x2020041
00013c e0e1      	LDI  R30,LOW(1)
00013d 83ef      	STD  Y+7,R30
                 _0x202006C:
00013e 89e8      	LDD  R30,Y+16
00013f 89f9      	LDD  R31,Y+16+1
000140 9631      	ADIW R30,1
000141 8be8      	STD  Y+16,R30
000142 8bf9      	STD  Y+16+1,R31
                 _0x2020041:
000143 e0e0      	LDI  R30,LOW(0)
000144 2f4e      	MOV  R20,R30
000145 2f5e      	MOV  R21,R30
                +
000146 8908     +LDD R16 , Y + 16
000147 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2020042:
000148 89a8      	LDD  R26,Y+16
000149 89b9      	LDD  R27,Y+16+1
00014a 91ac      	LD   R26,X
00014b 940e 0219 	CALL _isdigit
00014d 30e0      	CPI  R30,0
00014e f449      	BRNE _0x2020045
00014f 89a8      	LDD  R26,Y+16
000150 89b9      	LDD  R27,Y+16+1
000151 91ac      	LD   R26,X
000152 e2ee      	LDI  R30,LOW(46)
000153 940e 0443 	CALL __EQB12
000155 2f5e      	MOV  R21,R30
000156 30e0      	CPI  R30,0
000157 f039      	BREQ _0x2020044
                 _0x2020045:
000158 2b45      	OR   R20,R21
000159 89e8      	LDD  R30,Y+16
00015a 89f9      	LDD  R31,Y+16+1
00015b 9631      	ADIW R30,1
00015c 8be8      	STD  Y+16,R30
00015d 8bf9      	STD  Y+16+1,R31
00015e cfe9      	RJMP _0x2020042
                 _0x2020044:
                +
00015f 8928     +LDD R18 , Y + 16
000160 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
000161 3040      	CPI  R20,0
000162 f129      	BREQ _0x2020047
000163 89e8      	LDD  R30,Y+16
000164 89f9      	LDD  R31,Y+16+1
000165 9731      	SBIW R30,1
000166 8be8      	STD  Y+16,R30
000167 8bf9      	STD  Y+16+1,R31
                 _0x2020048:
000168 89a8      	LDD  R26,Y+16
000169 89b9      	LDD  R27,Y+16+1
00016a 91ac      	LD   R26,X
00016b 32ae      	CPI  R26,LOW(0x2E)
00016c f0d9      	BREQ _0x202004A
00016d 89a8      	LDD  R26,Y+16
00016e 89b9      	LDD  R27,Y+16+1
00016f 91ec      	LD   R30,X
000170 e0f0      	LDI  R31,0
000171 97f0      	SBIW R30,48
000172 940e 025b 	CALL SUBOPT_0x5
000174 940e 043e 	CALL __CWD1
000176 940e 02f9 	CALL __CDF1
000178 940e 0333 	CALL __ADDF12
00017a 01df      	MOVW R26,R30
00017b 01cb      	MOVW R24,R22
00017c 940e 0260 	CALL SUBOPT_0x6
00017e 940e 03d1 	CALL __DIVF21
000180 940e 0265 	CALL SUBOPT_0x7
000182 89e8      	LDD  R30,Y+16
000183 89f9      	LDD  R31,Y+16+1
000184 9731      	SBIW R30,1
000185 8be8      	STD  Y+16,R30
000186 8bf9      	STD  Y+16+1,R31
000187 cfe0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000188 940e 026a 	CALL SUBOPT_0x8
                 _0x202004B:
00018a 89a8      	LDD  R26,Y+16
00018b 89b9      	LDD  R27,Y+16+1
00018c 9711      	SBIW R26,1
00018d 8ba8      	STD  Y+16,R26
00018e 8bb9      	STD  Y+16+1,R27
00018f 17a0      	CP   R26,R16
000190 07b1      	CPC  R27,R17
000191 f0a0      	BRLO _0x202004D
000192 91ec      	LD   R30,X
000193 e0f0      	LDI  R31,0
000194 97f0      	SBIW R30,48
000195 940e 0270 	CALL SUBOPT_0x9
000197 940e 043e 	CALL __CWD1
000199 940e 02f9 	CALL __CDF1
00019b 940e 0383 	CALL __MULF12
00019d 940e 025b 	CALL SUBOPT_0x5
00019f 940e 0333 	CALL __ADDF12
0001a1 940e 0265 	CALL SUBOPT_0x7
0001a3 940e 0275 	CALL SUBOPT_0xA
0001a5 cfe4      	RJMP _0x202004B
                 _0x202004D:
0001a6 01d9      	MOVW R26,R18
                +
0001a7 5f2f     +SUBI R18 , LOW ( - 1 )
0001a8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a9 915c      	LD   R21,X
0001aa 3655      	CPI  R21,101
0001ab f019      	BREQ _0x202004F
0001ac 3455      	CPI  R21,69
0001ad f009      	BREQ _0x202004F
0001ae c057      	RJMP _0x202004E
                 _0x202004F:
0001af e0e0      	LDI  R30,LOW(0)
0001b0 2f4e      	MOV  R20,R30
0001b1 83ee      	STD  Y+6,R30
0001b2 01d9      	MOVW R26,R18
0001b3 915c      	LD   R21,X
0001b4 325b      	CPI  R21,43
0001b5 f021      	BREQ _0x202006D
0001b6 325d      	CPI  R21,45
0001b7 f421      	BRNE _0x2020053
0001b8 e0e1      	LDI  R30,LOW(1)
0001b9 83ee      	STD  Y+6,R30
                 _0x202006D:
                +
0001ba 5f2f     +SUBI R18 , LOW ( - 1 )
0001bb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2020053:
                 _0x2020054:
0001bc 01d9      	MOVW R26,R18
                +
0001bd 5f2f     +SUBI R18 , LOW ( - 1 )
0001be 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001bf 91ec      	LD   R30,X
0001c0 2f5e      	MOV  R21,R30
0001c1 2fae      	MOV  R26,R30
0001c2 940e 0219 	CALL _isdigit
0001c4 30e0      	CPI  R30,0
0001c5 f039      	BREQ _0x2020056
0001c6 e0aa      	LDI  R26,LOW(10)
0001c7 024a      	MULS R20,R26
0001c8 01f0      	MOVW R30,R0
0001c9 0fe5      	ADD  R30,R21
0001ca 53e0      	SUBI R30,LOW(48)
0001cb 2f4e      	MOV  R20,R30
0001cc cfef      	RJMP _0x2020054
                 _0x2020056:
0001cd 3247      	CPI  R20,39
0001ce f068      	BRLO _0x2020057
0001cf 81ef      	LDD  R30,Y+7
0001d0 30e0      	CPI  R30,0
0001d1 f029      	BREQ _0x2020058
                +
0001d2 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0001d3 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0001d4 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0001d5 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0001d6 c03e      	RJMP _0x20A0001
                 _0x2020058:
                +
0001d7 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
0001d8 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
0001d9 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
0001da e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
0001db c039      	RJMP _0x20A0001
                 _0x2020057:
0001dc e250      	LDI  R21,LOW(32)
0001dd 940e 026a 	CALL SUBOPT_0x8
                 _0x2020059:
0001df 3050      	CPI  R21,0
0001e0 f089      	BREQ _0x202005B
0001e1 940e 027e 	CALL SUBOPT_0xB
0001e3 940e 0270 	CALL SUBOPT_0x9
0001e5 940e 0383 	CALL __MULF12
                +
0001e7 87ec     +STD Y + 12 , R30
0001e8 87fd     +STD Y + 12 + 1 , R31
0001e9 876e     +STD Y + 12 + 2 , R22
0001ea 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0001eb 2fe4      	MOV  R30,R20
0001ec 23e5      	AND  R30,R21
0001ed f011      	BREQ _0x202005C
0001ee 940e 0275 	CALL SUBOPT_0xA
                 _0x202005C:
0001f0 9556      	LSR  R21
0001f1 cfed      	RJMP _0x2020059
                 _0x202005B:
0001f2 81ee      	LDD  R30,Y+6
0001f3 30e0      	CPI  R30,0
0001f4 f039      	BREQ _0x202005D
0001f5 940e 027e 	CALL SUBOPT_0xB
0001f7 940e 025b 	CALL SUBOPT_0x5
0001f9 940e 03d1 	CALL __DIVF21
0001fb c006      	RJMP _0x202006E
                 _0x202005D:
0001fc 940e 027e 	CALL SUBOPT_0xB
0001fe 940e 025b 	CALL SUBOPT_0x5
000200 940e 0383 	CALL __MULF12
                 _0x202006E:
                +
000202 87e8     +STD Y + 8 , R30
000203 87f9     +STD Y + 8 + 1 , R31
000204 876a     +STD Y + 8 + 2 , R22
000205 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x202004E:
000206 81ef      	LDD  R30,Y+7
000207 30e0      	CPI  R30,0
000208 f041      	BREQ _0x202005F
                +
000209 85e8     +LDD R30 , Y + 8
00020a 85f9     +LDD R31 , Y + 8 + 1
00020b 856a     +LDD R22 , Y + 8 + 2
00020c 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00020d 940e 028d 	CALL __ANEGF1
00020f 940e 0265 	CALL SUBOPT_0x7
                 _0x202005F:
                +
000211 85e8     +LDD R30 , Y + 8
000212 85f9     +LDD R31 , Y + 8 + 1
000213 856a     +LDD R22 , Y + 8 + 2
000214 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                 _0x20A0001:
000215 940e 0467 	CALL __LOADLOCR6
000217 9662      	ADIW R28,18
000218 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000219 93aa      	ST   -Y,R26
00021a e0e1          ldi  r30,1
00021b 91f9          ld   r31,y+
00021c 33f0          cpi  r31,'0'
00021d f010          brlo isdigit0
00021e 33fa          cpi  r31,'9'+1
00021f f008          brlo isdigit1
                 isdigit0:
000220 27ee          clr  r30
                 isdigit1:
000221 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000222 93aa      	ST   -Y,R26
000223 e0e1          ldi  r30,1
000224 91f9          ld   r31,y+
000225 32f0          cpi  r31,' '
000226 f029          breq isspace1
000227 30f9          cpi  r31,9
000228 f010          brlo isspace0
000229 30fe          cpi  r31,13+1
00022a f008          brlo isspace1
                 isspace0:
00022b 27ee          clr  r30
                 isspace1:
00022c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _temp:
000260           	.BYTE 0x4
                 _temp1:
000264           	.BYTE 0x4
                 _str:
000268           	.BYTE 0xA
                 _D:
000272           	.BYTE 0x4
                 __seed_G101:
000276           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
00022d e6e8      	LDI  R30,LOW(_str)
00022e e0f2      	LDI  R31,HIGH(_str)
00022f 93fa      	ST   -Y,R31
000230 93ea      	ST   -Y,R30
000231 e0aa      	LDI  R26,LOW(10)
000232 e0b0      	LDI  R27,0
000233 940e 00ee 	CALL _gets
000235 e6a8      	LDI  R26,LOW(_str)
000236 e0b2      	LDI  R27,HIGH(_str)
000237 940c 011d 	JMP  _atof
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000239 91e0 0260 	LDS  R30,_temp
00023b 91f0 0261 	LDS  R31,_temp+1
00023d 9160 0262 	LDS  R22,_temp+2
00023f 9170 0263 	LDS  R23,_temp+3
000241 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2:
000242 91a0 0272 	LDS  R26,_D
000244 91b0 0273 	LDS  R27,_D+1
000246 9180 0274 	LDS  R24,_D+2
000248 9190 0275 	LDS  R25,_D+3
00024a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
                +
00024b e0e0     +LDI R30 , LOW ( 0x3F800000 )
00024c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00024d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00024e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00024f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
                +
000250 e0a0     +LDI R26 , LOW ( 0x42480000 )
000251 e0b0     +LDI R27 , HIGH ( 0x42480000 )
000252 e488     +LDI R24 , BYTE3 ( 0x42480000 )
000253 e492     +LDI R25 , BYTE4 ( 0x42480000 )
                 	__GETD2N 0x42480000
000254 940e 0383 	CALL __MULF12
000256 940e 02c0 	CALL __CFD1U
000258 01df      	MOVW R26,R30
000259 940c 0283 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
00025b 85a8     +LDD R26 , Y + 8
00025c 85b9     +LDD R27 , Y + 8 + 1
00025d 858a     +LDD R24 , Y + 8 + 2
00025e 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00025f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000260 e0e0     +LDI R30 , LOW ( 0x41200000 )
000261 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000262 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000263 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000265 87e8     +STD Y + 8 , R30
000266 87f9     +STD Y + 8 + 1 , R31
000267 876a     +STD Y + 8 + 2 , R22
000268 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00026a dfe0      	RCALL SUBOPT_0x3
                +
00026b 87ec     +STD Y + 12 , R30
00026c 87fd     +STD Y + 12 + 1 , R31
00026d 876e     +STD Y + 12 + 2 , R22
00026e 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00026f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
                +
000270 85ac     +LDD R26 , Y + 12
000271 85bd     +LDD R27 , Y + 12 + 1
000272 858e     +LDD R24 , Y + 12 + 2
000273 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000274 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000275 dffa      	RCALL SUBOPT_0x9
000276 dfe9      	RCALL SUBOPT_0x6
000277 940e 0383 	CALL __MULF12
                +
000279 87ec     +STD Y + 12 , R30
00027a 87fd     +STD Y + 12 + 1 , R31
00027b 876e     +STD Y + 12 + 2 , R22
00027c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00027d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
00027e 85ec     +LDD R30 , Y + 12
00027f 85fd     +LDD R31 , Y + 12 + 1
000280 856e     +LDD R22 , Y + 12 + 2
000281 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000282 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000283 9610      	adiw r26,0
000284 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000285 ec8d     +LDI R24 , LOW ( 0xACD )
000286 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000287 9701     +SBIW R24 , 1
000288 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000289 95a8      	wdr
00028a 9711      	sbiw r26,1
00028b f7c9      	brne __delay_ms0
                 __delay_ms1:
00028c 9508      	ret
                 
                 __ANEGF1:
00028d 9730      	SBIW R30,0
00028e 4060      	SBCI R22,0
00028f 4070      	SBCI R23,0
000290 f009      	BREQ __ANEGF10
000291 5870      	SUBI R23,0x80
                 __ANEGF10:
000292 9508      	RET
                 
                 __ROUND_REPACK:
000293 2355      	TST  R21
000294 f442      	BRPL __REPACK
000295 3850      	CPI  R21,0x80
000296 f411      	BRNE __ROUND_REPACK0
000297 ffe0      	SBRS R30,0
000298 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000299 9631      	ADIW R30,1
00029a 1f69      	ADC  R22,R25
00029b 1f79      	ADC  R23,R25
00029c f06b      	BRVS __REPACK1
                 
                 __REPACK:
00029d e850      	LDI  R21,0x80
00029e 2757      	EOR  R21,R23
00029f f411      	BRNE __REPACK0
0002a0 935f      	PUSH R21
0002a1 c0cf      	RJMP __ZERORES
                 __REPACK0:
0002a2 3f5f      	CPI  R21,0xFF
0002a3 f031      	BREQ __REPACK1
0002a4 0f66      	LSL  R22
0002a5 0c00      	LSL  R0
0002a6 9557      	ROR  R21
0002a7 9567      	ROR  R22
0002a8 2f75      	MOV  R23,R21
0002a9 9508      	RET
                 __REPACK1:
0002aa 935f      	PUSH R21
0002ab 2000      	TST  R0
0002ac f00a      	BRMI __REPACK2
0002ad c0cf      	RJMP __MAXRES
                 __REPACK2:
0002ae c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0002af e850      	LDI  R21,0x80
0002b0 2e19      	MOV  R1,R25
0002b1 2215      	AND  R1,R21
0002b2 0f88      	LSL  R24
0002b3 1f99      	ROL  R25
0002b4 2795      	EOR  R25,R21
0002b5 0f55      	LSL  R21
0002b6 9587      	ROR  R24
                 
                 __UNPACK1:
0002b7 e850      	LDI  R21,0x80
0002b8 2e07      	MOV  R0,R23
0002b9 2205      	AND  R0,R21
0002ba 0f66      	LSL  R22
0002bb 1f77      	ROL  R23
0002bc 2775      	EOR  R23,R21
0002bd 0f55      	LSL  R21
0002be 9567      	ROR  R22
0002bf 9508      	RET
                 
                 __CFD1U:
0002c0 9468      	SET
0002c1 c001      	RJMP __CFD1U0
                 __CFD1:
0002c2 94e8      	CLT
                 __CFD1U0:
0002c3 935f      	PUSH R21
0002c4 dff2      	RCALL __UNPACK1
0002c5 3870      	CPI  R23,0x80
0002c6 f018      	BRLO __CFD10
0002c7 3f7f      	CPI  R23,0xFF
0002c8 f408      	BRCC __CFD10
0002c9 c0a7      	RJMP __ZERORES
                 __CFD10:
0002ca e156      	LDI  R21,22
0002cb 1b57      	SUB  R21,R23
0002cc f4aa      	BRPL __CFD11
0002cd 9551      	NEG  R21
0002ce 3058      	CPI  R21,8
0002cf f40e      	BRTC __CFD19
0002d0 3059      	CPI  R21,9
                 __CFD19:
0002d1 f030      	BRLO __CFD17
0002d2 efef      	SER  R30
0002d3 efff      	SER  R31
0002d4 ef6f      	SER  R22
0002d5 e77f      	LDI  R23,0x7F
0002d6 f977      	BLD  R23,7
0002d7 c01a      	RJMP __CFD15
                 __CFD17:
0002d8 2777      	CLR  R23
0002d9 2355      	TST  R21
0002da f0b9      	BREQ __CFD15
                 __CFD18:
0002db 0fee      	LSL  R30
0002dc 1fff      	ROL  R31
0002dd 1f66      	ROL  R22
0002de 1f77      	ROL  R23
0002df 955a      	DEC  R21
0002e0 f7d1      	BRNE __CFD18
0002e1 c010      	RJMP __CFD15
                 __CFD11:
0002e2 2777      	CLR  R23
                 __CFD12:
0002e3 3058      	CPI  R21,8
0002e4 f028      	BRLO __CFD13
0002e5 2fef      	MOV  R30,R31
0002e6 2ff6      	MOV  R31,R22
0002e7 2f67      	MOV  R22,R23
0002e8 5058      	SUBI R21,8
0002e9 cff9      	RJMP __CFD12
                 __CFD13:
0002ea 2355      	TST  R21
0002eb f031      	BREQ __CFD15
                 __CFD14:
0002ec 9576      	LSR  R23
0002ed 9567      	ROR  R22
0002ee 95f7      	ROR  R31
0002ef 95e7      	ROR  R30
0002f0 955a      	DEC  R21
0002f1 f7d1      	BRNE __CFD14
                 __CFD15:
0002f2 2000      	TST  R0
0002f3 f40a      	BRPL __CFD16
0002f4 d141      	RCALL __ANEGD1
                 __CFD16:
0002f5 915f      	POP  R21
0002f6 9508      	RET
                 
                 __CDF1U:
0002f7 9468      	SET
0002f8 c001      	RJMP __CDF1U0
                 __CDF1:
0002f9 94e8      	CLT
                 __CDF1U0:
0002fa 9730      	SBIW R30,0
0002fb 4060      	SBCI R22,0
0002fc 4070      	SBCI R23,0
0002fd f0b1      	BREQ __CDF10
0002fe 2400      	CLR  R0
0002ff f026      	BRTS __CDF11
000300 2377      	TST  R23
000301 f412      	BRPL __CDF11
000302 9400      	COM  R0
000303 d132      	RCALL __ANEGD1
                 __CDF11:
000304 2e17      	MOV  R1,R23
000305 e17e      	LDI  R23,30
000306 2011      	TST  R1
                 __CDF12:
000307 f032      	BRMI __CDF13
000308 957a      	DEC  R23
000309 0fee      	LSL  R30
00030a 1fff      	ROL  R31
00030b 1f66      	ROL  R22
00030c 1c11      	ROL  R1
00030d cff9      	RJMP __CDF12
                 __CDF13:
00030e 2fef      	MOV  R30,R31
00030f 2ff6      	MOV  R31,R22
000310 2d61      	MOV  R22,R1
000311 935f      	PUSH R21
000312 df8a      	RCALL __REPACK
000313 915f      	POP  R21
                 __CDF10:
000314 9508      	RET
                 
                 __SWAPACC:
000315 934f      	PUSH R20
000316 01af      	MOVW R20,R30
000317 01fd      	MOVW R30,R26
000318 01da      	MOVW R26,R20
000319 01ab      	MOVW R20,R22
00031a 01bc      	MOVW R22,R24
00031b 01ca      	MOVW R24,R20
00031c 2d40      	MOV  R20,R0
00031d 2c01      	MOV  R0,R1
00031e 2e14      	MOV  R1,R20
00031f 914f      	POP  R20
000320 9508      	RET
                 
                 __UADD12:
000321 0fea      	ADD  R30,R26
000322 1ffb      	ADC  R31,R27
000323 1f68      	ADC  R22,R24
000324 9508      	RET
                 
                 __NEGMAN1:
000325 95e0      	COM  R30
000326 95f0      	COM  R31
000327 9560      	COM  R22
000328 5fef      	SUBI R30,-1
000329 4fff      	SBCI R31,-1
00032a 4f6f      	SBCI R22,-1
00032b 9508      	RET
                 
                 __SUBF12:
00032c 935f      	PUSH R21
00032d df81      	RCALL __UNPACK
00032e 3890      	CPI  R25,0x80
00032f f171      	BREQ __ADDF129
000330 e850      	LDI  R21,0x80
000331 2615      	EOR  R1,R21
                 
000332 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000333 935f      	PUSH R21
000334 df7a      	RCALL __UNPACK
000335 3890      	CPI  R25,0x80
000336 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000337 3870      	CPI  R23,0x80
000338 f121      	BREQ __ADDF128
                 __ADDF121:
000339 2f57      	MOV  R21,R23
00033a 1b59      	SUB  R21,R25
00033b f12b      	BRVS __ADDF1211
00033c f412      	BRPL __ADDF122
00033d dfd7      	RCALL __SWAPACC
00033e cffa      	RJMP __ADDF121
                 __ADDF122:
00033f 3158      	CPI  R21,24
000340 f018      	BRLO __ADDF123
000341 27aa      	CLR  R26
000342 27bb      	CLR  R27
000343 2788      	CLR  R24
                 __ADDF123:
000344 3058      	CPI  R21,8
000345 f028      	BRLO __ADDF124
000346 2fab      	MOV  R26,R27
000347 2fb8      	MOV  R27,R24
000348 2788      	CLR  R24
000349 5058      	SUBI R21,8
00034a cff9      	RJMP __ADDF123
                 __ADDF124:
00034b 2355      	TST  R21
00034c f029      	BREQ __ADDF126
                 __ADDF125:
00034d 9586      	LSR  R24
00034e 95b7      	ROR  R27
00034f 95a7      	ROR  R26
000350 955a      	DEC  R21
000351 f7d9      	BRNE __ADDF125
                 __ADDF126:
000352 2d50      	MOV  R21,R0
000353 2551      	EOR  R21,R1
000354 f072      	BRMI __ADDF127
000355 dfcb      	RCALL __UADD12
000356 f438      	BRCC __ADDF129
000357 9567      	ROR  R22
000358 95f7      	ROR  R31
000359 95e7      	ROR  R30
00035a 9573      	INC  R23
00035b f413      	BRVC __ADDF129
00035c c020      	RJMP __MAXRES
                 __ADDF128:
00035d dfb7      	RCALL __SWAPACC
                 __ADDF129:
00035e df3e      	RCALL __REPACK
00035f 915f      	POP  R21
000360 9508      	RET
                 __ADDF1211:
000361 f7d8      	BRCC __ADDF128
000362 cffb      	RJMP __ADDF129
                 __ADDF127:
000363 1bea      	SUB  R30,R26
000364 0bfb      	SBC  R31,R27
000365 0b68      	SBC  R22,R24
000366 f051      	BREQ __ZERORES
000367 f410      	BRCC __ADDF1210
000368 9400      	COM  R0
000369 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00036a 2366      	TST  R22
00036b f392      	BRMI __ADDF129
00036c 0fee      	LSL  R30
00036d 1fff      	ROL  R31
00036e 1f66      	ROL  R22
00036f 957a      	DEC  R23
000370 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000371 27ee      	CLR  R30
000372 27ff      	CLR  R31
000373 2766      	CLR  R22
000374 2777      	CLR  R23
000375 915f      	POP  R21
000376 9508      	RET
                 
                 __MINRES:
000377 efef      	SER  R30
000378 efff      	SER  R31
000379 e76f      	LDI  R22,0x7F
00037a ef7f      	SER  R23
00037b 915f      	POP  R21
00037c 9508      	RET
                 
                 __MAXRES:
00037d efef      	SER  R30
00037e efff      	SER  R31
00037f e76f      	LDI  R22,0x7F
000380 e77f      	LDI  R23,0x7F
000381 915f      	POP  R21
000382 9508      	RET
                 
                 __MULF12:
000383 935f      	PUSH R21
000384 df2a      	RCALL __UNPACK
000385 3870      	CPI  R23,0x80
000386 f351      	BREQ __ZERORES
000387 3890      	CPI  R25,0x80
000388 f341      	BREQ __ZERORES
000389 2401      	EOR  R0,R1
00038a 9408      	SEC
00038b 1f79      	ADC  R23,R25
00038c f423      	BRVC __MULF124
00038d f31c      	BRLT __ZERORES
                 __MULF125:
00038e 2000      	TST  R0
00038f f33a      	BRMI __MINRES
000390 cfec      	RJMP __MAXRES
                 __MULF124:
000391 920f      	PUSH R0
000392 931f      	PUSH R17
000393 932f      	PUSH R18
000394 933f      	PUSH R19
000395 934f      	PUSH R20
000396 2711      	CLR  R17
000397 2722      	CLR  R18
000398 2799      	CLR  R25
000399 9f68      	MUL  R22,R24
00039a 01a0      	MOVW R20,R0
00039b 9f8f      	MUL  R24,R31
00039c 2d30      	MOV  R19,R0
00039d 0d41      	ADD  R20,R1
00039e 1f59      	ADC  R21,R25
00039f 9f6b      	MUL  R22,R27
0003a0 0d30      	ADD  R19,R0
0003a1 1d41      	ADC  R20,R1
0003a2 1f59      	ADC  R21,R25
0003a3 9f8e      	MUL  R24,R30
0003a4 d027      	RCALL __MULF126
0003a5 9fbf      	MUL  R27,R31
0003a6 d025      	RCALL __MULF126
0003a7 9f6a      	MUL  R22,R26
0003a8 d023      	RCALL __MULF126
0003a9 9fbe      	MUL  R27,R30
0003aa d01d      	RCALL __MULF127
0003ab 9faf      	MUL  R26,R31
0003ac d01b      	RCALL __MULF127
0003ad 9fae      	MUL  R26,R30
0003ae 0d11      	ADD  R17,R1
0003af 1f29      	ADC  R18,R25
0003b0 1f39      	ADC  R19,R25
0003b1 1f49      	ADC  R20,R25
0003b2 1f59      	ADC  R21,R25
0003b3 2fe3      	MOV  R30,R19
0003b4 2ff4      	MOV  R31,R20
0003b5 2f65      	MOV  R22,R21
0003b6 2f52      	MOV  R21,R18
0003b7 914f      	POP  R20
0003b8 913f      	POP  R19
0003b9 912f      	POP  R18
0003ba 911f      	POP  R17
0003bb 900f      	POP  R0
0003bc 2366      	TST  R22
0003bd f02a      	BRMI __MULF122
0003be 0f55      	LSL  R21
0003bf 1fee      	ROL  R30
0003c0 1fff      	ROL  R31
0003c1 1f66      	ROL  R22
0003c2 c002      	RJMP __MULF123
                 __MULF122:
0003c3 9573      	INC  R23
0003c4 f24b      	BRVS __MULF125
                 __MULF123:
0003c5 decd      	RCALL __ROUND_REPACK
0003c6 915f      	POP  R21
0003c7 9508      	RET
                 
                 __MULF127:
0003c8 0d10      	ADD  R17,R0
0003c9 1d21      	ADC  R18,R1
0003ca 1f39      	ADC  R19,R25
0003cb c002      	RJMP __MULF128
                 __MULF126:
0003cc 0d20      	ADD  R18,R0
0003cd 1d31      	ADC  R19,R1
                 __MULF128:
0003ce 1f49      	ADC  R20,R25
0003cf 1f59      	ADC  R21,R25
0003d0 9508      	RET
                 
                 __DIVF21:
0003d1 935f      	PUSH R21
0003d2 dedc      	RCALL __UNPACK
0003d3 3870      	CPI  R23,0x80
0003d4 f421      	BRNE __DIVF210
0003d5 2011      	TST  R1
                 __DIVF211:
0003d6 f40a      	BRPL __DIVF219
0003d7 cf9f      	RJMP __MINRES
                 __DIVF219:
0003d8 cfa4      	RJMP __MAXRES
                 __DIVF210:
0003d9 3890      	CPI  R25,0x80
0003da f409      	BRNE __DIVF218
                 __DIVF217:
0003db cf95      	RJMP __ZERORES
                 __DIVF218:
0003dc 2401      	EOR  R0,R1
0003dd 9408      	SEC
0003de 0b97      	SBC  R25,R23
0003df f41b      	BRVC __DIVF216
0003e0 f3d4      	BRLT __DIVF217
0003e1 2000      	TST  R0
0003e2 cff3      	RJMP __DIVF211
                 __DIVF216:
0003e3 2f79      	MOV  R23,R25
0003e4 931f      	PUSH R17
0003e5 932f      	PUSH R18
0003e6 933f      	PUSH R19
0003e7 934f      	PUSH R20
0003e8 2411      	CLR  R1
0003e9 2711      	CLR  R17
0003ea 2722      	CLR  R18
0003eb 2733      	CLR  R19
0003ec 2744      	CLR  R20
0003ed 2755      	CLR  R21
0003ee e290      	LDI  R25,32
                 __DIVF212:
0003ef 17ae      	CP   R26,R30
0003f0 07bf      	CPC  R27,R31
0003f1 0786      	CPC  R24,R22
0003f2 0741      	CPC  R20,R17
0003f3 f030      	BRLO __DIVF213
0003f4 1bae      	SUB  R26,R30
0003f5 0bbf      	SBC  R27,R31
0003f6 0b86      	SBC  R24,R22
0003f7 0b41      	SBC  R20,R17
0003f8 9408      	SEC
0003f9 c001      	RJMP __DIVF214
                 __DIVF213:
0003fa 9488      	CLC
                 __DIVF214:
0003fb 1f55      	ROL  R21
0003fc 1f22      	ROL  R18
0003fd 1f33      	ROL  R19
0003fe 1c11      	ROL  R1
0003ff 1faa      	ROL  R26
000400 1fbb      	ROL  R27
000401 1f88      	ROL  R24
000402 1f44      	ROL  R20
000403 959a      	DEC  R25
000404 f751      	BRNE __DIVF212
000405 01f9      	MOVW R30,R18
000406 2d61      	MOV  R22,R1
000407 914f      	POP  R20
000408 913f      	POP  R19
000409 912f      	POP  R18
00040a 911f      	POP  R17
00040b 2366      	TST  R22
00040c f032      	BRMI __DIVF215
00040d 0f55      	LSL  R21
00040e 1fee      	ROL  R30
00040f 1fff      	ROL  R31
000410 1f66      	ROL  R22
000411 957a      	DEC  R23
000412 f243      	BRVS __DIVF217
                 __DIVF215:
000413 de7f      	RCALL __ROUND_REPACK
000414 915f      	POP  R21
000415 9508      	RET
                 
                 __CMPF12:
000416 2399      	TST  R25
000417 f09a      	BRMI __CMPF120
000418 2377      	TST  R23
000419 f042      	BRMI __CMPF121
00041a 1797      	CP   R25,R23
00041b f048      	BRLO __CMPF122
00041c f429      	BRNE __CMPF121
00041d 17ae      	CP   R26,R30
00041e 07bf      	CPC  R27,R31
00041f 0786      	CPC  R24,R22
000420 f020      	BRLO __CMPF122
000421 f031      	BREQ __CMPF123
                 __CMPF121:
000422 9498      	CLZ
000423 9488      	CLC
000424 9508      	RET
                 __CMPF122:
000425 9498      	CLZ
000426 9408      	SEC
000427 9508      	RET
                 __CMPF123:
000428 9418      	SEZ
000429 9488      	CLC
00042a 9508      	RET
                 __CMPF120:
00042b 2377      	TST  R23
00042c f7c2      	BRPL __CMPF122
00042d 1797      	CP   R25,R23
00042e f398      	BRLO __CMPF121
00042f f7a9      	BRNE __CMPF122
000430 17ea      	CP   R30,R26
000431 07fb      	CPC  R31,R27
000432 0768      	CPC  R22,R24
000433 f388      	BRLO __CMPF122
000434 f399      	BREQ __CMPF123
000435 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000436 95f0      	COM  R31
000437 9560      	COM  R22
000438 9570      	COM  R23
000439 95e1      	NEG  R30
00043a 4fff      	SBCI R31,-1
00043b 4f6f      	SBCI R22,-1
00043c 4f7f      	SBCI R23,-1
00043d 9508      	RET
                 
                 __CWD1:
00043e 2f6f      	MOV  R22,R31
00043f 0f66      	ADD  R22,R22
000440 0b66      	SBC  R22,R22
000441 2f76      	MOV  R23,R22
000442 9508      	RET
                 
                 __EQB12:
000443 17ea      	CP   R30,R26
000444 e0e1      	LDI  R30,1
000445 f009      	BREQ __EQB12T
000446 27ee      	CLR  R30
                 __EQB12T:
000447 9508      	RET
                 
                 __SWAPD12:
000448 2e18      	MOV  R1,R24
000449 2f86      	MOV  R24,R22
00044a 2d61      	MOV  R22,R1
00044b 2e19      	MOV  R1,R25
00044c 2f97      	MOV  R25,R23
00044d 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00044e 2e1b      	MOV  R1,R27
00044f 2fbf      	MOV  R27,R31
000450 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000451 2e1a      	MOV  R1,R26
000452 2fae      	MOV  R26,R30
000453 2de1      	MOV  R30,R1
000454 9508      	RET
                 
                 __CPD02:
000455 2400      	CLR  R0
000456 160a      	CP   R0,R26
000457 060b      	CPC  R0,R27
000458 0608      	CPC  R0,R24
000459 0609      	CPC  R0,R25
00045a 9508      	RET
                 
                 __CPD12:
00045b 17ea      	CP   R30,R26
00045c 07fb      	CPC  R31,R27
00045d 0768      	CPC  R22,R24
00045e 0779      	CPC  R23,R25
00045f 9508      	RET
                 
                 __SAVELOCR6:
000460 935a      	ST   -Y,R21
                 __SAVELOCR5:
000461 934a      	ST   -Y,R20
                 __SAVELOCR4:
000462 933a      	ST   -Y,R19
                 __SAVELOCR3:
000463 932a      	ST   -Y,R18
                 __SAVELOCR2:
000464 931a      	ST   -Y,R17
000465 930a      	ST   -Y,R16
000466 9508      	RET
                 
                 __LOADLOCR6:
000467 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000468 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000469 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00046a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00046b 8119      	LDD  R17,Y+1
00046c 8108      	LD   R16,Y
00046d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  34 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   9 r17:  19 r18:  26 r19:  22 r20:  32 r21:  87 r22:  75 r23:  66 
r24:  40 r25:  41 r26:  65 r27:  41 r28:   4 r29:   1 r30: 166 r31:  77 
x  :  14 y  : 119 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   7 and   :   3 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  34 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  17 
brlt  :   3 brmi  :   9 brne  :  20 brpl  :   7 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   0 call  :  63 
cbi   :   1 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  26 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :  10 cpc   :  15 cpi   :  40 cpse  :   0 dec   :   8 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  24 ld    :  12 ldd   :  62 ldi   :  87 
lds   :  16 lpm   :   7 lsl   :  11 lsr   :   3 mov   :  51 movw  :  23 
mul   :   9 muls  :   1 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   0 out   :  14 pop   :  20 push  :  20 rcall :  24 ret   :  42 
reti  :   0 rjmp  :  45 rol   :  24 ror   :  12 sbc   :   7 sbci  :  16 
sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :  13 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   4 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  19 std   :  40 sts   :  12 sub   :   4 subi  :  12 swap  :   0 
tst   :  17 wdr   :   1 
Instructions used: 70 out of 116 (60.3%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008dc   2230     38   2268   32768   6.9%
[.dseg] 0x000060 0x00027a      0     26     26    2048   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
