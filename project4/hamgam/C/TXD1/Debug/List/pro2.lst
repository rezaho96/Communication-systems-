
AVRASM ver. 2.1.30  E:\codevision\1\C\TXD\Debug\List\pro2.asm Sat Jun 05 13:05:06 2021

E:\codevision\1\C\TXD\Debug\List\pro2.asm(1088): warning: Register r4 already defined by the .DEF directive
E:\codevision\1\C\TXD\Debug\List\pro2.asm(1089): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _temp0=R4
                 	.DEF _temp0_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2000060:
E:\codevision\1\C\TXD\Debug\List\pro2.asm(1127): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2000000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\codevision\1\C\TXD\Debug\List\pro2.asm(1130): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0001      	.DW  0x01
00003a 026a      	.DW  __seed_G100
00003b 0066      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 0079 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;unsigned int temp0;
                 ;char str[10];
                 ;
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000D {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000E ADMUX=adc_input | ADC_VREF_TYPE;
00006a 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00006b 81e8      	LD   R30,Y
00006c 64e0      	ORI  R30,0x40
00006d b9e7      	OUT  0x7,R30
                 ; 0000 000F delay_us(10);
                +
00006e e285     +LDI R24 , LOW ( 37 )
                +__DELAY_USB_LOOP :
00006f 958a     +DEC R24
000070 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 37
                 ; 0000 0010 ADCSRA|=(1<<ADSC);
000071 9a36      	SBI  0x6,6
                 ; 0000 0011 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000072 9b34      	SBIS 0x6,4
000073 cffe      	RJMP _0x3
                 ; 0000 0012 ADCSRA|=(1<<ADIF);
000074 9a34      	SBI  0x6,4
                 ; 0000 0013 return ADCW;
000075 b1e4      	IN   R30,0x4
000076 b1f5      	IN   R31,0x4+1
000077 940c 017c 	JMP  _0x20A0002
                 ; 0000 0014 }
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0018 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0019 UCSRB = 0x08;
000079 e0e8      	LDI  R30,LOW(8)
00007a b9ea      	OUT  0xA,R30
                 ; 0000 001A UCSRC = 0x86;
00007b e8e6      	LDI  R30,LOW(134)
00007c bde0      	OUT  0x20,R30
                 ; 0000 001B UBRRL = 71;
00007d e4e7      	LDI  R30,LOW(71)
00007e b9e9      	OUT  0x9,R30
                 ; 0000 001C UBRRH = 0;
00007f e0e0      	LDI  R30,LOW(0)
000080 bde0      	OUT  0x20,R30
                 ; 0000 001D 
                 ; 0000 001E 
                 ; 0000 001F ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000081 e8e0      	LDI  R30,LOW(128)
000082 b9e8      	OUT  0x8,R30
                 ; 0000 0020 ADMUX=ADC_VREF_TYPE;
000083 e4e0      	LDI  R30,LOW(64)
000084 b9e7      	OUT  0x7,R30
                 ; 0000 0021 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
000085 e8e3      	LDI  R30,LOW(131)
000086 b9e6      	OUT  0x6,R30
                 ; 0000 0022 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000087 e0e0      	LDI  R30,LOW(0)
000088 bbea      	OUT  0x1A,R30
                 ; 0000 0023 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000089 bbeb      	OUT  0x1B,R30
                 ; 0000 0024 
                 ; 0000 0025 
                 ; 0000 0026 
                 ; 0000 0027 DDRD.1 = 1;
00008a 9a89      	SBI  0x11,1
                 ; 0000 0028 
                 ; 0000 0029 while (1){
                 _0x8:
                 ; 0000 002A     temp0 = read_adc(0);
00008b e0a0      	LDI  R26,LOW(0)
00008c dfdd      	RCALL _read_adc
00008d 012f      	MOVW R4,R30
                 ; 0000 002B     ftoa(temp0*0.49,0,str);
00008e 2766      	CLR  R22
00008f 2777      	CLR  R23
000090 940e 0298 	CALL __CDF1
                +
000092 e4a8     +LDI R26 , LOW ( 0x3EFAE148 )
000093 eeb1     +LDI R27 , HIGH ( 0x3EFAE148 )
000094 ef8a     +LDI R24 , BYTE3 ( 0x3EFAE148 )
000095 e39e     +LDI R25 , BYTE4 ( 0x3EFAE148 )
                 	__GETD2N 0x3EFAE148
000096 940e 0322 	CALL __MULF12
000098 940e 03f1 	CALL __PUTPARD1
00009a e0e0      	LDI  R30,LOW(0)
00009b 93ea      	ST   -Y,R30
00009c e6a0      	LDI  R26,LOW(_str)
00009d e0b2      	LDI  R27,HIGH(_str)
00009e 940e 00aa 	CALL _ftoa
                 ; 0000 002C     puts(str);
0000a0 e6a0      	LDI  R26,LOW(_str)
0000a1 e0b2      	LDI  R27,HIGH(_str)
0000a2 940e 017e 	CALL _puts
                 ; 0000 002D     delay_ms(50);
0000a4 e3a2      	LDI  R26,LOW(50)
0000a5 e0b0      	LDI  R27,0
0000a6 940e 0222 	CALL _delay_ms
                 ; 0000 002E 
                 ; 0000 002F }
0000a8 cfe2      	RJMP _0x8
                 ; 0000 0030 
                 ; 0000 0031 }
                 _0xB:
0000a9 cfff      	RJMP _0xB
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0000aa 93ba      	ST   -Y,R27
0000ab 93aa      	ST   -Y,R26
0000ac 9724      	SBIW R28,4
0000ad e0e0      	LDI  R30,LOW(0)
0000ae 83e8      	ST   Y,R30
0000af 83e9      	STD  Y+1,R30
0000b0 83ea      	STD  Y+2,R30
0000b1 e3ef      	LDI  R30,LOW(63)
0000b2 83eb      	STD  Y+3,R30
0000b3 931a      	ST   -Y,R17
0000b4 930a      	ST   -Y,R16
0000b5 85eb      	LDD  R30,Y+11
0000b6 85fc      	LDD  R31,Y+11+1
0000b7 3fef      	CPI  R30,LOW(0xFFFF)
0000b8 efaf      	LDI  R26,HIGH(0xFFFF)
0000b9 07fa      	CPC  R31,R26
0000ba f439      	BRNE _0x200000D
0000bb 940e 01e6 	CALL SUBOPT_0x0
                +
0000bd e6a8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0000be e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0000bf 940e 01d9 	CALL _strcpyf
0000c1 c0b1      	RJMP _0x20A0004
                 _0x200000D:
0000c2 3fef      	CPI  R30,LOW(0x7FFF)
0000c3 e7af      	LDI  R26,HIGH(0x7FFF)
0000c4 07fa      	CPC  R31,R26
0000c5 f439      	BRNE _0x200000C
0000c6 940e 01e6 	CALL SUBOPT_0x0
                +
0000c8 e6a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0000c9 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0000ca 940e 01d9 	CALL _strcpyf
0000cc c0a6      	RJMP _0x20A0004
                 _0x200000C:
0000cd 85ac      	LDD  R26,Y+12
0000ce 23aa      	TST  R26
0000cf f462      	BRPL _0x200000F
                +
0000d0 85e9     +LDD R30 , Y + 9
0000d1 85fa     +LDD R31 , Y + 9 + 1
0000d2 856b     +LDD R22 , Y + 9 + 2
0000d3 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0000d4 940e 022c 	CALL __ANEGF1
0000d6 940e 01eb 	CALL SUBOPT_0x1
0000d8 940e 01f0 	CALL SUBOPT_0x2
0000da e2ed      	LDI  R30,LOW(45)
0000db 93ec      	ST   X,R30
                 _0x200000F:
0000dc 85a8      	LDD  R26,Y+8
0000dd 30a7      	CPI  R26,LOW(0x7)
0000de f010      	BRLO _0x2000010
0000df e0e6      	LDI  R30,LOW(6)
0000e0 87e8      	STD  Y+8,R30
                 _0x2000010:
0000e1 8518      	LDD  R17,Y+8
                 _0x2000011:
0000e2 2fe1      	MOV  R30,R17
0000e3 5011      	SUBI R17,1
0000e4 30e0      	CPI  R30,0
0000e5 f039      	BREQ _0x2000013
0000e6 940e 01f7 	CALL SUBOPT_0x3
0000e8 940e 01fc 	CALL SUBOPT_0x4
0000ea 940e 0203 	CALL SUBOPT_0x5
0000ec cff5      	RJMP _0x2000011
                 _0x2000013:
0000ed 940e 0208 	CALL SUBOPT_0x6
0000ef 940e 02d2 	CALL __ADDF12
0000f1 940e 01eb 	CALL SUBOPT_0x1
0000f3 e010      	LDI  R17,LOW(0)
                +
0000f4 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0000f5 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0000f6 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0000f7 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0000f8 940e 0203 	CALL SUBOPT_0x5
                 _0x2000014:
0000fa 940e 0208 	CALL SUBOPT_0x6
0000fc 940e 03b5 	CALL __CMPF12
0000fe f088      	BRLO _0x2000016
0000ff 940e 01f7 	CALL SUBOPT_0x3
000101 940e 0211 	CALL SUBOPT_0x7
000103 940e 0203 	CALL SUBOPT_0x5
000105 5f1f      	SUBI R17,-LOW(1)
000106 3217      	CPI  R17,39
000107 f038      	BRLO _0x2000017
000108 940e 01e6 	CALL SUBOPT_0x0
                +
00010a e6ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00010b e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
00010c 940e 01d9 	CALL _strcpyf
00010e c064      	RJMP _0x20A0004
                 _0x2000017:
00010f cfea      	RJMP _0x2000014
                 _0x2000016:
000110 3010      	CPI  R17,0
000111 f429      	BRNE _0x2000018
000112 940e 01f0 	CALL SUBOPT_0x2
000114 e3e0      	LDI  R30,LOW(48)
000115 93ec      	ST   X,R30
000116 c02f      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
000117 2fe1      	MOV  R30,R17
000118 5011      	SUBI R17,1
000119 30e0      	CPI  R30,0
00011a f159      	BREQ _0x200001C
00011b 940e 01f7 	CALL SUBOPT_0x3
00011d 940e 01fc 	CALL SUBOPT_0x4
                +
00011f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000120 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000121 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000122 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000123 940e 02d2 	CALL __ADDF12
000125 01df      	MOVW R26,R30
000126 01cb      	MOVW R24,R22
000127 940e 01c2 	CALL _floor
000129 940e 0203 	CALL SUBOPT_0x5
00012b 940e 0208 	CALL SUBOPT_0x6
00012d 940e 0370 	CALL __DIVF21
00012f 940e 025f 	CALL __CFD1U
000131 2f0e      	MOV  R16,R30
000132 940e 01f0 	CALL SUBOPT_0x2
000134 2fe0      	MOV  R30,R16
000135 5de0      	SUBI R30,-LOW(48)
000136 93ec      	ST   X,R30
000137 2fe0      	MOV  R30,R16
000138 e0f0      	LDI  R31,0
000139 940e 01f7 	CALL SUBOPT_0x3
00013b 940e 03dd 	CALL __CWD1
00013d 940e 0298 	CALL __CDF1
00013f 940e 0322 	CALL __MULF12
000141 940e 0218 	CALL SUBOPT_0x8
000143 940e 021d 	CALL SUBOPT_0x9
000145 cfd1      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
000146 85e8      	LDD  R30,Y+8
000147 30e0      	CPI  R30,0
000148 f131      	BREQ _0x20A0003
000149 940e 01f0 	CALL SUBOPT_0x2
00014b e2ee      	LDI  R30,LOW(46)
00014c 93ec      	ST   X,R30
                 _0x200001E:
00014d 85e8      	LDD  R30,Y+8
00014e 50e1      	SUBI R30,LOW(1)
00014f 87e8      	STD  Y+8,R30
000150 5fef      	SUBI R30,-LOW(1)
000151 f0e9      	BREQ _0x2000020
000152 940e 0218 	CALL SUBOPT_0x8
000154 940e 0211 	CALL SUBOPT_0x7
000156 940e 01eb 	CALL SUBOPT_0x1
                +
000158 85e9     +LDD R30 , Y + 9
000159 85fa     +LDD R31 , Y + 9 + 1
00015a 856b     +LDD R22 , Y + 9 + 2
00015b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00015c 940e 025f 	CALL __CFD1U
00015e 2f0e      	MOV  R16,R30
00015f 940e 01f0 	CALL SUBOPT_0x2
000161 2fe0      	MOV  R30,R16
000162 5de0      	SUBI R30,-LOW(48)
000163 93ec      	ST   X,R30
000164 2fe0      	MOV  R30,R16
000165 e0f0      	LDI  R31,0
000166 940e 0218 	CALL SUBOPT_0x8
000168 940e 03dd 	CALL __CWD1
00016a 940e 0298 	CALL __CDF1
00016c 940e 021d 	CALL SUBOPT_0x9
00016e cfde      	RJMP _0x200001E
                 _0x2000020:
                 _0x20A0003:
00016f 81ae      	LDD  R26,Y+6
000170 81bf      	LDD  R27,Y+6+1
000171 e0e0      	LDI  R30,LOW(0)
000172 93ec      	ST   X,R30
                 _0x20A0004:
000173 8119      	LDD  R17,Y+1
000174 8108      	LDD  R16,Y+0
000175 962d      	ADIW R28,13
000176 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000177 93aa      	ST   -Y,R26
                 putchar0:
000178 9b5d           sbis usr,udre
000179 cffe           rjmp putchar0
00017a 81e8           ld   r30,y
00017b b9ec           out  udr,r30
                 _0x20A0002:
00017c 9621      	ADIW R28,1
00017d 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
00017e 93ba      	ST   -Y,R27
00017f 93aa      	ST   -Y,R26
000180 931a      	ST   -Y,R17
                 _0x2020003:
000181 81a9      	LDD  R26,Y+1
000182 81ba      	LDD  R27,Y+1+1
000183 91ed      	LD   R30,X+
000184 83a9      	STD  Y+1,R26
000185 83ba      	STD  Y+1+1,R27
000186 2f1e      	MOV  R17,R30
000187 30e0      	CPI  R30,0
000188 f019      	BREQ _0x2020005
000189 2fa1      	MOV  R26,R17
00018a dfec      	RCALL _putchar
00018b cff5      	RJMP _0x2020003
                 _0x2020005:
00018c e0aa      	LDI  R26,LOW(10)
00018d dfe9      	RCALL _putchar
00018e 8118      	LDD  R17,Y+0
00018f 9623      	ADIW R28,3
000190 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000191 940e 03f6 	CALL __PUTPARD2
000193 817b         ldd  r23,y+3
000194 816a         ldd  r22,y+2
000195 81f9         ldd  r31,y+1
000196 81e8         ld   r30,y
000197 fb77         bst  r23,7
000198 0f77         lsl  r23
000199 fd67         sbrc r22,7
00019a 6071         sbr  r23,1
00019b 2f97         mov  r25,r23
00019c 579e         subi r25,0x7e
00019d f081         breq __ftrunc0
00019e f078         brcs __ftrunc0
00019f 3198         cpi  r25,24
0001a0 f490         brsh __ftrunc1
0001a1 27aa         clr  r26
0001a2 27bb         clr  r27
0001a3 2788         clr  r24
                 __ftrunc2:
0001a4 9408         sec
0001a5 9587         ror  r24
0001a6 95b7         ror  r27
0001a7 95a7         ror  r26
0001a8 959a         dec  r25
0001a9 f7d1         brne __ftrunc2
0001aa 23ea         and  r30,r26
0001ab 23fb         and  r31,r27
0001ac 2368         and  r22,r24
0001ad c005         rjmp __ftrunc1
                 __ftrunc0:
0001ae 94e8         clt
0001af 2777         clr  r23
0001b0 27ee         clr  r30
0001b1 27ff         clr  r31
0001b2 2766         clr  r22
                 __ftrunc1:
0001b3 776f         cbr  r22,0x80
0001b4 9576         lsr  r23
0001b5 f408         brcc __ftrunc3
0001b6 6860         sbr  r22,0x80
                 __ftrunc3:
0001b7 f977         bld  r23,7
0001b8 91a9         ld   r26,y+
0001b9 91b9         ld   r27,y+
0001ba 9189         ld   r24,y+
0001bb 9199         ld   r25,y+
0001bc 17ea         cp   r30,r26
0001bd 07fb         cpc  r31,r27
0001be 0768         cpc  r22,r24
0001bf 0779         cpc  r23,r25
0001c0 fb97         bst  r25,7
0001c1 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0001c2 940e 03f6 	CALL __PUTPARD2
0001c4 940e 03e7 	CALL __GETD2S0
0001c6 940e 0191 	CALL _ftrunc
0001c8 940e 03ec 	CALL __PUTD1S0
0001ca f419          brne __floor1
                 __floor0:
0001cb 940e 03e2 	CALL __GETD1S0
0001cd c009      	RJMP _0x20A0001
                 __floor1:
0001ce f7e6          brtc __floor0
0001cf 940e 03e2 	CALL __GETD1S0
                +
0001d1 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0001d2 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0001d3 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0001d4 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0001d5 940e 02cb 	CALL __SUBF12
                 _0x20A0001:
0001d7 9624      	ADIW R28,4
0001d8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0001d9 93ba      	ST   -Y,R27
0001da 93aa      	ST   -Y,R26
0001db 91e9          ld   r30,y+
0001dc 91f9          ld   r31,y+
0001dd 91a9          ld   r26,y+
0001de 91b9          ld   r27,y+
0001df 01cd          movw r24,r26
                 strcpyf0:
0001e0 9005      	lpm  r0,z+
0001e1 920d          st   x+,r0
0001e2 2000          tst  r0
0001e3 f7e1          brne strcpyf0
0001e4 01fc          movw r30,r24
0001e5 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _str:
000260           	.BYTE 0xA
                 __seed_G100:
00026a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0001e6 81ee      	LDD  R30,Y+6
0001e7 81ff      	LDD  R31,Y+6+1
0001e8 93fa      	ST   -Y,R31
0001e9 93ea      	ST   -Y,R30
0001ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
                +
0001eb 87e9     +STD Y + 9 , R30
0001ec 87fa     +STD Y + 9 + 1 , R31
0001ed 876b     +STD Y + 9 + 2 , R22
0001ee 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
0001f0 81ae      	LDD  R26,Y+6
0001f1 81bf      	LDD  R27,Y+6+1
0001f2 9611      	ADIW R26,1
0001f3 83ae      	STD  Y+6,R26
0001f4 83bf      	STD  Y+6+1,R27
0001f5 9711      	SBIW R26,1
0001f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
                +
0001f7 81aa     +LDD R26 , Y + 2
0001f8 81bb     +LDD R27 , Y + 2 + 1
0001f9 818c     +LDD R24 , Y + 2 + 2
0001fa 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0001fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
0001fc eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0001fd ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0001fe ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0001ff e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000200 940e 0322 	CALL __MULF12
000202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
000203 83ea     +STD Y + 2 , R30
000204 83fb     +STD Y + 2 + 1 , R31
000205 836c     +STD Y + 2 + 2 , R22
000206 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000207 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
                +
000208 81ea     +LDD R30 , Y + 2
000209 81fb     +LDD R31 , Y + 2 + 1
00020a 816c     +LDD R22 , Y + 2 + 2
00020b 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00020c 85a9     +LDD R26 , Y + 9
00020d 85ba     +LDD R27 , Y + 9 + 1
00020e 858b     +LDD R24 , Y + 9 + 2
00020f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000210 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000211 e0e0     +LDI R30 , LOW ( 0x41200000 )
000212 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000213 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000214 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000215 940e 0322 	CALL __MULF12
000217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
000218 85a9     +LDD R26 , Y + 9
000219 85ba     +LDD R27 , Y + 9 + 1
00021a 858b     +LDD R24 , Y + 9 + 2
00021b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00021c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00021d 940e 03fb 	CALL __SWAPD12
00021f 940e 02cb 	CALL __SUBF12
000221 cfc9      	RJMP SUBOPT_0x1
                 
                 
                 	.CSEG
                 _delay_ms:
000222 9610      	adiw r26,0
000223 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000224 ec8d     +LDI R24 , LOW ( 0xACD )
000225 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000226 9701     +SBIW R24 , 1
000227 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000228 95a8      	wdr
000229 9711      	sbiw r26,1
00022a f7c9      	brne __delay_ms0
                 __delay_ms1:
00022b 9508      	ret
                 
                 __ANEGF1:
00022c 9730      	SBIW R30,0
00022d 4060      	SBCI R22,0
00022e 4070      	SBCI R23,0
00022f f009      	BREQ __ANEGF10
000230 5870      	SUBI R23,0x80
                 __ANEGF10:
000231 9508      	RET
                 
                 __ROUND_REPACK:
000232 2355      	TST  R21
000233 f442      	BRPL __REPACK
000234 3850      	CPI  R21,0x80
000235 f411      	BRNE __ROUND_REPACK0
000236 ffe0      	SBRS R30,0
000237 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000238 9631      	ADIW R30,1
000239 1f69      	ADC  R22,R25
00023a 1f79      	ADC  R23,R25
00023b f06b      	BRVS __REPACK1
                 
                 __REPACK:
00023c e850      	LDI  R21,0x80
00023d 2757      	EOR  R21,R23
00023e f411      	BRNE __REPACK0
00023f 935f      	PUSH R21
000240 c0cf      	RJMP __ZERORES
                 __REPACK0:
000241 3f5f      	CPI  R21,0xFF
000242 f031      	BREQ __REPACK1
000243 0f66      	LSL  R22
000244 0c00      	LSL  R0
000245 9557      	ROR  R21
000246 9567      	ROR  R22
000247 2f75      	MOV  R23,R21
000248 9508      	RET
                 __REPACK1:
000249 935f      	PUSH R21
00024a 2000      	TST  R0
00024b f00a      	BRMI __REPACK2
00024c c0cf      	RJMP __MAXRES
                 __REPACK2:
00024d c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00024e e850      	LDI  R21,0x80
00024f 2e19      	MOV  R1,R25
000250 2215      	AND  R1,R21
000251 0f88      	LSL  R24
000252 1f99      	ROL  R25
000253 2795      	EOR  R25,R21
000254 0f55      	LSL  R21
000255 9587      	ROR  R24
                 
                 __UNPACK1:
000256 e850      	LDI  R21,0x80
000257 2e07      	MOV  R0,R23
000258 2205      	AND  R0,R21
000259 0f66      	LSL  R22
00025a 1f77      	ROL  R23
00025b 2775      	EOR  R23,R21
00025c 0f55      	LSL  R21
00025d 9567      	ROR  R22
00025e 9508      	RET
                 
                 __CFD1U:
00025f 9468      	SET
000260 c001      	RJMP __CFD1U0
                 __CFD1:
000261 94e8      	CLT
                 __CFD1U0:
000262 935f      	PUSH R21
000263 dff2      	RCALL __UNPACK1
000264 3870      	CPI  R23,0x80
000265 f018      	BRLO __CFD10
000266 3f7f      	CPI  R23,0xFF
000267 f408      	BRCC __CFD10
000268 c0a7      	RJMP __ZERORES
                 __CFD10:
000269 e156      	LDI  R21,22
00026a 1b57      	SUB  R21,R23
00026b f4aa      	BRPL __CFD11
00026c 9551      	NEG  R21
00026d 3058      	CPI  R21,8
00026e f40e      	BRTC __CFD19
00026f 3059      	CPI  R21,9
                 __CFD19:
000270 f030      	BRLO __CFD17
000271 efef      	SER  R30
000272 efff      	SER  R31
000273 ef6f      	SER  R22
000274 e77f      	LDI  R23,0x7F
000275 f977      	BLD  R23,7
000276 c01a      	RJMP __CFD15
                 __CFD17:
000277 2777      	CLR  R23
000278 2355      	TST  R21
000279 f0b9      	BREQ __CFD15
                 __CFD18:
00027a 0fee      	LSL  R30
00027b 1fff      	ROL  R31
00027c 1f66      	ROL  R22
00027d 1f77      	ROL  R23
00027e 955a      	DEC  R21
00027f f7d1      	BRNE __CFD18
000280 c010      	RJMP __CFD15
                 __CFD11:
000281 2777      	CLR  R23
                 __CFD12:
000282 3058      	CPI  R21,8
000283 f028      	BRLO __CFD13
000284 2fef      	MOV  R30,R31
000285 2ff6      	MOV  R31,R22
000286 2f67      	MOV  R22,R23
000287 5058      	SUBI R21,8
000288 cff9      	RJMP __CFD12
                 __CFD13:
000289 2355      	TST  R21
00028a f031      	BREQ __CFD15
                 __CFD14:
00028b 9576      	LSR  R23
00028c 9567      	ROR  R22
00028d 95f7      	ROR  R31
00028e 95e7      	ROR  R30
00028f 955a      	DEC  R21
000290 f7d1      	BRNE __CFD14
                 __CFD15:
000291 2000      	TST  R0
000292 f40a      	BRPL __CFD16
000293 d141      	RCALL __ANEGD1
                 __CFD16:
000294 915f      	POP  R21
000295 9508      	RET
                 
                 __CDF1U:
000296 9468      	SET
000297 c001      	RJMP __CDF1U0
                 __CDF1:
000298 94e8      	CLT
                 __CDF1U0:
000299 9730      	SBIW R30,0
00029a 4060      	SBCI R22,0
00029b 4070      	SBCI R23,0
00029c f0b1      	BREQ __CDF10
00029d 2400      	CLR  R0
00029e f026      	BRTS __CDF11
00029f 2377      	TST  R23
0002a0 f412      	BRPL __CDF11
0002a1 9400      	COM  R0
0002a2 d132      	RCALL __ANEGD1
                 __CDF11:
0002a3 2e17      	MOV  R1,R23
0002a4 e17e      	LDI  R23,30
0002a5 2011      	TST  R1
                 __CDF12:
0002a6 f032      	BRMI __CDF13
0002a7 957a      	DEC  R23
0002a8 0fee      	LSL  R30
0002a9 1fff      	ROL  R31
0002aa 1f66      	ROL  R22
0002ab 1c11      	ROL  R1
0002ac cff9      	RJMP __CDF12
                 __CDF13:
0002ad 2fef      	MOV  R30,R31
0002ae 2ff6      	MOV  R31,R22
0002af 2d61      	MOV  R22,R1
0002b0 935f      	PUSH R21
0002b1 df8a      	RCALL __REPACK
0002b2 915f      	POP  R21
                 __CDF10:
0002b3 9508      	RET
                 
                 __SWAPACC:
0002b4 934f      	PUSH R20
0002b5 01af      	MOVW R20,R30
0002b6 01fd      	MOVW R30,R26
0002b7 01da      	MOVW R26,R20
0002b8 01ab      	MOVW R20,R22
0002b9 01bc      	MOVW R22,R24
0002ba 01ca      	MOVW R24,R20
0002bb 2d40      	MOV  R20,R0
0002bc 2c01      	MOV  R0,R1
0002bd 2e14      	MOV  R1,R20
0002be 914f      	POP  R20
0002bf 9508      	RET
                 
                 __UADD12:
0002c0 0fea      	ADD  R30,R26
0002c1 1ffb      	ADC  R31,R27
0002c2 1f68      	ADC  R22,R24
0002c3 9508      	RET
                 
                 __NEGMAN1:
0002c4 95e0      	COM  R30
0002c5 95f0      	COM  R31
0002c6 9560      	COM  R22
0002c7 5fef      	SUBI R30,-1
0002c8 4fff      	SBCI R31,-1
0002c9 4f6f      	SBCI R22,-1
0002ca 9508      	RET
                 
                 __SUBF12:
0002cb 935f      	PUSH R21
0002cc df81      	RCALL __UNPACK
0002cd 3890      	CPI  R25,0x80
0002ce f171      	BREQ __ADDF129
0002cf e850      	LDI  R21,0x80
0002d0 2615      	EOR  R1,R21
                 
0002d1 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0002d2 935f      	PUSH R21
0002d3 df7a      	RCALL __UNPACK
0002d4 3890      	CPI  R25,0x80
0002d5 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0002d6 3870      	CPI  R23,0x80
0002d7 f121      	BREQ __ADDF128
                 __ADDF121:
0002d8 2f57      	MOV  R21,R23
0002d9 1b59      	SUB  R21,R25
0002da f12b      	BRVS __ADDF1211
0002db f412      	BRPL __ADDF122
0002dc dfd7      	RCALL __SWAPACC
0002dd cffa      	RJMP __ADDF121
                 __ADDF122:
0002de 3158      	CPI  R21,24
0002df f018      	BRLO __ADDF123
0002e0 27aa      	CLR  R26
0002e1 27bb      	CLR  R27
0002e2 2788      	CLR  R24
                 __ADDF123:
0002e3 3058      	CPI  R21,8
0002e4 f028      	BRLO __ADDF124
0002e5 2fab      	MOV  R26,R27
0002e6 2fb8      	MOV  R27,R24
0002e7 2788      	CLR  R24
0002e8 5058      	SUBI R21,8
0002e9 cff9      	RJMP __ADDF123
                 __ADDF124:
0002ea 2355      	TST  R21
0002eb f029      	BREQ __ADDF126
                 __ADDF125:
0002ec 9586      	LSR  R24
0002ed 95b7      	ROR  R27
0002ee 95a7      	ROR  R26
0002ef 955a      	DEC  R21
0002f0 f7d9      	BRNE __ADDF125
                 __ADDF126:
0002f1 2d50      	MOV  R21,R0
0002f2 2551      	EOR  R21,R1
0002f3 f072      	BRMI __ADDF127
0002f4 dfcb      	RCALL __UADD12
0002f5 f438      	BRCC __ADDF129
0002f6 9567      	ROR  R22
0002f7 95f7      	ROR  R31
0002f8 95e7      	ROR  R30
0002f9 9573      	INC  R23
0002fa f413      	BRVC __ADDF129
0002fb c020      	RJMP __MAXRES
                 __ADDF128:
0002fc dfb7      	RCALL __SWAPACC
                 __ADDF129:
0002fd df3e      	RCALL __REPACK
0002fe 915f      	POP  R21
0002ff 9508      	RET
                 __ADDF1211:
000300 f7d8      	BRCC __ADDF128
000301 cffb      	RJMP __ADDF129
                 __ADDF127:
000302 1bea      	SUB  R30,R26
000303 0bfb      	SBC  R31,R27
000304 0b68      	SBC  R22,R24
000305 f051      	BREQ __ZERORES
000306 f410      	BRCC __ADDF1210
000307 9400      	COM  R0
000308 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000309 2366      	TST  R22
00030a f392      	BRMI __ADDF129
00030b 0fee      	LSL  R30
00030c 1fff      	ROL  R31
00030d 1f66      	ROL  R22
00030e 957a      	DEC  R23
00030f f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000310 27ee      	CLR  R30
000311 27ff      	CLR  R31
000312 2766      	CLR  R22
000313 2777      	CLR  R23
000314 915f      	POP  R21
000315 9508      	RET
                 
                 __MINRES:
000316 efef      	SER  R30
000317 efff      	SER  R31
000318 e76f      	LDI  R22,0x7F
000319 ef7f      	SER  R23
00031a 915f      	POP  R21
00031b 9508      	RET
                 
                 __MAXRES:
00031c efef      	SER  R30
00031d efff      	SER  R31
00031e e76f      	LDI  R22,0x7F
00031f e77f      	LDI  R23,0x7F
000320 915f      	POP  R21
000321 9508      	RET
                 
                 __MULF12:
000322 935f      	PUSH R21
000323 df2a      	RCALL __UNPACK
000324 3870      	CPI  R23,0x80
000325 f351      	BREQ __ZERORES
000326 3890      	CPI  R25,0x80
000327 f341      	BREQ __ZERORES
000328 2401      	EOR  R0,R1
000329 9408      	SEC
00032a 1f79      	ADC  R23,R25
00032b f423      	BRVC __MULF124
00032c f31c      	BRLT __ZERORES
                 __MULF125:
00032d 2000      	TST  R0
00032e f33a      	BRMI __MINRES
00032f cfec      	RJMP __MAXRES
                 __MULF124:
000330 920f      	PUSH R0
000331 931f      	PUSH R17
000332 932f      	PUSH R18
000333 933f      	PUSH R19
000334 934f      	PUSH R20
000335 2711      	CLR  R17
000336 2722      	CLR  R18
000337 2799      	CLR  R25
000338 9f68      	MUL  R22,R24
000339 01a0      	MOVW R20,R0
00033a 9f8f      	MUL  R24,R31
00033b 2d30      	MOV  R19,R0
00033c 0d41      	ADD  R20,R1
00033d 1f59      	ADC  R21,R25
00033e 9f6b      	MUL  R22,R27
00033f 0d30      	ADD  R19,R0
000340 1d41      	ADC  R20,R1
000341 1f59      	ADC  R21,R25
000342 9f8e      	MUL  R24,R30
000343 d027      	RCALL __MULF126
000344 9fbf      	MUL  R27,R31
000345 d025      	RCALL __MULF126
000346 9f6a      	MUL  R22,R26
000347 d023      	RCALL __MULF126
000348 9fbe      	MUL  R27,R30
000349 d01d      	RCALL __MULF127
00034a 9faf      	MUL  R26,R31
00034b d01b      	RCALL __MULF127
00034c 9fae      	MUL  R26,R30
00034d 0d11      	ADD  R17,R1
00034e 1f29      	ADC  R18,R25
00034f 1f39      	ADC  R19,R25
000350 1f49      	ADC  R20,R25
000351 1f59      	ADC  R21,R25
000352 2fe3      	MOV  R30,R19
000353 2ff4      	MOV  R31,R20
000354 2f65      	MOV  R22,R21
000355 2f52      	MOV  R21,R18
000356 914f      	POP  R20
000357 913f      	POP  R19
000358 912f      	POP  R18
000359 911f      	POP  R17
00035a 900f      	POP  R0
00035b 2366      	TST  R22
00035c f02a      	BRMI __MULF122
00035d 0f55      	LSL  R21
00035e 1fee      	ROL  R30
00035f 1fff      	ROL  R31
000360 1f66      	ROL  R22
000361 c002      	RJMP __MULF123
                 __MULF122:
000362 9573      	INC  R23
000363 f24b      	BRVS __MULF125
                 __MULF123:
000364 decd      	RCALL __ROUND_REPACK
000365 915f      	POP  R21
000366 9508      	RET
                 
                 __MULF127:
000367 0d10      	ADD  R17,R0
000368 1d21      	ADC  R18,R1
000369 1f39      	ADC  R19,R25
00036a c002      	RJMP __MULF128
                 __MULF126:
00036b 0d20      	ADD  R18,R0
00036c 1d31      	ADC  R19,R1
                 __MULF128:
00036d 1f49      	ADC  R20,R25
00036e 1f59      	ADC  R21,R25
00036f 9508      	RET
                 
                 __DIVF21:
000370 935f      	PUSH R21
000371 dedc      	RCALL __UNPACK
000372 3870      	CPI  R23,0x80
000373 f421      	BRNE __DIVF210
000374 2011      	TST  R1
                 __DIVF211:
000375 f40a      	BRPL __DIVF219
000376 cf9f      	RJMP __MINRES
                 __DIVF219:
000377 cfa4      	RJMP __MAXRES
                 __DIVF210:
000378 3890      	CPI  R25,0x80
000379 f409      	BRNE __DIVF218
                 __DIVF217:
00037a cf95      	RJMP __ZERORES
                 __DIVF218:
00037b 2401      	EOR  R0,R1
00037c 9408      	SEC
00037d 0b97      	SBC  R25,R23
00037e f41b      	BRVC __DIVF216
00037f f3d4      	BRLT __DIVF217
000380 2000      	TST  R0
000381 cff3      	RJMP __DIVF211
                 __DIVF216:
000382 2f79      	MOV  R23,R25
000383 931f      	PUSH R17
000384 932f      	PUSH R18
000385 933f      	PUSH R19
000386 934f      	PUSH R20
000387 2411      	CLR  R1
000388 2711      	CLR  R17
000389 2722      	CLR  R18
00038a 2733      	CLR  R19
00038b 2744      	CLR  R20
00038c 2755      	CLR  R21
00038d e290      	LDI  R25,32
                 __DIVF212:
00038e 17ae      	CP   R26,R30
00038f 07bf      	CPC  R27,R31
000390 0786      	CPC  R24,R22
000391 0741      	CPC  R20,R17
000392 f030      	BRLO __DIVF213
000393 1bae      	SUB  R26,R30
000394 0bbf      	SBC  R27,R31
000395 0b86      	SBC  R24,R22
000396 0b41      	SBC  R20,R17
000397 9408      	SEC
000398 c001      	RJMP __DIVF214
                 __DIVF213:
000399 9488      	CLC
                 __DIVF214:
00039a 1f55      	ROL  R21
00039b 1f22      	ROL  R18
00039c 1f33      	ROL  R19
00039d 1c11      	ROL  R1
00039e 1faa      	ROL  R26
00039f 1fbb      	ROL  R27
0003a0 1f88      	ROL  R24
0003a1 1f44      	ROL  R20
0003a2 959a      	DEC  R25
0003a3 f751      	BRNE __DIVF212
0003a4 01f9      	MOVW R30,R18
0003a5 2d61      	MOV  R22,R1
0003a6 914f      	POP  R20
0003a7 913f      	POP  R19
0003a8 912f      	POP  R18
0003a9 911f      	POP  R17
0003aa 2366      	TST  R22
0003ab f032      	BRMI __DIVF215
0003ac 0f55      	LSL  R21
0003ad 1fee      	ROL  R30
0003ae 1fff      	ROL  R31
0003af 1f66      	ROL  R22
0003b0 957a      	DEC  R23
0003b1 f243      	BRVS __DIVF217
                 __DIVF215:
0003b2 de7f      	RCALL __ROUND_REPACK
0003b3 915f      	POP  R21
0003b4 9508      	RET
                 
                 __CMPF12:
0003b5 2399      	TST  R25
0003b6 f09a      	BRMI __CMPF120
0003b7 2377      	TST  R23
0003b8 f042      	BRMI __CMPF121
0003b9 1797      	CP   R25,R23
0003ba f048      	BRLO __CMPF122
0003bb f429      	BRNE __CMPF121
0003bc 17ae      	CP   R26,R30
0003bd 07bf      	CPC  R27,R31
0003be 0786      	CPC  R24,R22
0003bf f020      	BRLO __CMPF122
0003c0 f031      	BREQ __CMPF123
                 __CMPF121:
0003c1 9498      	CLZ
0003c2 9488      	CLC
0003c3 9508      	RET
                 __CMPF122:
0003c4 9498      	CLZ
0003c5 9408      	SEC
0003c6 9508      	RET
                 __CMPF123:
0003c7 9418      	SEZ
0003c8 9488      	CLC
0003c9 9508      	RET
                 __CMPF120:
0003ca 2377      	TST  R23
0003cb f7c2      	BRPL __CMPF122
0003cc 1797      	CP   R25,R23
0003cd f398      	BRLO __CMPF121
0003ce f7a9      	BRNE __CMPF122
0003cf 17ea      	CP   R30,R26
0003d0 07fb      	CPC  R31,R27
0003d1 0768      	CPC  R22,R24
0003d2 f388      	BRLO __CMPF122
0003d3 f399      	BREQ __CMPF123
0003d4 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0003d5 95f0      	COM  R31
0003d6 9560      	COM  R22
0003d7 9570      	COM  R23
0003d8 95e1      	NEG  R30
0003d9 4fff      	SBCI R31,-1
0003da 4f6f      	SBCI R22,-1
0003db 4f7f      	SBCI R23,-1
0003dc 9508      	RET
                 
                 __CWD1:
0003dd 2f6f      	MOV  R22,R31
0003de 0f66      	ADD  R22,R22
0003df 0b66      	SBC  R22,R22
0003e0 2f76      	MOV  R23,R22
0003e1 9508      	RET
                 
                 __GETD1S0:
0003e2 81e8      	LD   R30,Y
0003e3 81f9      	LDD  R31,Y+1
0003e4 816a      	LDD  R22,Y+2
0003e5 817b      	LDD  R23,Y+3
0003e6 9508      	RET
                 
                 __GETD2S0:
0003e7 81a8      	LD   R26,Y
0003e8 81b9      	LDD  R27,Y+1
0003e9 818a      	LDD  R24,Y+2
0003ea 819b      	LDD  R25,Y+3
0003eb 9508      	RET
                 
                 __PUTD1S0:
0003ec 83e8      	ST   Y,R30
0003ed 83f9      	STD  Y+1,R31
0003ee 836a      	STD  Y+2,R22
0003ef 837b      	STD  Y+3,R23
0003f0 9508      	RET
                 
                 __PUTPARD1:
0003f1 937a      	ST   -Y,R23
0003f2 936a      	ST   -Y,R22
0003f3 93fa      	ST   -Y,R31
0003f4 93ea      	ST   -Y,R30
0003f5 9508      	RET
                 
                 __PUTPARD2:
0003f6 939a      	ST   -Y,R25
0003f7 938a      	ST   -Y,R24
0003f8 93ba      	ST   -Y,R27
0003f9 93aa      	ST   -Y,R26
0003fa 9508      	RET
                 
                 __SWAPD12:
0003fb 2e18      	MOV  R1,R24
0003fc 2f86      	MOV  R24,R22
0003fd 2d61      	MOV  R22,R1
0003fe 2e19      	MOV  R1,R25
0003ff 2f97      	MOV  R25,R23
000400 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000401 2e1b      	MOV  R1,R27
000402 2fbf      	MOV  R27,R31
000403 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000404 2e1a      	MOV  R1,R26
000405 2fae      	MOV  R26,R30
000406 2de1      	MOV  R30,R1
000407 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   1 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  72 r23:  67 
r24:  47 r25:  48 r26:  67 r27:  46 r28:   6 r29:   1 r30: 137 r31:  59 
x  :  11 y  : 108 z  :   8 
Registers used: 22 out of 35 (62.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   7 
adiw  :   7 and   :   5 andi  :   0 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   2 brmi  :   9 brne  :  22 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  65 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  31 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   6 cpc   :  12 cpi   :  26 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  14 ldd   :  51 ldi   :  85 
lds   :   0 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  49 movw  :  16 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   1 out   :  17 pop   :  18 push  :  18 rcall :  23 ret   :  42 
reti  :   0 rjmp  :  42 rol   :  24 ror   :  15 sbc   :   7 sbci  :   9 
sbi   :   3 sbic  :   0 sbis  :   2 sbiw  :   9 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  34 std   :  20 sts   :   0 sub   :   4 subi  :  12 swap  :   0 
tst   :  19 wdr   :   1 
Instructions used: 72 out of 116 (62.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000810   2026     38   2064   32768   6.3%
[.dseg] 0x000060 0x00026e      0     14     14    2048   0.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
