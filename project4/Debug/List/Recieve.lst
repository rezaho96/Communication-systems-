
AVRASM ver. 2.1.30  F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm Tue Jun 29 22:35:51 2021

F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm(1088): warning: Register r5 already defined by the .DEF directive
F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0078 	JMP  _SPI_INT
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6554
000034 706d
000035 6572
000036 7574      	.DB  0x54,0x65,0x6D,0x70,0x72,0x65,0x74,0x75
000037 6572
000038 3d20
000039 0020      	.DB  0x72,0x65,0x20,0x3D,0x20,0x0
                 _0x2020060:
F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm(1131): warning: .cseg .db misalignment - padding zero byte
00003a 0001      	.DB  0x1
                 _0x2020000:
00003b 4e2d
00003c 4e41
00003d 4900
00003e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\train\term8\Communication systems\New folder\project4\Debug\List\Recieve.asm(1134): warning: .cseg .db misalignment - padding zero byte
00003f 0000      	.DB  0x0
                 _0x2040003:
000040 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000041 000e      	.DW  0x0E
000042 0260      	.DW  _0x5
000043 0066      	.DW  _0x0*2
                 
000044 0001      	.DW  0x01
000045 0288      	.DW  __seed_G101
000046 0074      	.DW  _0x2020060*2
                 
000047 0002      	.DW  0x02
000048 028c      	.DW  __base_y_G102
000049 0080      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00004a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004b 94f8      	CLI
00004c 27ee      	CLR  R30
00004d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004e e0f1      	LDI  R31,1
00004f bffb      	OUT  GICR,R31
000050 bfeb      	OUT  GICR,R30
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000052 e08d      	LDI  R24,(14-2)+1
000053 e0a2      	LDI  R26,2
000054 27bb      	CLR  R27
                 __CLEAR_REG:
000055 93ed      	ST   X+,R30
000056 958a      	DEC  R24
000057 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000058 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000059 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005b 93ed      	ST   X+,R30
00005c 9701      	SBIW R24,1
00005d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005e e8e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000060 9185      	LPM  R24,Z+
000061 9195      	LPM  R25,Z+
000062 9700      	SBIW R24,0
000063 f061      	BREQ __GLOBAL_INI_END
000064 91a5      	LPM  R26,Z+
000065 91b5      	LPM  R27,Z+
000066 9005      	LPM  R0,Z+
000067 9015      	LPM  R1,Z+
000068 01bf      	MOVW R22,R30
000069 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006a 9005      	LPM  R0,Z+
00006b 920d      	ST   X+,R0
00006c 9701      	SBIW R24,1
00006d f7e1      	BRNE __GLOBAL_INI_LOOP
00006e 01fb      	MOVW R30,R22
00006f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000070 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000071 bfed      	OUT  SPL,R30
000072 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000073 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000074 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000075 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000076 940c 00f6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <lcd.h>
                 ;
                 ;#asm
                     .equ __lcd_port = 0x1B;
                 ; 0000 0009 #endasm
                 ;
                 ;float Tempreture1=0,Tempreture2=0,T=0,Duty;
                 ;char str[10];
                 ;
                 ;interrupt[13] void SPI_INT(void){
                 ; 0000 000E interrupt[13] void SPI_INT(void){
                 
                 	.CSEG
                 _SPI_INT:
                 ; .FSTART _SPI_INT
000078 920a      	ST   -Y,R0
000079 921a      	ST   -Y,R1
00007a 92fa      	ST   -Y,R15
00007b 936a      	ST   -Y,R22
00007c 937a      	ST   -Y,R23
00007d 938a      	ST   -Y,R24
00007e 939a      	ST   -Y,R25
00007f 93aa      	ST   -Y,R26
000080 93ba      	ST   -Y,R27
000081 93ea      	ST   -Y,R30
000082 93fa      	ST   -Y,R31
000083 b7ef      	IN   R30,SREG
000084 93ea      	ST   -Y,R30
                 ; 0000 000F     if(PIND.0 == 0)
000085 9980      	SBIC 0x10,0
000086 c005      	RJMP _0x3
                 ; 0000 0010             Tempreture1 = SPDR;
000087 b1ef      	IN   R30,0xF
000088 e6ae      	LDI  R26,LOW(_Tempreture1)
000089 e0b2      	LDI  R27,HIGH(_Tempreture1)
00008a 940e 031f 	CALL SUBOPT_0x0
                 ; 0000 0011         if(PIND.1 == 0)
                 _0x3:
00008c 9981      	SBIC 0x10,1
00008d c005      	RJMP _0x4
                 ; 0000 0012             Tempreture2 = SPDR;
00008e b1ef      	IN   R30,0xF
00008f e7a2      	LDI  R26,LOW(_Tempreture2)
000090 e0b2      	LDI  R27,HIGH(_Tempreture2)
000091 940e 031f 	CALL SUBOPT_0x0
                 ; 0000 0013         T = (Tempreture1+Tempreture2)/2;
                 _0x4:
000093 91e0 0272 	LDS  R30,_Tempreture2
000095 91f0 0273 	LDS  R31,_Tempreture2+1
000097 9160 0274 	LDS  R22,_Tempreture2+2
000099 9170 0275 	LDS  R23,_Tempreture2+3
00009b 91a0 026e 	LDS  R26,_Tempreture1
00009d 91b0 026f 	LDS  R27,_Tempreture1+1
00009f 9180 0270 	LDS  R24,_Tempreture1+2
0000a1 9190 0271 	LDS  R25,_Tempreture1+3
0000a3 940e 0450 	CALL __ADDF12
0000a5 01df      	MOVW R26,R30
0000a6 01cb      	MOVW R24,R22
                +
0000a7 e0e0     +LDI R30 , LOW ( 0x40000000 )
0000a8 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0000a9 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0000aa e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0000ab 940e 04ee 	CALL __DIVF21
0000ad 93e0 0276 	STS  _T,R30
0000af 93f0 0277 	STS  _T+1,R31
0000b1 9360 0278 	STS  _T+2,R22
0000b3 9370 0279 	STS  _T+3,R23
                 ; 0000 0014         ftoa(T,3,str);
0000b5 940e 0327 	CALL SUBOPT_0x1
0000b7 940e 0330 	CALL SUBOPT_0x2
                 ; 0000 0015         lcd_clear();
0000b9 940e 0248 	CALL _lcd_clear
                 ; 0000 0016         lcd_puts("Tempreture = ");
                +
0000bb e6a0     +LDI R26 , LOW ( _0x5 + ( 0 ) )
0000bc e0b2     +LDI R27 , HIGH ( _0x5 + ( 0 ) )
                 	__POINTW2MN _0x5,0
0000bd 940e 0275 	CALL _lcd_puts
                 ; 0000 0017         lcd_puts(str);
0000bf e7ae      	LDI  R26,LOW(_str)
0000c0 e0b2      	LDI  R27,HIGH(_str)
0000c1 940e 0275 	CALL _lcd_puts
                 ; 0000 0018         Duty = (25*T - 575)/100;
0000c3 940e 0327 	CALL SUBOPT_0x1
                +
0000c5 e0a0     +LDI R26 , LOW ( 0x41C80000 )
0000c6 e0b0     +LDI R27 , HIGH ( 0x41C80000 )
0000c7 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
0000c8 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
0000c9 940e 04a0 	CALL __MULF12
0000cb 01df      	MOVW R26,R30
0000cc 01cb      	MOVW R24,R22
                +
0000cd e0e0     +LDI R30 , LOW ( 0x440FC000 )
0000ce ecf0     +LDI R31 , HIGH ( 0x440FC000 )
0000cf e06f     +LDI R22 , BYTE3 ( 0x440FC000 )
0000d0 e474     +LDI R23 , BYTE4 ( 0x440FC000 )
                 	__GETD1N 0x440FC000
0000d1 940e 0338 	CALL SUBOPT_0x3
0000d3 01df      	MOVW R26,R30
0000d4 01cb      	MOVW R24,R22
                +
0000d5 e0e0     +LDI R30 , LOW ( 0x42C80000 )
0000d6 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0000d7 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0000d8 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0000d9 940e 04ee 	CALL __DIVF21
0000db 93e0 027a 	STS  _Duty,R30
0000dd 93f0 027b 	STS  _Duty+1,R31
0000df 9360 027c 	STS  _Duty+2,R22
0000e1 9370 027d 	STS  _Duty+3,R23
                 ; 0000 0019         ftoa(Duty,3,str);
0000e3 940e 033d 	CALL SUBOPT_0x4
0000e5 940e 0330 	CALL SUBOPT_0x2
                 ; 0000 001A         SPSR.SPIF = 0;
0000e7 9877      	CBI  0xE,7
                 ; 0000 001B }
0000e8 91e9      	LD   R30,Y+
0000e9 bfef      	OUT  SREG,R30
0000ea 91f9      	LD   R31,Y+
0000eb 91e9      	LD   R30,Y+
0000ec 91b9      	LD   R27,Y+
0000ed 91a9      	LD   R26,Y+
0000ee 9199      	LD   R25,Y+
0000ef 9189      	LD   R24,Y+
0000f0 9179      	LD   R23,Y+
0000f1 9169      	LD   R22,Y+
0000f2 90f9      	LD   R15,Y+
0000f3 9019      	LD   R1,Y+
0000f4 9009      	LD   R0,Y+
0000f5 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 _0x5:
000260           	.BYTE 0xE
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001F {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0020 lcd_init(16);
0000f6 e1a0      	LDI  R26,LOW(16)
0000f7 940e 0297 	CALL _lcd_init
                 ; 0000 0021 
                 ; 0000 0022 DDRD = 0x00;
0000f9 e0e0      	LDI  R30,LOW(0)
0000fa bbe1      	OUT  0x11,R30
                 ; 0000 0023 DDRB = 0x40;
0000fb e4e0      	LDI  R30,LOW(64)
0000fc bbe7      	OUT  0x17,R30
                 ; 0000 0024 DDRC = 0xFF;
0000fd efef      	LDI  R30,LOW(255)
0000fe bbe4      	OUT  0x14,R30
                 ; 0000 0025 SPCR = 0xE1;
0000ff eee1      	LDI  R30,LOW(225)
000100 b9ed      	OUT  0xD,R30
                 ; 0000 0026 
                 ; 0000 0027 #asm("sei")
000101 9478      	sei
                 ; 0000 0028 
                 ; 0000 0029 while (1){
                 _0x8:
                 ; 0000 002A 
                 ; 0000 002B     if(Duty>0 && Duty<1){
000102 940e 0346 	CALL SUBOPT_0x5
000104 940e 0591 	CALL __CPD02
000106 f42c      	BRGE _0xC
000107 940e 034f 	CALL SUBOPT_0x6
000109 940e 0533 	CALL __CMPF12
00010b f008      	BRLO _0xD
                 _0xC:
00010c c00f      	RJMP _0xB
                 _0xD:
                 ; 0000 002C         PORTC = 0x01;
00010d e0e1      	LDI  R30,LOW(1)
00010e bbe5      	OUT  0x15,R30
                 ; 0000 002D         delay_ms(50*Duty);
00010f 940e 033d 	CALL SUBOPT_0x4
000111 940e 0355 	CALL SUBOPT_0x7
                 ; 0000 002E         PORTC = 0x00;
000113 e0e0      	LDI  R30,LOW(0)
000114 bbe5      	OUT  0x15,R30
                 ; 0000 002F         delay_ms((1-Duty)*50);
000115 940e 034f 	CALL SUBOPT_0x6
000117 940e 0449 	CALL __SUBF12
000119 940e 0355 	CALL SUBOPT_0x7
                 ; 0000 0030     }
                 ; 0000 0031     else if(Duty>=1)
00011b c009      	RJMP _0xE
                 _0xB:
00011c 940e 034f 	CALL SUBOPT_0x6
00011e 940e 0533 	CALL __CMPF12
000120 f010      	BRLO _0xF
                 ; 0000 0032         PORTC = 0x01;
000121 e0e1      	LDI  R30,LOW(1)
000122 c001      	RJMP _0x12
                 ; 0000 0033     else
                 _0xF:
                 ; 0000 0034         PORTC = 0x00;
000123 e0e0      	LDI  R30,LOW(0)
                 _0x12:
000124 bbe5      	OUT  0x15,R30
                 ; 0000 0035 
                 ; 0000 0036  }
                 _0xE:
000125 cfdc      	RJMP _0x8
                 ; 0000 0037 }
                 _0x11:
000126 cfff      	RJMP _0x11
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000127 93ba      	ST   -Y,R27
000128 93aa      	ST   -Y,R26
000129 9724      	SBIW R28,4
00012a e0e0      	LDI  R30,LOW(0)
00012b 83e8      	ST   Y,R30
00012c 83e9      	STD  Y+1,R30
00012d 83ea      	STD  Y+2,R30
00012e e3ef      	LDI  R30,LOW(63)
00012f 83eb      	STD  Y+3,R30
000130 931a      	ST   -Y,R17
000131 930a      	ST   -Y,R16
000132 85eb      	LDD  R30,Y+11
000133 85fc      	LDD  R31,Y+11+1
000134 3fef      	CPI  R30,LOW(0xFFFF)
000135 efaf      	LDI  R26,HIGH(0xFFFF)
000136 07fa      	CPC  R31,R26
000137 f439      	BRNE _0x202000D
000138 940e 0360 	CALL SUBOPT_0x8
                +
00013a e7a6     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00013b e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00013c 940e 02ca 	CALL _strcpyf
00013e c0b5      	RJMP _0x20C0004
                 _0x202000D:
00013f 3fef      	CPI  R30,LOW(0x7FFF)
000140 e7af      	LDI  R26,HIGH(0x7FFF)
000141 07fa      	CPC  R31,R26
000142 f439      	BRNE _0x202000C
000143 940e 0360 	CALL SUBOPT_0x8
                +
000145 e7a7     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000146 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000147 940e 02ca 	CALL _strcpyf
000149 c0aa      	RJMP _0x20C0004
                 _0x202000C:
00014a 85ac      	LDD  R26,Y+12
00014b 23aa      	TST  R26
00014c f462      	BRPL _0x202000F
                +
00014d 85e9     +LDD R30 , Y + 9
00014e 85fa     +LDD R31 , Y + 9 + 1
00014f 856b     +LDD R22 , Y + 9 + 2
000150 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000151 940e 03aa 	CALL __ANEGF1
000153 940e 0365 	CALL SUBOPT_0x9
000155 940e 036a 	CALL SUBOPT_0xA
000157 e2ed      	LDI  R30,LOW(45)
000158 93ec      	ST   X,R30
                 _0x202000F:
000159 85a8      	LDD  R26,Y+8
00015a 30a7      	CPI  R26,LOW(0x7)
00015b f010      	BRLO _0x2020010
00015c e0e6      	LDI  R30,LOW(6)
00015d 87e8      	STD  Y+8,R30
                 _0x2020010:
00015e 8518      	LDD  R17,Y+8
                 _0x2020011:
00015f 2fe1      	MOV  R30,R17
000160 5011      	SUBI R17,1
000161 30e0      	CPI  R30,0
000162 f039      	BREQ _0x2020013
000163 940e 0371 	CALL SUBOPT_0xB
000165 940e 0376 	CALL SUBOPT_0xC
000167 940e 037d 	CALL SUBOPT_0xD
000169 cff5      	RJMP _0x2020011
                 _0x2020013:
00016a 940e 0382 	CALL SUBOPT_0xE
00016c 940e 0450 	CALL __ADDF12
00016e 940e 0365 	CALL SUBOPT_0x9
000170 e010      	LDI  R17,LOW(0)
                +
000171 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000172 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000173 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000174 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000175 940e 037d 	CALL SUBOPT_0xD
                 _0x2020014:
000177 940e 0382 	CALL SUBOPT_0xE
000179 940e 0533 	CALL __CMPF12
00017b f088      	BRLO _0x2020016
00017c 940e 0371 	CALL SUBOPT_0xB
00017e 940e 038b 	CALL SUBOPT_0xF
000180 940e 037d 	CALL SUBOPT_0xD
000182 5f1f      	SUBI R17,-LOW(1)
000183 3217      	CPI  R17,39
000184 f038      	BRLO _0x2020017
000185 940e 0360 	CALL SUBOPT_0x8
                +
000187 e7ab     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
000188 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
000189 940e 02ca 	CALL _strcpyf
00018b c068      	RJMP _0x20C0004
                 _0x2020017:
00018c cfea      	RJMP _0x2020014
                 _0x2020016:
00018d 3010      	CPI  R17,0
00018e f429      	BRNE _0x2020018
00018f 940e 036a 	CALL SUBOPT_0xA
000191 e3e0      	LDI  R30,LOW(48)
000192 93ec      	ST   X,R30
000193 c031      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
000194 2fe1      	MOV  R30,R17
000195 5011      	SUBI R17,1
000196 30e0      	CPI  R30,0
000197 f169      	BREQ _0x202001C
000198 940e 0371 	CALL SUBOPT_0xB
00019a 940e 0376 	CALL SUBOPT_0xC
                +
00019c e0a0     +LDI R26 , LOW ( 0x3F000000 )
00019d e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00019e e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00019f e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0001a0 940e 0450 	CALL __ADDF12
0001a2 01df      	MOVW R26,R30
0001a3 01cb      	MOVW R24,R22
0001a4 940e 0308 	CALL _floor
0001a6 940e 037d 	CALL SUBOPT_0xD
0001a8 940e 0382 	CALL SUBOPT_0xE
0001aa 940e 04ee 	CALL __DIVF21
0001ac 940e 03dd 	CALL __CFD1U
0001ae 2f0e      	MOV  R16,R30
0001af 940e 036a 	CALL SUBOPT_0xA
0001b1 2fe0      	MOV  R30,R16
0001b2 5de0      	SUBI R30,-LOW(48)
0001b3 93ec      	ST   X,R30
0001b4 2fe0      	MOV  R30,R16
0001b5 e0f0      	LDI  R31,0
0001b6 940e 0371 	CALL SUBOPT_0xB
0001b8 940e 0561 	CALL __CWD1
0001ba 940e 0416 	CALL __CDF1
0001bc 940e 04a0 	CALL __MULF12
0001be 940e 0392 	CALL SUBOPT_0x10
0001c0 940e 0338 	CALL SUBOPT_0x3
0001c2 940e 0365 	CALL SUBOPT_0x9
0001c4 cfcf      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
0001c5 85e8      	LDD  R30,Y+8
0001c6 30e0      	CPI  R30,0
0001c7 f141      	BREQ _0x20C0003
0001c8 940e 036a 	CALL SUBOPT_0xA
0001ca e2ee      	LDI  R30,LOW(46)
0001cb 93ec      	ST   X,R30
                 _0x202001E:
0001cc 85e8      	LDD  R30,Y+8
0001cd 50e1      	SUBI R30,LOW(1)
0001ce 87e8      	STD  Y+8,R30
0001cf 5fef      	SUBI R30,-LOW(1)
0001d0 f0f9      	BREQ _0x2020020
0001d1 940e 0392 	CALL SUBOPT_0x10
0001d3 940e 038b 	CALL SUBOPT_0xF
0001d5 940e 0365 	CALL SUBOPT_0x9
                +
0001d7 85e9     +LDD R30 , Y + 9
0001d8 85fa     +LDD R31 , Y + 9 + 1
0001d9 856b     +LDD R22 , Y + 9 + 2
0001da 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0001db 940e 03dd 	CALL __CFD1U
0001dd 2f0e      	MOV  R16,R30
0001de 940e 036a 	CALL SUBOPT_0xA
0001e0 2fe0      	MOV  R30,R16
0001e1 5de0      	SUBI R30,-LOW(48)
0001e2 93ec      	ST   X,R30
0001e3 2fe0      	MOV  R30,R16
0001e4 e0f0      	LDI  R31,0
0001e5 940e 0392 	CALL SUBOPT_0x10
0001e7 940e 0561 	CALL __CWD1
0001e9 940e 0416 	CALL __CDF1
0001eb 940e 0338 	CALL SUBOPT_0x3
0001ed 940e 0365 	CALL SUBOPT_0x9
0001ef cfdc      	RJMP _0x202001E
                 _0x2020020:
                 _0x20C0003:
0001f0 81ae      	LDD  R26,Y+6
0001f1 81bf      	LDD  R27,Y+6+1
0001f2 e0e0      	LDI  R30,LOW(0)
0001f3 93ec      	ST   X,R30
                 _0x20C0004:
0001f4 8119      	LDD  R17,Y+1
0001f5 8108      	LDD  R16,Y+0
0001f6 962d      	ADIW R28,13
0001f7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G102:
                 ; .FSTART __lcd_delay_G102
0001f8 e0ff          ldi   r31,15
                 __lcd_delay0:
0001f9 95fa          dec   r31
0001fa f7f1          brne  __lcd_delay0
0001fb 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0001fc b3aa          in    r26,__lcd_direction
0001fd 70af          andi  r26,0xf                 ;set as input
0001fe bbaa          out   __lcd_direction,r26
0001ff 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000200 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000201 dff6      	RCALL __lcd_delay_G102
000202 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000203 dff4      	RCALL __lcd_delay_G102
000204 b3a9          in    r26,__lcd_pin
000205 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000206 dff1      	RCALL __lcd_delay_G102
000207 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000208 dfef      	RCALL __lcd_delay_G102
000209 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00020a fda7          sbrc  r26,__lcd_busy_flag
00020b cff5          rjmp  __lcd_busy
00020c 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
00020d 7fa0          andi  r26,0xf0
00020e 2bab          or    r26,r27
00020f bbab          out   __lcd_port,r26          ;write
000210 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000211 940e 01f8 	CALL __lcd_delay_G102
000213 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000214 940e 01f8 	CALL __lcd_delay_G102
000216 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000217 93aa      	ST   -Y,R26
000218 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000219 b3aa          in    r26,__lcd_direction
00021a 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
00021b bbaa          out   __lcd_direction,r26
00021c b3bb          in    r27,__lcd_port
00021d 70bf          andi  r27,0xf
00021e 81a8          ld    r26,y
00021f dfed      	RCALL __lcd_write_nibble_G102
000220 81a8          ld    r26,y
000221 95a2          swap  r26
000222 dfea      	RCALL __lcd_write_nibble_G102
000223 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000224 940c 02c8 	JMP  _0x20C0002
                 ; .FEND
                 __lcd_read_nibble_G102:
                 ; .FSTART __lcd_read_nibble_G102
000226 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000227 940e 01f8 	CALL __lcd_delay_G102
000229 b3e9          in    r30,__lcd_pin           ;read
00022a 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00022b 940e 01f8 	CALL __lcd_delay_G102
00022d 7fe0          andi  r30,0xf0
00022e 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G102:
                 ; .FSTART _lcd_read_byte0_G102
00022f 940e 01f8 	CALL __lcd_delay_G102
000231 dff4      	RCALL __lcd_read_nibble_G102
000232 2fae          mov   r26,r30
000233 dff2      	RCALL __lcd_read_nibble_G102
000234 98d9          cbi   __lcd_port,__lcd_rd     ;RD=0
000235 95e2          swap  r30
000236 2bea          or    r30,r26
000237 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000238 93aa      	ST   -Y,R26
000239 940e 01fc 	CALL __lcd_ready
00023b 81e8      	LD   R30,Y
00023c e0f0      	LDI  R31,0
00023d 57e4      	SUBI R30,LOW(-__base_y_G102)
00023e 4ffd      	SBCI R31,HIGH(-__base_y_G102)
00023f 81e0      	LD   R30,Z
000240 81a9      	LDD  R26,Y+1
000241 0fae      	ADD  R26,R30
000242 940e 0217 	CALL __lcd_write_data
000244 8059      	LDD  R5,Y+1
000245 8048      	LDD  R4,Y+0
000246 9622      	ADIW R28,2
000247 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000248 940e 01fc 	CALL __lcd_ready
00024a e0a2      	LDI  R26,LOW(2)
00024b 940e 0217 	CALL __lcd_write_data
00024d 940e 01fc 	CALL __lcd_ready
00024f e0ac      	LDI  R26,LOW(12)
000250 940e 0217 	CALL __lcd_write_data
000252 940e 01fc 	CALL __lcd_ready
000254 e0a1      	LDI  R26,LOW(1)
000255 940e 0217 	CALL __lcd_write_data
000257 e0e0      	LDI  R30,LOW(0)
000258 2e4e      	MOV  R4,R30
000259 2e5e      	MOV  R5,R30
00025a 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00025b 93aa      	ST   -Y,R26
00025c 93ef          push r30
00025d 93ff          push r31
00025e 81a8          ld   r26,y
00025f 9468          set
000260 30aa          cpi  r26,10
000261 f019          breq __lcd_putchar1
000262 94e8          clt
000263 1457      	CP   R5,R7
000264 f030      	BRLO _0x2040004
                 	__lcd_putchar1:
000265 9443      	INC  R4
000266 e0e0      	LDI  R30,LOW(0)
000267 93ea      	ST   -Y,R30
000268 2da4      	MOV  R26,R4
000269 dfce      	RCALL _lcd_gotoxy
00026a f036      	brts __lcd_putchar0
                 _0x2040004:
00026b 9453      	INC  R5
00026c df8f          rcall __lcd_ready
00026d 9ad8          sbi  __lcd_port,__lcd_rs ;RS=1
00026e 81a8      	LD   R26,Y
00026f 940e 0217 	CALL __lcd_write_data
                 __lcd_putchar0:
000271 91ff          pop  r31
000272 91ef          pop  r30
000273 940c 02c8 	JMP  _0x20C0002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000275 93ba      	ST   -Y,R27
000276 93aa      	ST   -Y,R26
000277 931a      	ST   -Y,R17
                 _0x2040005:
000278 81a9      	LDD  R26,Y+1
000279 81ba      	LDD  R27,Y+1+1
00027a 91ed      	LD   R30,X+
00027b 83a9      	STD  Y+1,R26
00027c 83ba      	STD  Y+1+1,R27
00027d 2f1e      	MOV  R17,R30
00027e 30e0      	CPI  R30,0
00027f f019      	BREQ _0x2040007
000280 2fa1      	MOV  R26,R17
000281 dfd9      	RCALL _lcd_putchar
000282 cff5      	RJMP _0x2040005
                 _0x2040007:
000283 8118      	LDD  R17,Y+0
000284 9623      	ADIW R28,3
000285 9508      	RET
                 ; .FEND
                 __long_delay_G102:
                 ; .FSTART __long_delay_G102
000286 27aa          clr   r26
000287 27bb          clr   r27
                 __long_delay0:
000288 9711          sbiw  r26,1         ;2 cycles
000289 f7f1          brne  __long_delay0 ;2 cycles
00028a 9508      	RET
                 ; .FEND
                 __lcd_init_write_G102:
                 ; .FSTART __lcd_init_write_G102
00028b 93aa      	ST   -Y,R26
00028c 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00028d b3aa          in    r26,__lcd_direction
00028e 6fa7          ori   r26,0xf7                ;set as output
00028f bbaa          out   __lcd_direction,r26
000290 b3bb          in    r27,__lcd_port
000291 70bf          andi  r27,0xf
000292 81a8          ld    r26,y
000293 940e 020d 	CALL __lcd_write_nibble_G102
000295 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000296 c031      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000297 93aa      	ST   -Y,R26
000298 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000299 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
00029a 8078      	LDD  R7,Y+0
00029b 81e8      	LD   R30,Y
00029c 58e0      	SUBI R30,-LOW(128)
                +
00029d 93e0 028e+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
00029f 81e8      	LD   R30,Y
0002a0 54e0      	SUBI R30,-LOW(192)
                +
0002a1 93e0 028f+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
0002a3 940e 0397 	CALL SUBOPT_0x11
0002a5 940e 0397 	CALL SUBOPT_0x11
0002a7 940e 0397 	CALL SUBOPT_0x11
0002a9 dfdc      	RCALL __long_delay_G102
0002aa e2a0      	LDI  R26,LOW(32)
0002ab dfdf      	RCALL __lcd_init_write_G102
0002ac dfd9      	RCALL __long_delay_G102
0002ad e2a8      	LDI  R26,LOW(40)
0002ae 940e 039c 	CALL SUBOPT_0x12
0002b0 e0a4      	LDI  R26,LOW(4)
0002b1 940e 039c 	CALL SUBOPT_0x12
0002b3 e8a5      	LDI  R26,LOW(133)
0002b4 940e 039c 	CALL SUBOPT_0x12
0002b6 b3aa          in    r26,__lcd_direction
0002b7 70af          andi  r26,0xf                 ;set as input
0002b8 bbaa          out   __lcd_direction,r26
0002b9 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002ba 940e 022f 	CALL _lcd_read_byte0_G102
0002bc 30e5      	CPI  R30,LOW(0x5)
0002bd f011      	BREQ _0x204000B
0002be e0e0      	LDI  R30,LOW(0)
0002bf c008      	RJMP _0x20C0002
                 _0x204000B:
0002c0 940e 01fc 	CALL __lcd_ready
0002c2 e0a6      	LDI  R26,LOW(6)
0002c3 940e 0217 	CALL __lcd_write_data
0002c5 940e 0248 	CALL _lcd_clear
0002c7 e0e1      	LDI  R30,LOW(1)
                 _0x20C0002:
0002c8 9621      	ADIW R28,1
0002c9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0002ca 93ba      	ST   -Y,R27
0002cb 93aa      	ST   -Y,R26
0002cc 91e9          ld   r30,y+
0002cd 91f9          ld   r31,y+
0002ce 91a9          ld   r26,y+
0002cf 91b9          ld   r27,y+
0002d0 01cd          movw r24,r26
                 strcpyf0:
0002d1 9005      	lpm  r0,z+
0002d2 920d          st   x+,r0
0002d3 2000          tst  r0
0002d4 f7e1          brne strcpyf0
0002d5 01fc          movw r30,r24
0002d6 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0002d7 940e 057f 	CALL __PUTPARD2
0002d9 817b         ldd  r23,y+3
0002da 816a         ldd  r22,y+2
0002db 81f9         ldd  r31,y+1
0002dc 81e8         ld   r30,y
0002dd fb77         bst  r23,7
0002de 0f77         lsl  r23
0002df fd67         sbrc r22,7
0002e0 6071         sbr  r23,1
0002e1 2f97         mov  r25,r23
0002e2 579e         subi r25,0x7e
0002e3 f081         breq __ftrunc0
0002e4 f078         brcs __ftrunc0
0002e5 3198         cpi  r25,24
0002e6 f490         brsh __ftrunc1
0002e7 27aa         clr  r26
0002e8 27bb         clr  r27
0002e9 2788         clr  r24
                 __ftrunc2:
0002ea 9408         sec
0002eb 9587         ror  r24
0002ec 95b7         ror  r27
0002ed 95a7         ror  r26
0002ee 959a         dec  r25
0002ef f7d1         brne __ftrunc2
0002f0 23ea         and  r30,r26
0002f1 23fb         and  r31,r27
0002f2 2368         and  r22,r24
0002f3 c005         rjmp __ftrunc1
                 __ftrunc0:
0002f4 94e8         clt
0002f5 2777         clr  r23
0002f6 27ee         clr  r30
0002f7 27ff         clr  r31
0002f8 2766         clr  r22
                 __ftrunc1:
0002f9 776f         cbr  r22,0x80
0002fa 9576         lsr  r23
0002fb f408         brcc __ftrunc3
0002fc 6860         sbr  r22,0x80
                 __ftrunc3:
0002fd f977         bld  r23,7
0002fe 91a9         ld   r26,y+
0002ff 91b9         ld   r27,y+
000300 9189         ld   r24,y+
000301 9199         ld   r25,y+
000302 17ea         cp   r30,r26
000303 07fb         cpc  r31,r27
000304 0768         cpc  r22,r24
000305 0779         cpc  r23,r25
000306 fb97         bst  r25,7
000307 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000308 940e 057f 	CALL __PUTPARD2
00030a 940e 0570 	CALL __GETD2S0
00030c 940e 02d7 	CALL _ftrunc
00030e 940e 0575 	CALL __PUTD1S0
000310 f419          brne __floor1
                 __floor0:
000311 940e 056b 	CALL __GETD1S0
000313 c009      	RJMP _0x20C0001
                 __floor1:
000314 f7e6          brtc __floor0
000315 940e 056b 	CALL __GETD1S0
                +
000317 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000318 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000319 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00031a e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00031b 940e 0449 	CALL __SUBF12
                 _0x20C0001:
00031d 9624      	ADIW R28,4
00031e 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _Tempreture1:
00026e           	.BYTE 0x4
                 _Tempreture2:
000272           	.BYTE 0x4
                 _T:
000276           	.BYTE 0x4
                 _Duty:
00027a           	.BYTE 0x4
                 _str:
00027e           	.BYTE 0xA
                 __seed_G101:
000288           	.BYTE 0x4
                 __base_y_G102:
00028c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00031f 27ff      	CLR  R31
000320 2766      	CLR  R22
000321 2777      	CLR  R23
000322 940e 0416 	CALL __CDF1
000324 940e 0566 	CALL __PUTDP1
000326 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000327 91e0 0276 	LDS  R30,_T
000329 91f0 0277 	LDS  R31,_T+1
00032b 9160 0278 	LDS  R22,_T+2
00032d 9170 0279 	LDS  R23,_T+3
00032f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000330 940e 057a 	CALL __PUTPARD1
000332 e0e3      	LDI  R30,LOW(3)
000333 93ea      	ST   -Y,R30
000334 e7ae      	LDI  R26,LOW(_str)
000335 e0b2      	LDI  R27,HIGH(_str)
000336 940c 0127 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000338 940e 0584 	CALL __SWAPD12
00033a 940e 0449 	CALL __SUBF12
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00033d 91e0 027a 	LDS  R30,_Duty
00033f 91f0 027b 	LDS  R31,_Duty+1
000341 9160 027c 	LDS  R22,_Duty+2
000343 9170 027d 	LDS  R23,_Duty+3
000345 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
000346 91a0 027a 	LDS  R26,_Duty
000348 91b0 027b 	LDS  R27,_Duty+1
00034a 9180 027c 	LDS  R24,_Duty+2
00034c 9190 027d 	LDS  R25,_Duty+3
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00034f dff6      	RCALL SUBOPT_0x5
                +
000350 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000351 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000352 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000353 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
                +
000355 e0a0     +LDI R26 , LOW ( 0x42480000 )
000356 e0b0     +LDI R27 , HIGH ( 0x42480000 )
000357 e488     +LDI R24 , BYTE3 ( 0x42480000 )
000358 e492     +LDI R25 , BYTE4 ( 0x42480000 )
                 	__GETD2N 0x42480000
000359 940e 04a0 	CALL __MULF12
00035b 940e 03dd 	CALL __CFD1U
00035d 01df      	MOVW R26,R30
00035e 940c 03a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000360 81ee      	LDD  R30,Y+6
000361 81ff      	LDD  R31,Y+6+1
000362 93fa      	ST   -Y,R31
000363 93ea      	ST   -Y,R30
000364 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
000365 87e9     +STD Y + 9 , R30
000366 87fa     +STD Y + 9 + 1 , R31
000367 876b     +STD Y + 9 + 2 , R22
000368 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
00036a 81ae      	LDD  R26,Y+6
00036b 81bf      	LDD  R27,Y+6+1
00036c 9611      	ADIW R26,1
00036d 83ae      	STD  Y+6,R26
00036e 83bf      	STD  Y+6+1,R27
00036f 9711      	SBIW R26,1
000370 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
                +
000371 81aa     +LDD R26 , Y + 2
000372 81bb     +LDD R27 , Y + 2 + 1
000373 818c     +LDD R24 , Y + 2 + 2
000374 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
000376 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000377 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000378 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000379 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00037a 940e 04a0 	CALL __MULF12
00037c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
00037d 83ea     +STD Y + 2 , R30
00037e 83fb     +STD Y + 2 + 1 , R31
00037f 836c     +STD Y + 2 + 2 , R22
000380 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000381 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
000382 81ea     +LDD R30 , Y + 2
000383 81fb     +LDD R31 , Y + 2 + 1
000384 816c     +LDD R22 , Y + 2 + 2
000385 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000386 85a9     +LDD R26 , Y + 9
000387 85ba     +LDD R27 , Y + 9 + 1
000388 858b     +LDD R24 , Y + 9 + 2
000389 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00038a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
00038b e0e0     +LDI R30 , LOW ( 0x41200000 )
00038c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00038d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00038e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00038f 940e 04a0 	CALL __MULF12
000391 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
                +
000392 85a9     +LDD R26 , Y + 9
000393 85ba     +LDD R27 , Y + 9 + 1
000394 858b     +LDD R24 , Y + 9 + 2
000395 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000396 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
000397 940e 0286 	CALL __long_delay_G102
000399 e3a0      	LDI  R26,LOW(48)
00039a 940c 028b 	JMP  __lcd_init_write_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00039c 940e 0217 	CALL __lcd_write_data
00039e 940c 0286 	JMP  __long_delay_G102
                 
                 
                 	.CSEG
                 _delay_ms:
0003a0 9610      	adiw r26,0
0003a1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003a2 ef8a     +LDI R24 , LOW ( 0xFA )
0003a3 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0003a4 9701     +SBIW R24 , 1
0003a5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0003a6 95a8      	wdr
0003a7 9711      	sbiw r26,1
0003a8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003a9 9508      	ret
                 
                 __ANEGF1:
0003aa 9730      	SBIW R30,0
0003ab 4060      	SBCI R22,0
0003ac 4070      	SBCI R23,0
0003ad f009      	BREQ __ANEGF10
0003ae 5870      	SUBI R23,0x80
                 __ANEGF10:
0003af 9508      	RET
                 
                 __ROUND_REPACK:
0003b0 2355      	TST  R21
0003b1 f442      	BRPL __REPACK
0003b2 3850      	CPI  R21,0x80
0003b3 f411      	BRNE __ROUND_REPACK0
0003b4 ffe0      	SBRS R30,0
0003b5 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0003b6 9631      	ADIW R30,1
0003b7 1f69      	ADC  R22,R25
0003b8 1f79      	ADC  R23,R25
0003b9 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0003ba e850      	LDI  R21,0x80
0003bb 2757      	EOR  R21,R23
0003bc f411      	BRNE __REPACK0
0003bd 935f      	PUSH R21
0003be c0cf      	RJMP __ZERORES
                 __REPACK0:
0003bf 3f5f      	CPI  R21,0xFF
0003c0 f031      	BREQ __REPACK1
0003c1 0f66      	LSL  R22
0003c2 0c00      	LSL  R0
0003c3 9557      	ROR  R21
0003c4 9567      	ROR  R22
0003c5 2f75      	MOV  R23,R21
0003c6 9508      	RET
                 __REPACK1:
0003c7 935f      	PUSH R21
0003c8 2000      	TST  R0
0003c9 f00a      	BRMI __REPACK2
0003ca c0cf      	RJMP __MAXRES
                 __REPACK2:
0003cb c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0003cc e850      	LDI  R21,0x80
0003cd 2e19      	MOV  R1,R25
0003ce 2215      	AND  R1,R21
0003cf 0f88      	LSL  R24
0003d0 1f99      	ROL  R25
0003d1 2795      	EOR  R25,R21
0003d2 0f55      	LSL  R21
0003d3 9587      	ROR  R24
                 
                 __UNPACK1:
0003d4 e850      	LDI  R21,0x80
0003d5 2e07      	MOV  R0,R23
0003d6 2205      	AND  R0,R21
0003d7 0f66      	LSL  R22
0003d8 1f77      	ROL  R23
0003d9 2775      	EOR  R23,R21
0003da 0f55      	LSL  R21
0003db 9567      	ROR  R22
0003dc 9508      	RET
                 
                 __CFD1U:
0003dd 9468      	SET
0003de c001      	RJMP __CFD1U0
                 __CFD1:
0003df 94e8      	CLT
                 __CFD1U0:
0003e0 935f      	PUSH R21
0003e1 dff2      	RCALL __UNPACK1
0003e2 3870      	CPI  R23,0x80
0003e3 f018      	BRLO __CFD10
0003e4 3f7f      	CPI  R23,0xFF
0003e5 f408      	BRCC __CFD10
0003e6 c0a7      	RJMP __ZERORES
                 __CFD10:
0003e7 e156      	LDI  R21,22
0003e8 1b57      	SUB  R21,R23
0003e9 f4aa      	BRPL __CFD11
0003ea 9551      	NEG  R21
0003eb 3058      	CPI  R21,8
0003ec f40e      	BRTC __CFD19
0003ed 3059      	CPI  R21,9
                 __CFD19:
0003ee f030      	BRLO __CFD17
0003ef efef      	SER  R30
0003f0 efff      	SER  R31
0003f1 ef6f      	SER  R22
0003f2 e77f      	LDI  R23,0x7F
0003f3 f977      	BLD  R23,7
0003f4 c01a      	RJMP __CFD15
                 __CFD17:
0003f5 2777      	CLR  R23
0003f6 2355      	TST  R21
0003f7 f0b9      	BREQ __CFD15
                 __CFD18:
0003f8 0fee      	LSL  R30
0003f9 1fff      	ROL  R31
0003fa 1f66      	ROL  R22
0003fb 1f77      	ROL  R23
0003fc 955a      	DEC  R21
0003fd f7d1      	BRNE __CFD18
0003fe c010      	RJMP __CFD15
                 __CFD11:
0003ff 2777      	CLR  R23
                 __CFD12:
000400 3058      	CPI  R21,8
000401 f028      	BRLO __CFD13
000402 2fef      	MOV  R30,R31
000403 2ff6      	MOV  R31,R22
000404 2f67      	MOV  R22,R23
000405 5058      	SUBI R21,8
000406 cff9      	RJMP __CFD12
                 __CFD13:
000407 2355      	TST  R21
000408 f031      	BREQ __CFD15
                 __CFD14:
000409 9576      	LSR  R23
00040a 9567      	ROR  R22
00040b 95f7      	ROR  R31
00040c 95e7      	ROR  R30
00040d 955a      	DEC  R21
00040e f7d1      	BRNE __CFD14
                 __CFD15:
00040f 2000      	TST  R0
000410 f40a      	BRPL __CFD16
000411 d141      	RCALL __ANEGD1
                 __CFD16:
000412 915f      	POP  R21
000413 9508      	RET
                 
                 __CDF1U:
000414 9468      	SET
000415 c001      	RJMP __CDF1U0
                 __CDF1:
000416 94e8      	CLT
                 __CDF1U0:
000417 9730      	SBIW R30,0
000418 4060      	SBCI R22,0
000419 4070      	SBCI R23,0
00041a f0b1      	BREQ __CDF10
00041b 2400      	CLR  R0
00041c f026      	BRTS __CDF11
00041d 2377      	TST  R23
00041e f412      	BRPL __CDF11
00041f 9400      	COM  R0
000420 d132      	RCALL __ANEGD1
                 __CDF11:
000421 2e17      	MOV  R1,R23
000422 e17e      	LDI  R23,30
000423 2011      	TST  R1
                 __CDF12:
000424 f032      	BRMI __CDF13
000425 957a      	DEC  R23
000426 0fee      	LSL  R30
000427 1fff      	ROL  R31
000428 1f66      	ROL  R22
000429 1c11      	ROL  R1
00042a cff9      	RJMP __CDF12
                 __CDF13:
00042b 2fef      	MOV  R30,R31
00042c 2ff6      	MOV  R31,R22
00042d 2d61      	MOV  R22,R1
00042e 935f      	PUSH R21
00042f df8a      	RCALL __REPACK
000430 915f      	POP  R21
                 __CDF10:
000431 9508      	RET
                 
                 __SWAPACC:
000432 934f      	PUSH R20
000433 01af      	MOVW R20,R30
000434 01fd      	MOVW R30,R26
000435 01da      	MOVW R26,R20
000436 01ab      	MOVW R20,R22
000437 01bc      	MOVW R22,R24
000438 01ca      	MOVW R24,R20
000439 2d40      	MOV  R20,R0
00043a 2c01      	MOV  R0,R1
00043b 2e14      	MOV  R1,R20
00043c 914f      	POP  R20
00043d 9508      	RET
                 
                 __UADD12:
00043e 0fea      	ADD  R30,R26
00043f 1ffb      	ADC  R31,R27
000440 1f68      	ADC  R22,R24
000441 9508      	RET
                 
                 __NEGMAN1:
000442 95e0      	COM  R30
000443 95f0      	COM  R31
000444 9560      	COM  R22
000445 5fef      	SUBI R30,-1
000446 4fff      	SBCI R31,-1
000447 4f6f      	SBCI R22,-1
000448 9508      	RET
                 
                 __SUBF12:
000449 935f      	PUSH R21
00044a df81      	RCALL __UNPACK
00044b 3890      	CPI  R25,0x80
00044c f171      	BREQ __ADDF129
00044d e850      	LDI  R21,0x80
00044e 2615      	EOR  R1,R21
                 
00044f c004      	RJMP __ADDF120
                 
                 __ADDF12:
000450 935f      	PUSH R21
000451 df7a      	RCALL __UNPACK
000452 3890      	CPI  R25,0x80
000453 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000454 3870      	CPI  R23,0x80
000455 f121      	BREQ __ADDF128
                 __ADDF121:
000456 2f57      	MOV  R21,R23
000457 1b59      	SUB  R21,R25
000458 f12b      	BRVS __ADDF1211
000459 f412      	BRPL __ADDF122
00045a dfd7      	RCALL __SWAPACC
00045b cffa      	RJMP __ADDF121
                 __ADDF122:
00045c 3158      	CPI  R21,24
00045d f018      	BRLO __ADDF123
00045e 27aa      	CLR  R26
00045f 27bb      	CLR  R27
000460 2788      	CLR  R24
                 __ADDF123:
000461 3058      	CPI  R21,8
000462 f028      	BRLO __ADDF124
000463 2fab      	MOV  R26,R27
000464 2fb8      	MOV  R27,R24
000465 2788      	CLR  R24
000466 5058      	SUBI R21,8
000467 cff9      	RJMP __ADDF123
                 __ADDF124:
000468 2355      	TST  R21
000469 f029      	BREQ __ADDF126
                 __ADDF125:
00046a 9586      	LSR  R24
00046b 95b7      	ROR  R27
00046c 95a7      	ROR  R26
00046d 955a      	DEC  R21
00046e f7d9      	BRNE __ADDF125
                 __ADDF126:
00046f 2d50      	MOV  R21,R0
000470 2551      	EOR  R21,R1
000471 f072      	BRMI __ADDF127
000472 dfcb      	RCALL __UADD12
000473 f438      	BRCC __ADDF129
000474 9567      	ROR  R22
000475 95f7      	ROR  R31
000476 95e7      	ROR  R30
000477 9573      	INC  R23
000478 f413      	BRVC __ADDF129
000479 c020      	RJMP __MAXRES
                 __ADDF128:
00047a dfb7      	RCALL __SWAPACC
                 __ADDF129:
00047b df3e      	RCALL __REPACK
00047c 915f      	POP  R21
00047d 9508      	RET
                 __ADDF1211:
00047e f7d8      	BRCC __ADDF128
00047f cffb      	RJMP __ADDF129
                 __ADDF127:
000480 1bea      	SUB  R30,R26
000481 0bfb      	SBC  R31,R27
000482 0b68      	SBC  R22,R24
000483 f051      	BREQ __ZERORES
000484 f410      	BRCC __ADDF1210
000485 9400      	COM  R0
000486 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000487 2366      	TST  R22
000488 f392      	BRMI __ADDF129
000489 0fee      	LSL  R30
00048a 1fff      	ROL  R31
00048b 1f66      	ROL  R22
00048c 957a      	DEC  R23
00048d f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00048e 27ee      	CLR  R30
00048f 27ff      	CLR  R31
000490 2766      	CLR  R22
000491 2777      	CLR  R23
000492 915f      	POP  R21
000493 9508      	RET
                 
                 __MINRES:
000494 efef      	SER  R30
000495 efff      	SER  R31
000496 e76f      	LDI  R22,0x7F
000497 ef7f      	SER  R23
000498 915f      	POP  R21
000499 9508      	RET
                 
                 __MAXRES:
00049a efef      	SER  R30
00049b efff      	SER  R31
00049c e76f      	LDI  R22,0x7F
00049d e77f      	LDI  R23,0x7F
00049e 915f      	POP  R21
00049f 9508      	RET
                 
                 __MULF12:
0004a0 935f      	PUSH R21
0004a1 df2a      	RCALL __UNPACK
0004a2 3870      	CPI  R23,0x80
0004a3 f351      	BREQ __ZERORES
0004a4 3890      	CPI  R25,0x80
0004a5 f341      	BREQ __ZERORES
0004a6 2401      	EOR  R0,R1
0004a7 9408      	SEC
0004a8 1f79      	ADC  R23,R25
0004a9 f423      	BRVC __MULF124
0004aa f31c      	BRLT __ZERORES
                 __MULF125:
0004ab 2000      	TST  R0
0004ac f33a      	BRMI __MINRES
0004ad cfec      	RJMP __MAXRES
                 __MULF124:
0004ae 920f      	PUSH R0
0004af 931f      	PUSH R17
0004b0 932f      	PUSH R18
0004b1 933f      	PUSH R19
0004b2 934f      	PUSH R20
0004b3 2711      	CLR  R17
0004b4 2722      	CLR  R18
0004b5 2799      	CLR  R25
0004b6 9f68      	MUL  R22,R24
0004b7 01a0      	MOVW R20,R0
0004b8 9f8f      	MUL  R24,R31
0004b9 2d30      	MOV  R19,R0
0004ba 0d41      	ADD  R20,R1
0004bb 1f59      	ADC  R21,R25
0004bc 9f6b      	MUL  R22,R27
0004bd 0d30      	ADD  R19,R0
0004be 1d41      	ADC  R20,R1
0004bf 1f59      	ADC  R21,R25
0004c0 9f8e      	MUL  R24,R30
0004c1 d027      	RCALL __MULF126
0004c2 9fbf      	MUL  R27,R31
0004c3 d025      	RCALL __MULF126
0004c4 9f6a      	MUL  R22,R26
0004c5 d023      	RCALL __MULF126
0004c6 9fbe      	MUL  R27,R30
0004c7 d01d      	RCALL __MULF127
0004c8 9faf      	MUL  R26,R31
0004c9 d01b      	RCALL __MULF127
0004ca 9fae      	MUL  R26,R30
0004cb 0d11      	ADD  R17,R1
0004cc 1f29      	ADC  R18,R25
0004cd 1f39      	ADC  R19,R25
0004ce 1f49      	ADC  R20,R25
0004cf 1f59      	ADC  R21,R25
0004d0 2fe3      	MOV  R30,R19
0004d1 2ff4      	MOV  R31,R20
0004d2 2f65      	MOV  R22,R21
0004d3 2f52      	MOV  R21,R18
0004d4 914f      	POP  R20
0004d5 913f      	POP  R19
0004d6 912f      	POP  R18
0004d7 911f      	POP  R17
0004d8 900f      	POP  R0
0004d9 2366      	TST  R22
0004da f02a      	BRMI __MULF122
0004db 0f55      	LSL  R21
0004dc 1fee      	ROL  R30
0004dd 1fff      	ROL  R31
0004de 1f66      	ROL  R22
0004df c002      	RJMP __MULF123
                 __MULF122:
0004e0 9573      	INC  R23
0004e1 f24b      	BRVS __MULF125
                 __MULF123:
0004e2 decd      	RCALL __ROUND_REPACK
0004e3 915f      	POP  R21
0004e4 9508      	RET
                 
                 __MULF127:
0004e5 0d10      	ADD  R17,R0
0004e6 1d21      	ADC  R18,R1
0004e7 1f39      	ADC  R19,R25
0004e8 c002      	RJMP __MULF128
                 __MULF126:
0004e9 0d20      	ADD  R18,R0
0004ea 1d31      	ADC  R19,R1
                 __MULF128:
0004eb 1f49      	ADC  R20,R25
0004ec 1f59      	ADC  R21,R25
0004ed 9508      	RET
                 
                 __DIVF21:
0004ee 935f      	PUSH R21
0004ef dedc      	RCALL __UNPACK
0004f0 3870      	CPI  R23,0x80
0004f1 f421      	BRNE __DIVF210
0004f2 2011      	TST  R1
                 __DIVF211:
0004f3 f40a      	BRPL __DIVF219
0004f4 cf9f      	RJMP __MINRES
                 __DIVF219:
0004f5 cfa4      	RJMP __MAXRES
                 __DIVF210:
0004f6 3890      	CPI  R25,0x80
0004f7 f409      	BRNE __DIVF218
                 __DIVF217:
0004f8 cf95      	RJMP __ZERORES
                 __DIVF218:
0004f9 2401      	EOR  R0,R1
0004fa 9408      	SEC
0004fb 0b97      	SBC  R25,R23
0004fc f41b      	BRVC __DIVF216
0004fd f3d4      	BRLT __DIVF217
0004fe 2000      	TST  R0
0004ff cff3      	RJMP __DIVF211
                 __DIVF216:
000500 2f79      	MOV  R23,R25
000501 931f      	PUSH R17
000502 932f      	PUSH R18
000503 933f      	PUSH R19
000504 934f      	PUSH R20
000505 2411      	CLR  R1
000506 2711      	CLR  R17
000507 2722      	CLR  R18
000508 2733      	CLR  R19
000509 2744      	CLR  R20
00050a 2755      	CLR  R21
00050b e290      	LDI  R25,32
                 __DIVF212:
00050c 17ae      	CP   R26,R30
00050d 07bf      	CPC  R27,R31
00050e 0786      	CPC  R24,R22
00050f 0741      	CPC  R20,R17
000510 f030      	BRLO __DIVF213
000511 1bae      	SUB  R26,R30
000512 0bbf      	SBC  R27,R31
000513 0b86      	SBC  R24,R22
000514 0b41      	SBC  R20,R17
000515 9408      	SEC
000516 c001      	RJMP __DIVF214
                 __DIVF213:
000517 9488      	CLC
                 __DIVF214:
000518 1f55      	ROL  R21
000519 1f22      	ROL  R18
00051a 1f33      	ROL  R19
00051b 1c11      	ROL  R1
00051c 1faa      	ROL  R26
00051d 1fbb      	ROL  R27
00051e 1f88      	ROL  R24
00051f 1f44      	ROL  R20
000520 959a      	DEC  R25
000521 f751      	BRNE __DIVF212
000522 01f9      	MOVW R30,R18
000523 2d61      	MOV  R22,R1
000524 914f      	POP  R20
000525 913f      	POP  R19
000526 912f      	POP  R18
000527 911f      	POP  R17
000528 2366      	TST  R22
000529 f032      	BRMI __DIVF215
00052a 0f55      	LSL  R21
00052b 1fee      	ROL  R30
00052c 1fff      	ROL  R31
00052d 1f66      	ROL  R22
00052e 957a      	DEC  R23
00052f f243      	BRVS __DIVF217
                 __DIVF215:
000530 de7f      	RCALL __ROUND_REPACK
000531 915f      	POP  R21
000532 9508      	RET
                 
                 __CMPF12:
000533 2399      	TST  R25
000534 f09a      	BRMI __CMPF120
000535 2377      	TST  R23
000536 f042      	BRMI __CMPF121
000537 1797      	CP   R25,R23
000538 f048      	BRLO __CMPF122
000539 f429      	BRNE __CMPF121
00053a 17ae      	CP   R26,R30
00053b 07bf      	CPC  R27,R31
00053c 0786      	CPC  R24,R22
00053d f020      	BRLO __CMPF122
00053e f031      	BREQ __CMPF123
                 __CMPF121:
00053f 9498      	CLZ
000540 9488      	CLC
000541 9508      	RET
                 __CMPF122:
000542 9498      	CLZ
000543 9408      	SEC
000544 9508      	RET
                 __CMPF123:
000545 9418      	SEZ
000546 9488      	CLC
000547 9508      	RET
                 __CMPF120:
000548 2377      	TST  R23
000549 f7c2      	BRPL __CMPF122
00054a 1797      	CP   R25,R23
00054b f398      	BRLO __CMPF121
00054c f7a9      	BRNE __CMPF122
00054d 17ea      	CP   R30,R26
00054e 07fb      	CPC  R31,R27
00054f 0768      	CPC  R22,R24
000550 f388      	BRLO __CMPF122
000551 f399      	BREQ __CMPF123
000552 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000553 95f0      	COM  R31
000554 9560      	COM  R22
000555 9570      	COM  R23
000556 95e1      	NEG  R30
000557 4fff      	SBCI R31,-1
000558 4f6f      	SBCI R22,-1
000559 4f7f      	SBCI R23,-1
00055a 9508      	RET
                 
                 __CBD1:
00055b 2ffe      	MOV  R31,R30
00055c 0fff      	ADD  R31,R31
00055d 0bff      	SBC  R31,R31
00055e 2f6f      	MOV  R22,R31
00055f 2f7f      	MOV  R23,R31
000560 9508      	RET
                 
                 __CWD1:
000561 2f6f      	MOV  R22,R31
000562 0f66      	ADD  R22,R22
000563 0b66      	SBC  R22,R22
000564 2f76      	MOV  R23,R22
000565 9508      	RET
                 
                 __PUTDP1:
000566 93ed      	ST   X+,R30
000567 93fd      	ST   X+,R31
000568 936d      	ST   X+,R22
000569 937c      	ST   X,R23
00056a 9508      	RET
                 
                 __GETD1S0:
00056b 81e8      	LD   R30,Y
00056c 81f9      	LDD  R31,Y+1
00056d 816a      	LDD  R22,Y+2
00056e 817b      	LDD  R23,Y+3
00056f 9508      	RET
                 
                 __GETD2S0:
000570 81a8      	LD   R26,Y
000571 81b9      	LDD  R27,Y+1
000572 818a      	LDD  R24,Y+2
000573 819b      	LDD  R25,Y+3
000574 9508      	RET
                 
                 __PUTD1S0:
000575 83e8      	ST   Y,R30
000576 83f9      	STD  Y+1,R31
000577 836a      	STD  Y+2,R22
000578 837b      	STD  Y+3,R23
000579 9508      	RET
                 
                 __PUTPARD1:
00057a 937a      	ST   -Y,R23
00057b 936a      	ST   -Y,R22
00057c 93fa      	ST   -Y,R31
00057d 93ea      	ST   -Y,R30
00057e 9508      	RET
                 
                 __PUTPARD2:
00057f 939a      	ST   -Y,R25
000580 938a      	ST   -Y,R24
000581 93ba      	ST   -Y,R27
000582 93aa      	ST   -Y,R26
000583 9508      	RET
                 
                 __SWAPD12:
000584 2e18      	MOV  R1,R24
000585 2f86      	MOV  R24,R22
000586 2d61      	MOV  R22,R1
000587 2e19      	MOV  R1,R25
000588 2f97      	MOV  R25,R23
000589 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00058a 2e1b      	MOV  R1,R27
00058b 2fbf      	MOV  R27,R31
00058c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00058d 2e1a      	MOV  R1,R26
00058e 2fae      	MOV  R26,R30
00058f 2de1      	MOV  R30,R1
000590 9508      	RET
                 
                 __CPD02:
000591 2400      	CLR  R0
000592 160a      	CP   R0,R26
000593 060b      	CPC  R0,R27
000594 0608      	CPC  R0,R24
000595 0609      	CPC  R0,R25
000596 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  36 r1 :  32 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  88 r23:  80 
r24:  54 r25:  54 r26: 121 r27:  60 r28:   7 r29:   1 r30: 176 r31:  84 
x  :  15 y  : 146 z  :   9 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   9 
adiw  :   8 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  24 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  16 
brlt  :   2 brmi  :   9 brne  :  23 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 120 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  35 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 
cp    :   8 cpc   :  15 cpi   :  28 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  11 inc   :   4 jmp   :  28 ld    :  33 ldd   :  55 ldi   : 122 
lds   :  20 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  56 movw  :  22 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   2 out   :  19 pop   :  20 push  :  20 rcall :  35 ret   :  59 
reti  :   1 rjmp  :  47 rol   :  24 ror   :  15 sbc   :   8 sbci  :  10 
sbi   :   9 sbic  :   2 sbis  :   0 sbiw  :  10 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  54 std   :  20 sts   :  10 sub   :   4 subi  :  15 swap  :   2 
tst   :  19 wdr   :   1 
Instructions used: 81 out of 116 (69.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b2e   2796     66   2862   32768   8.7%
[.dseg] 0x000060 0x000290      0     48     48    2048   2.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
