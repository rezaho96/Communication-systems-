
AVRASM ver. 2.1.30  F:\train\term8\Communication systems\New folder\New folder\Debug\List\Recieve.asm Fri Jul 02 12:31:00 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2020060:
F:\train\term8\Communication systems\New folder\New folder\Debug\List\Recieve.asm(1123): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2020000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\train\term8\Communication systems\New folder\New folder\Debug\List\Recieve.asm(1126): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0001      	.DW  0x01
00003a 0276      	.DW  __seed_G101
00003b 0066      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 006a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;float Temperature,duty,t;
                 ;char str[10];
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000A DDRD.0=0;
00006a 9888      	CBI  0x11,0
                 ; 0000 000B DDRC = 0xFF;
00006b efef      	LDI  R30,LOW(255)
00006c bbe4      	OUT  0x14,R30
                 ; 0000 000C DDRA.0=1;
00006d 9ad0      	SBI  0x1A,0
                 ; 0000 000D UCSRB = 0x10;
00006e e1e0      	LDI  R30,LOW(16)
00006f b9ea      	OUT  0xA,R30
                 ; 0000 000E UCSRC = 0x86;
000070 e8e6      	LDI  R30,LOW(134)
000071 bde0      	OUT  0x20,R30
                 ; 0000 000F UBRRL = 71;
000072 e4e7      	LDI  R30,LOW(71)
000073 b9e9      	OUT  0x9,R30
                 ; 0000 0010 UBRRH = 0;
000074 e0e0      	LDI  R30,LOW(0)
000075 bde0      	OUT  0x20,R30
                 ; 0000 0011 
                 ; 0000 0012 
                 ; 0000 0013 while (1){
                 _0x7:
                 ; 0000 0014    gets(str,10);
000076 940e 022c 	CALL SUBOPT_0x0
                 ; 0000 0015    Temperature = atof(str);
000078 93e0 0260 	STS  _Temperature,R30
00007a 93f0 0261 	STS  _Temperature+1,R31
00007c 9360 0262 	STS  _Temperature+2,R22
00007e 9370 0263 	STS  _Temperature+3,R23
                 ; 0000 0016    duty = (25*Temperature - 575)/100;
000080 940e 0238 	CALL SUBOPT_0x1
                +
000082 e0a0     +LDI R26 , LOW ( 0x41C80000 )
000083 e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000084 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000085 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
000086 940e 0386 	CALL __MULF12
000088 01df      	MOVW R26,R30
000089 01cb      	MOVW R24,R22
                +
00008a e0e0     +LDI R30 , LOW ( 0x440FC000 )
00008b ecf0     +LDI R31 , HIGH ( 0x440FC000 )
00008c e06f     +LDI R22 , BYTE3 ( 0x440FC000 )
00008d e474     +LDI R23 , BYTE4 ( 0x440FC000 )
                 	__GETD1N 0x440FC000
00008e 940e 044b 	CALL __SWAPD12
000090 940e 032f 	CALL __SUBF12
000092 01df      	MOVW R26,R30
000093 01cb      	MOVW R24,R22
                +
000094 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000095 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000096 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000097 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000098 940e 03d4 	CALL __DIVF21
00009a 93e0 0264 	STS  _duty,R30
00009c 93f0 0265 	STS  _duty+1,R31
00009e 9360 0266 	STS  _duty+2,R22
0000a0 9370 0267 	STS  _duty+3,R23
                 ; 0000 0017    while(1){
                 _0xA:
                 ; 0000 0018     gets(str,10);
0000a2 940e 022c 	CALL SUBOPT_0x0
                 ; 0000 0019     t = atof(str);
0000a4 93e0 0268 	STS  _t,R30
0000a6 93f0 0269 	STS  _t+1,R31
0000a8 9360 026a 	STS  _t+2,R22
0000aa 9370 026b 	STS  _t+3,R23
                 ; 0000 001A     if(t != Temperature)
0000ac 940e 0238 	CALL SUBOPT_0x1
0000ae 91a0 0268 	LDS  R26,_t
0000b0 91b0 0269 	LDS  R27,_t+1
0000b2 9180 026a 	LDS  R24,_t+2
0000b4 9190 026b 	LDS  R25,_t+3
0000b6 940e 045e 	CALL __CPD12
0000b8 f571      	BRNE _0xC
                 ; 0000 001B         break;
                 ; 0000 001C     else{
                 ; 0000 001D         if(duty>0 && duty<1 ){
0000b9 940e 0241 	CALL SUBOPT_0x2
0000bb 940e 0458 	CALL __CPD02
0000bd f42c      	BRGE _0x10
0000be 940e 024a 	CALL SUBOPT_0x3
0000c0 940e 0419 	CALL __CMPF12
0000c2 f008      	BRLO _0x11
                 _0x10:
0000c3 c016      	RJMP _0xF
                 _0x11:
                 ; 0000 001E             PORTA.0=0;
0000c4 98d8      	CBI  0x1B,0
                 ; 0000 001F             PORTC = 0x01;
0000c5 e0e1      	LDI  R30,LOW(1)
0000c6 bbe5      	OUT  0x15,R30
                 ; 0000 0020             delay_ms(50*duty);
0000c7 91e0 0264 	LDS  R30,_duty
0000c9 91f0 0265 	LDS  R31,_duty+1
0000cb 9160 0266 	LDS  R22,_duty+2
0000cd 9170 0267 	LDS  R23,_duty+3
0000cf 940e 0250 	CALL SUBOPT_0x4
                 ; 0000 0021             PORTC = 0x00;
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 bbe5      	OUT  0x15,R30
                 ; 0000 0022             delay_ms((1-duty)*50);
0000d3 940e 024a 	CALL SUBOPT_0x3
0000d5 940e 032f 	CALL __SUBF12
0000d7 940e 0250 	CALL SUBOPT_0x4
                 ; 0000 0023             }
                 ; 0000 0024         else if(duty>=1)
0000d9 c00c      	RJMP _0x14
                 _0xF:
0000da 940e 024a 	CALL SUBOPT_0x3
0000dc 940e 0419 	CALL __CMPF12
0000de f020      	BRLO _0x15
                 ; 0000 0025             {
                 ; 0000 0026             PORTC = 0x01;
0000df e0e1      	LDI  R30,LOW(1)
0000e0 bbe5      	OUT  0x15,R30
                 ; 0000 0027             PORTA.0=1;
0000e1 9ad8      	SBI  0x1B,0
                 ; 0000 0028             }
                 ; 0000 0029         else
0000e2 c003      	RJMP _0x18
                 _0x15:
                 ; 0000 002A         {
                 ; 0000 002B          PORTC = 0x00;
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 bbe5      	OUT  0x15,R30
                 ; 0000 002C          PORTA.0=0;
0000e5 98d8      	CBI  0x1B,0
                 ; 0000 002D          }
                 _0x18:
                 _0x14:
                 ; 0000 002E     }
                 ; 0000 002F    }
0000e6 cfbb      	RJMP _0xA
                 _0xC:
                 ; 0000 0030 
                 ; 0000 0031 }
0000e7 cf8e      	RJMP _0x7
                 ; 0000 0032 
                 ; 0000 0033 }
                 _0x1B:
0000e8 cfff      	RJMP _0x1B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
0000e9 9b5f           sbis usr,rxc
0000ea cffe           rjmp getchar0
0000eb b1ec           in   r30,udr
0000ec 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
0000ed 93ba      	ST   -Y,R27
0000ee 93aa      	ST   -Y,R26
0000ef 940e 0463 	CALL __SAVELOCR6
                +
0000f1 810e     +LDD R16 , Y + 6
0000f2 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
0000f3 8528     +LDD R18 , Y + 8
0000f4 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
0000f5 2e00      	MOV  R0,R16
0000f6 2a01      	OR   R0,R17
0000f7 f0d9      	BREQ _0x200000B
                 _0x200000C:
0000f8 dff0      	RCALL _getchar
0000f9 2f5e      	MOV  R21,R30
0000fa 3058      	CPI  R21,8
0000fb f451      	BRNE _0x200000D
0000fc 81ae      	LDD  R26,Y+6
0000fd 81bf      	LDD  R27,Y+6+1
0000fe 170a      	CP   R16,R26
0000ff 071b      	CPC  R17,R27
000100 f420      	BRSH _0x200000E
                +
000101 5021     +SUBI R18 , LOW ( 1 )
000102 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000103 5f0f     +SUBI R16 , LOW ( - 1 )
000104 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
000105 cff2      	RJMP _0x200000C
                 _0x200000D:
000106 305a      	CPI  R21,10
000107 f059      	BREQ _0x200000B
000108 933f      	PUSH R19
000109 932f      	PUSH R18
                +
00010a 5f2f     +SUBI R18 , LOW ( - 1 )
00010b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00010c 2fe5      	MOV  R30,R21
00010d 91af      	POP  R26
00010e 91bf      	POP  R27
00010f 93ec      	ST   X,R30
                +
000110 5001     +SUBI R16 , LOW ( 1 )
000111 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000112 cfe2      	RJMP _0x2000009
                 _0x200000B:
000113 01d9      	MOVW R26,R18
000114 e0e0      	LDI  R30,LOW(0)
000115 93ec      	ST   X,R30
000116 85e8      	LDD  R30,Y+8
000117 85f9      	LDD  R31,Y+8+1
000118 940e 046a 	CALL __LOADLOCR6
00011a 962a      	ADIW R28,10
00011b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atof:
                 ; .FSTART _atof
00011c 93ba      	ST   -Y,R27
00011d 93aa      	ST   -Y,R26
00011e 972a      	SBIW R28,10
00011f 940e 0463 	CALL __SAVELOCR6
000121 e0e0      	LDI  R30,LOW(0)
                +
000122 87e8     +STD Y + 8 , R30
000123 87e9     +STD Y + 8 + 1 , R30
000124 87ea     +STD Y + 8 + 2 , R30
000125 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x202003C:
000126 89a8      	LDD  R26,Y+16
000127 89b9      	LDD  R27,Y+16+1
000128 91ec      	LD   R30,X
000129 2f5e      	MOV  R21,R30
00012a 2fae      	MOV  R26,R30
00012b 940e 0221 	CALL _isspace
00012d 30e0      	CPI  R30,0
00012e f031      	BREQ _0x202003E
00012f 89e8      	LDD  R30,Y+16
000130 89f9      	LDD  R31,Y+16+1
000131 9631      	ADIW R30,1
000132 8be8      	STD  Y+16,R30
000133 8bf9      	STD  Y+16+1,R31
000134 cff1      	RJMP _0x202003C
                 _0x202003E:
000135 e0e0      	LDI  R30,LOW(0)
000136 83ef      	STD  Y+7,R30
000137 325b      	CPI  R21,43
000138 f021      	BREQ _0x202006C
000139 325d      	CPI  R21,45
00013a f439      	BRNE _0x2020041
00013b e0e1      	LDI  R30,LOW(1)
00013c 83ef      	STD  Y+7,R30
                 _0x202006C:
00013d 89e8      	LDD  R30,Y+16
00013e 89f9      	LDD  R31,Y+16+1
00013f 9631      	ADIW R30,1
000140 8be8      	STD  Y+16,R30
000141 8bf9      	STD  Y+16+1,R31
                 _0x2020041:
000142 e0e0      	LDI  R30,LOW(0)
000143 2f4e      	MOV  R20,R30
000144 2f5e      	MOV  R21,R30
                +
000145 8908     +LDD R16 , Y + 16
000146 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2020042:
000147 89a8      	LDD  R26,Y+16
000148 89b9      	LDD  R27,Y+16+1
000149 91ac      	LD   R26,X
00014a 940e 0218 	CALL _isdigit
00014c 30e0      	CPI  R30,0
00014d f449      	BRNE _0x2020045
00014e 89a8      	LDD  R26,Y+16
00014f 89b9      	LDD  R27,Y+16+1
000150 91ac      	LD   R26,X
000151 e2ee      	LDI  R30,LOW(46)
000152 940e 0446 	CALL __EQB12
000154 2f5e      	MOV  R21,R30
000155 30e0      	CPI  R30,0
000156 f039      	BREQ _0x2020044
                 _0x2020045:
000157 2b45      	OR   R20,R21
000158 89e8      	LDD  R30,Y+16
000159 89f9      	LDD  R31,Y+16+1
00015a 9631      	ADIW R30,1
00015b 8be8      	STD  Y+16,R30
00015c 8bf9      	STD  Y+16+1,R31
00015d cfe9      	RJMP _0x2020042
                 _0x2020044:
                +
00015e 8928     +LDD R18 , Y + 16
00015f 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
000160 3040      	CPI  R20,0
000161 f129      	BREQ _0x2020047
000162 89e8      	LDD  R30,Y+16
000163 89f9      	LDD  R31,Y+16+1
000164 9731      	SBIW R30,1
000165 8be8      	STD  Y+16,R30
000166 8bf9      	STD  Y+16+1,R31
                 _0x2020048:
000167 89a8      	LDD  R26,Y+16
000168 89b9      	LDD  R27,Y+16+1
000169 91ac      	LD   R26,X
00016a 32ae      	CPI  R26,LOW(0x2E)
00016b f0d9      	BREQ _0x202004A
00016c 89a8      	LDD  R26,Y+16
00016d 89b9      	LDD  R27,Y+16+1
00016e 91ec      	LD   R30,X
00016f e0f0      	LDI  R31,0
000170 97f0      	SBIW R30,48
000171 940e 025b 	CALL SUBOPT_0x5
000173 940e 0441 	CALL __CWD1
000175 940e 02fc 	CALL __CDF1
000177 940e 0336 	CALL __ADDF12
000179 01df      	MOVW R26,R30
00017a 01cb      	MOVW R24,R22
00017b 940e 0260 	CALL SUBOPT_0x6
00017d 940e 03d4 	CALL __DIVF21
00017f 940e 0265 	CALL SUBOPT_0x7
000181 89e8      	LDD  R30,Y+16
000182 89f9      	LDD  R31,Y+16+1
000183 9731      	SBIW R30,1
000184 8be8      	STD  Y+16,R30
000185 8bf9      	STD  Y+16+1,R31
000186 cfe0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000187 940e 026a 	CALL SUBOPT_0x8
                 _0x202004B:
000189 89a8      	LDD  R26,Y+16
00018a 89b9      	LDD  R27,Y+16+1
00018b 9711      	SBIW R26,1
00018c 8ba8      	STD  Y+16,R26
00018d 8bb9      	STD  Y+16+1,R27
00018e 17a0      	CP   R26,R16
00018f 07b1      	CPC  R27,R17
000190 f0a0      	BRLO _0x202004D
000191 91ec      	LD   R30,X
000192 e0f0      	LDI  R31,0
000193 97f0      	SBIW R30,48
000194 940e 0273 	CALL SUBOPT_0x9
000196 940e 0441 	CALL __CWD1
000198 940e 02fc 	CALL __CDF1
00019a 940e 0386 	CALL __MULF12
00019c 940e 025b 	CALL SUBOPT_0x5
00019e 940e 0336 	CALL __ADDF12
0001a0 940e 0265 	CALL SUBOPT_0x7
0001a2 940e 0278 	CALL SUBOPT_0xA
0001a4 cfe4      	RJMP _0x202004B
                 _0x202004D:
0001a5 01d9      	MOVW R26,R18
                +
0001a6 5f2f     +SUBI R18 , LOW ( - 1 )
0001a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a8 915c      	LD   R21,X
0001a9 3655      	CPI  R21,101
0001aa f019      	BREQ _0x202004F
0001ab 3455      	CPI  R21,69
0001ac f009      	BREQ _0x202004F
0001ad c057      	RJMP _0x202004E
                 _0x202004F:
0001ae e0e0      	LDI  R30,LOW(0)
0001af 2f4e      	MOV  R20,R30
0001b0 83ee      	STD  Y+6,R30
0001b1 01d9      	MOVW R26,R18
0001b2 915c      	LD   R21,X
0001b3 325b      	CPI  R21,43
0001b4 f021      	BREQ _0x202006D
0001b5 325d      	CPI  R21,45
0001b6 f421      	BRNE _0x2020053
0001b7 e0e1      	LDI  R30,LOW(1)
0001b8 83ee      	STD  Y+6,R30
                 _0x202006D:
                +
0001b9 5f2f     +SUBI R18 , LOW ( - 1 )
0001ba 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2020053:
                 _0x2020054:
0001bb 01d9      	MOVW R26,R18
                +
0001bc 5f2f     +SUBI R18 , LOW ( - 1 )
0001bd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001be 91ec      	LD   R30,X
0001bf 2f5e      	MOV  R21,R30
0001c0 2fae      	MOV  R26,R30
0001c1 940e 0218 	CALL _isdigit
0001c3 30e0      	CPI  R30,0
0001c4 f039      	BREQ _0x2020056
0001c5 e0aa      	LDI  R26,LOW(10)
0001c6 024a      	MULS R20,R26
0001c7 01f0      	MOVW R30,R0
0001c8 0fe5      	ADD  R30,R21
0001c9 53e0      	SUBI R30,LOW(48)
0001ca 2f4e      	MOV  R20,R30
0001cb cfef      	RJMP _0x2020054
                 _0x2020056:
0001cc 3247      	CPI  R20,39
0001cd f068      	BRLO _0x2020057
0001ce 81ef      	LDD  R30,Y+7
0001cf 30e0      	CPI  R30,0
0001d0 f029      	BREQ _0x2020058
                +
0001d1 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0001d2 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0001d3 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0001d4 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0001d5 c03e      	RJMP _0x20A0001
                 _0x2020058:
                +
0001d6 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
0001d7 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
0001d8 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
0001d9 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
0001da c039      	RJMP _0x20A0001
                 _0x2020057:
0001db e250      	LDI  R21,LOW(32)
0001dc 940e 026a 	CALL SUBOPT_0x8
                 _0x2020059:
0001de 3050      	CPI  R21,0
0001df f089      	BREQ _0x202005B
0001e0 940e 0281 	CALL SUBOPT_0xB
0001e2 940e 0273 	CALL SUBOPT_0x9
0001e4 940e 0386 	CALL __MULF12
                +
0001e6 87ec     +STD Y + 12 , R30
0001e7 87fd     +STD Y + 12 + 1 , R31
0001e8 876e     +STD Y + 12 + 2 , R22
0001e9 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0001ea 2fe4      	MOV  R30,R20
0001eb 23e5      	AND  R30,R21
0001ec f011      	BREQ _0x202005C
0001ed 940e 0278 	CALL SUBOPT_0xA
                 _0x202005C:
0001ef 9556      	LSR  R21
0001f0 cfed      	RJMP _0x2020059
                 _0x202005B:
0001f1 81ee      	LDD  R30,Y+6
0001f2 30e0      	CPI  R30,0
0001f3 f039      	BREQ _0x202005D
0001f4 940e 0281 	CALL SUBOPT_0xB
0001f6 940e 025b 	CALL SUBOPT_0x5
0001f8 940e 03d4 	CALL __DIVF21
0001fa c006      	RJMP _0x202006E
                 _0x202005D:
0001fb 940e 0281 	CALL SUBOPT_0xB
0001fd 940e 025b 	CALL SUBOPT_0x5
0001ff 940e 0386 	CALL __MULF12
                 _0x202006E:
                +
000201 87e8     +STD Y + 8 , R30
000202 87f9     +STD Y + 8 + 1 , R31
000203 876a     +STD Y + 8 + 2 , R22
000204 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x202004E:
000205 81ef      	LDD  R30,Y+7
000206 30e0      	CPI  R30,0
000207 f041      	BREQ _0x202005F
                +
000208 85e8     +LDD R30 , Y + 8
000209 85f9     +LDD R31 , Y + 8 + 1
00020a 856a     +LDD R22 , Y + 8 + 2
00020b 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00020c 940e 0290 	CALL __ANEGF1
00020e 940e 0265 	CALL SUBOPT_0x7
                 _0x202005F:
                +
000210 85e8     +LDD R30 , Y + 8
000211 85f9     +LDD R31 , Y + 8 + 1
000212 856a     +LDD R22 , Y + 8 + 2
000213 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                 _0x20A0001:
000214 940e 046a 	CALL __LOADLOCR6
000216 9662      	ADIW R28,18
000217 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000218 93aa      	ST   -Y,R26
000219 e0e1          ldi  r30,1
00021a 91f9          ld   r31,y+
00021b 33f0          cpi  r31,'0'
00021c f010          brlo isdigit0
00021d 33fa          cpi  r31,'9'+1
00021e f008          brlo isdigit1
                 isdigit0:
00021f 27ee          clr  r30
                 isdigit1:
000220 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000221 93aa      	ST   -Y,R26
000222 e0e1          ldi  r30,1
000223 91f9          ld   r31,y+
000224 32f0          cpi  r31,' '
000225 f029          breq isspace1
000226 30f9          cpi  r31,9
000227 f010          brlo isspace0
000228 30fe          cpi  r31,13+1
000229 f008          brlo isspace1
                 isspace0:
00022a 27ee          clr  r30
                 isspace1:
00022b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _Temperature:
000260           	.BYTE 0x4
                 _duty:
000264           	.BYTE 0x4
                 _t:
000268           	.BYTE 0x4
                 _str:
00026c           	.BYTE 0xA
                 __seed_G101:
000276           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
00022c e6ec      	LDI  R30,LOW(_str)
00022d e0f2      	LDI  R31,HIGH(_str)
00022e 93fa      	ST   -Y,R31
00022f 93ea      	ST   -Y,R30
000230 e0aa      	LDI  R26,LOW(10)
000231 e0b0      	LDI  R27,0
000232 940e 00ed 	CALL _gets
000234 e6ac      	LDI  R26,LOW(_str)
000235 e0b2      	LDI  R27,HIGH(_str)
000236 940c 011c 	JMP  _atof
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000238 91e0 0260 	LDS  R30,_Temperature
00023a 91f0 0261 	LDS  R31,_Temperature+1
00023c 9160 0262 	LDS  R22,_Temperature+2
00023e 9170 0263 	LDS  R23,_Temperature+3
000240 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2:
000241 91a0 0264 	LDS  R26,_duty
000243 91b0 0265 	LDS  R27,_duty+1
000245 9180 0266 	LDS  R24,_duty+2
000247 9190 0267 	LDS  R25,_duty+3
000249 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
00024a dff6      	RCALL SUBOPT_0x2
                +
00024b e0e0     +LDI R30 , LOW ( 0x3F800000 )
00024c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00024d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00024e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00024f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
                +
000250 e0a0     +LDI R26 , LOW ( 0x42480000 )
000251 e0b0     +LDI R27 , HIGH ( 0x42480000 )
000252 e488     +LDI R24 , BYTE3 ( 0x42480000 )
000253 e492     +LDI R25 , BYTE4 ( 0x42480000 )
                 	__GETD2N 0x42480000
000254 940e 0386 	CALL __MULF12
000256 940e 02c3 	CALL __CFD1U
000258 01df      	MOVW R26,R30
000259 940c 0286 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
00025b 85a8     +LDD R26 , Y + 8
00025c 85b9     +LDD R27 , Y + 8 + 1
00025d 858a     +LDD R24 , Y + 8 + 2
00025e 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00025f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000260 e0e0     +LDI R30 , LOW ( 0x41200000 )
000261 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000262 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000263 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000265 87e8     +STD Y + 8 , R30
000266 87f9     +STD Y + 8 + 1 , R31
000267 876a     +STD Y + 8 + 2 , R22
000268 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
                +
00026a e0e0     +LDI R30 , LOW ( 0x3F800000 )
00026b e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00026c e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00026d e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
00026e 87ec     +STD Y + 12 , R30
00026f 87fd     +STD Y + 12 + 1 , R31
000270 876e     +STD Y + 12 + 2 , R22
000271 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000272 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
                +
000273 85ac     +LDD R26 , Y + 12
000274 85bd     +LDD R27 , Y + 12 + 1
000275 858e     +LDD R24 , Y + 12 + 2
000276 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000278 dffa      	RCALL SUBOPT_0x9
000279 dfe6      	RCALL SUBOPT_0x6
00027a 940e 0386 	CALL __MULF12
                +
00027c 87ec     +STD Y + 12 , R30
00027d 87fd     +STD Y + 12 + 1 , R31
00027e 876e     +STD Y + 12 + 2 , R22
00027f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000280 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000281 85ec     +LDD R30 , Y + 12
000282 85fd     +LDD R31 , Y + 12 + 1
000283 856e     +LDD R22 , Y + 12 + 2
000284 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000285 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000286 9610      	adiw r26,0
000287 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000288 ef8a     +LDI R24 , LOW ( 0xFA )
000289 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00028a 9701     +SBIW R24 , 1
00028b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00028c 95a8      	wdr
00028d 9711      	sbiw r26,1
00028e f7c9      	brne __delay_ms0
                 __delay_ms1:
00028f 9508      	ret
                 
                 __ANEGF1:
000290 9730      	SBIW R30,0
000291 4060      	SBCI R22,0
000292 4070      	SBCI R23,0
000293 f009      	BREQ __ANEGF10
000294 5870      	SUBI R23,0x80
                 __ANEGF10:
000295 9508      	RET
                 
                 __ROUND_REPACK:
000296 2355      	TST  R21
000297 f442      	BRPL __REPACK
000298 3850      	CPI  R21,0x80
000299 f411      	BRNE __ROUND_REPACK0
00029a ffe0      	SBRS R30,0
00029b c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00029c 9631      	ADIW R30,1
00029d 1f69      	ADC  R22,R25
00029e 1f79      	ADC  R23,R25
00029f f06b      	BRVS __REPACK1
                 
                 __REPACK:
0002a0 e850      	LDI  R21,0x80
0002a1 2757      	EOR  R21,R23
0002a2 f411      	BRNE __REPACK0
0002a3 935f      	PUSH R21
0002a4 c0cf      	RJMP __ZERORES
                 __REPACK0:
0002a5 3f5f      	CPI  R21,0xFF
0002a6 f031      	BREQ __REPACK1
0002a7 0f66      	LSL  R22
0002a8 0c00      	LSL  R0
0002a9 9557      	ROR  R21
0002aa 9567      	ROR  R22
0002ab 2f75      	MOV  R23,R21
0002ac 9508      	RET
                 __REPACK1:
0002ad 935f      	PUSH R21
0002ae 2000      	TST  R0
0002af f00a      	BRMI __REPACK2
0002b0 c0cf      	RJMP __MAXRES
                 __REPACK2:
0002b1 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0002b2 e850      	LDI  R21,0x80
0002b3 2e19      	MOV  R1,R25
0002b4 2215      	AND  R1,R21
0002b5 0f88      	LSL  R24
0002b6 1f99      	ROL  R25
0002b7 2795      	EOR  R25,R21
0002b8 0f55      	LSL  R21
0002b9 9587      	ROR  R24
                 
                 __UNPACK1:
0002ba e850      	LDI  R21,0x80
0002bb 2e07      	MOV  R0,R23
0002bc 2205      	AND  R0,R21
0002bd 0f66      	LSL  R22
0002be 1f77      	ROL  R23
0002bf 2775      	EOR  R23,R21
0002c0 0f55      	LSL  R21
0002c1 9567      	ROR  R22
0002c2 9508      	RET
                 
                 __CFD1U:
0002c3 9468      	SET
0002c4 c001      	RJMP __CFD1U0
                 __CFD1:
0002c5 94e8      	CLT
                 __CFD1U0:
0002c6 935f      	PUSH R21
0002c7 dff2      	RCALL __UNPACK1
0002c8 3870      	CPI  R23,0x80
0002c9 f018      	BRLO __CFD10
0002ca 3f7f      	CPI  R23,0xFF
0002cb f408      	BRCC __CFD10
0002cc c0a7      	RJMP __ZERORES
                 __CFD10:
0002cd e156      	LDI  R21,22
0002ce 1b57      	SUB  R21,R23
0002cf f4aa      	BRPL __CFD11
0002d0 9551      	NEG  R21
0002d1 3058      	CPI  R21,8
0002d2 f40e      	BRTC __CFD19
0002d3 3059      	CPI  R21,9
                 __CFD19:
0002d4 f030      	BRLO __CFD17
0002d5 efef      	SER  R30
0002d6 efff      	SER  R31
0002d7 ef6f      	SER  R22
0002d8 e77f      	LDI  R23,0x7F
0002d9 f977      	BLD  R23,7
0002da c01a      	RJMP __CFD15
                 __CFD17:
0002db 2777      	CLR  R23
0002dc 2355      	TST  R21
0002dd f0b9      	BREQ __CFD15
                 __CFD18:
0002de 0fee      	LSL  R30
0002df 1fff      	ROL  R31
0002e0 1f66      	ROL  R22
0002e1 1f77      	ROL  R23
0002e2 955a      	DEC  R21
0002e3 f7d1      	BRNE __CFD18
0002e4 c010      	RJMP __CFD15
                 __CFD11:
0002e5 2777      	CLR  R23
                 __CFD12:
0002e6 3058      	CPI  R21,8
0002e7 f028      	BRLO __CFD13
0002e8 2fef      	MOV  R30,R31
0002e9 2ff6      	MOV  R31,R22
0002ea 2f67      	MOV  R22,R23
0002eb 5058      	SUBI R21,8
0002ec cff9      	RJMP __CFD12
                 __CFD13:
0002ed 2355      	TST  R21
0002ee f031      	BREQ __CFD15
                 __CFD14:
0002ef 9576      	LSR  R23
0002f0 9567      	ROR  R22
0002f1 95f7      	ROR  R31
0002f2 95e7      	ROR  R30
0002f3 955a      	DEC  R21
0002f4 f7d1      	BRNE __CFD14
                 __CFD15:
0002f5 2000      	TST  R0
0002f6 f40a      	BRPL __CFD16
0002f7 d141      	RCALL __ANEGD1
                 __CFD16:
0002f8 915f      	POP  R21
0002f9 9508      	RET
                 
                 __CDF1U:
0002fa 9468      	SET
0002fb c001      	RJMP __CDF1U0
                 __CDF1:
0002fc 94e8      	CLT
                 __CDF1U0:
0002fd 9730      	SBIW R30,0
0002fe 4060      	SBCI R22,0
0002ff 4070      	SBCI R23,0
000300 f0b1      	BREQ __CDF10
000301 2400      	CLR  R0
000302 f026      	BRTS __CDF11
000303 2377      	TST  R23
000304 f412      	BRPL __CDF11
000305 9400      	COM  R0
000306 d132      	RCALL __ANEGD1
                 __CDF11:
000307 2e17      	MOV  R1,R23
000308 e17e      	LDI  R23,30
000309 2011      	TST  R1
                 __CDF12:
00030a f032      	BRMI __CDF13
00030b 957a      	DEC  R23
00030c 0fee      	LSL  R30
00030d 1fff      	ROL  R31
00030e 1f66      	ROL  R22
00030f 1c11      	ROL  R1
000310 cff9      	RJMP __CDF12
                 __CDF13:
000311 2fef      	MOV  R30,R31
000312 2ff6      	MOV  R31,R22
000313 2d61      	MOV  R22,R1
000314 935f      	PUSH R21
000315 df8a      	RCALL __REPACK
000316 915f      	POP  R21
                 __CDF10:
000317 9508      	RET
                 
                 __SWAPACC:
000318 934f      	PUSH R20
000319 01af      	MOVW R20,R30
00031a 01fd      	MOVW R30,R26
00031b 01da      	MOVW R26,R20
00031c 01ab      	MOVW R20,R22
00031d 01bc      	MOVW R22,R24
00031e 01ca      	MOVW R24,R20
00031f 2d40      	MOV  R20,R0
000320 2c01      	MOV  R0,R1
000321 2e14      	MOV  R1,R20
000322 914f      	POP  R20
000323 9508      	RET
                 
                 __UADD12:
000324 0fea      	ADD  R30,R26
000325 1ffb      	ADC  R31,R27
000326 1f68      	ADC  R22,R24
000327 9508      	RET
                 
                 __NEGMAN1:
000328 95e0      	COM  R30
000329 95f0      	COM  R31
00032a 9560      	COM  R22
00032b 5fef      	SUBI R30,-1
00032c 4fff      	SBCI R31,-1
00032d 4f6f      	SBCI R22,-1
00032e 9508      	RET
                 
                 __SUBF12:
00032f 935f      	PUSH R21
000330 df81      	RCALL __UNPACK
000331 3890      	CPI  R25,0x80
000332 f171      	BREQ __ADDF129
000333 e850      	LDI  R21,0x80
000334 2615      	EOR  R1,R21
                 
000335 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000336 935f      	PUSH R21
000337 df7a      	RCALL __UNPACK
000338 3890      	CPI  R25,0x80
000339 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00033a 3870      	CPI  R23,0x80
00033b f121      	BREQ __ADDF128
                 __ADDF121:
00033c 2f57      	MOV  R21,R23
00033d 1b59      	SUB  R21,R25
00033e f12b      	BRVS __ADDF1211
00033f f412      	BRPL __ADDF122
000340 dfd7      	RCALL __SWAPACC
000341 cffa      	RJMP __ADDF121
                 __ADDF122:
000342 3158      	CPI  R21,24
000343 f018      	BRLO __ADDF123
000344 27aa      	CLR  R26
000345 27bb      	CLR  R27
000346 2788      	CLR  R24
                 __ADDF123:
000347 3058      	CPI  R21,8
000348 f028      	BRLO __ADDF124
000349 2fab      	MOV  R26,R27
00034a 2fb8      	MOV  R27,R24
00034b 2788      	CLR  R24
00034c 5058      	SUBI R21,8
00034d cff9      	RJMP __ADDF123
                 __ADDF124:
00034e 2355      	TST  R21
00034f f029      	BREQ __ADDF126
                 __ADDF125:
000350 9586      	LSR  R24
000351 95b7      	ROR  R27
000352 95a7      	ROR  R26
000353 955a      	DEC  R21
000354 f7d9      	BRNE __ADDF125
                 __ADDF126:
000355 2d50      	MOV  R21,R0
000356 2551      	EOR  R21,R1
000357 f072      	BRMI __ADDF127
000358 dfcb      	RCALL __UADD12
000359 f438      	BRCC __ADDF129
00035a 9567      	ROR  R22
00035b 95f7      	ROR  R31
00035c 95e7      	ROR  R30
00035d 9573      	INC  R23
00035e f413      	BRVC __ADDF129
00035f c020      	RJMP __MAXRES
                 __ADDF128:
000360 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000361 df3e      	RCALL __REPACK
000362 915f      	POP  R21
000363 9508      	RET
                 __ADDF1211:
000364 f7d8      	BRCC __ADDF128
000365 cffb      	RJMP __ADDF129
                 __ADDF127:
000366 1bea      	SUB  R30,R26
000367 0bfb      	SBC  R31,R27
000368 0b68      	SBC  R22,R24
000369 f051      	BREQ __ZERORES
00036a f410      	BRCC __ADDF1210
00036b 9400      	COM  R0
00036c dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00036d 2366      	TST  R22
00036e f392      	BRMI __ADDF129
00036f 0fee      	LSL  R30
000370 1fff      	ROL  R31
000371 1f66      	ROL  R22
000372 957a      	DEC  R23
000373 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000374 27ee      	CLR  R30
000375 27ff      	CLR  R31
000376 2766      	CLR  R22
000377 2777      	CLR  R23
000378 915f      	POP  R21
000379 9508      	RET
                 
                 __MINRES:
00037a efef      	SER  R30
00037b efff      	SER  R31
00037c e76f      	LDI  R22,0x7F
00037d ef7f      	SER  R23
00037e 915f      	POP  R21
00037f 9508      	RET
                 
                 __MAXRES:
000380 efef      	SER  R30
000381 efff      	SER  R31
000382 e76f      	LDI  R22,0x7F
000383 e77f      	LDI  R23,0x7F
000384 915f      	POP  R21
000385 9508      	RET
                 
                 __MULF12:
000386 935f      	PUSH R21
000387 df2a      	RCALL __UNPACK
000388 3870      	CPI  R23,0x80
000389 f351      	BREQ __ZERORES
00038a 3890      	CPI  R25,0x80
00038b f341      	BREQ __ZERORES
00038c 2401      	EOR  R0,R1
00038d 9408      	SEC
00038e 1f79      	ADC  R23,R25
00038f f423      	BRVC __MULF124
000390 f31c      	BRLT __ZERORES
                 __MULF125:
000391 2000      	TST  R0
000392 f33a      	BRMI __MINRES
000393 cfec      	RJMP __MAXRES
                 __MULF124:
000394 920f      	PUSH R0
000395 931f      	PUSH R17
000396 932f      	PUSH R18
000397 933f      	PUSH R19
000398 934f      	PUSH R20
000399 2711      	CLR  R17
00039a 2722      	CLR  R18
00039b 2799      	CLR  R25
00039c 9f68      	MUL  R22,R24
00039d 01a0      	MOVW R20,R0
00039e 9f8f      	MUL  R24,R31
00039f 2d30      	MOV  R19,R0
0003a0 0d41      	ADD  R20,R1
0003a1 1f59      	ADC  R21,R25
0003a2 9f6b      	MUL  R22,R27
0003a3 0d30      	ADD  R19,R0
0003a4 1d41      	ADC  R20,R1
0003a5 1f59      	ADC  R21,R25
0003a6 9f8e      	MUL  R24,R30
0003a7 d027      	RCALL __MULF126
0003a8 9fbf      	MUL  R27,R31
0003a9 d025      	RCALL __MULF126
0003aa 9f6a      	MUL  R22,R26
0003ab d023      	RCALL __MULF126
0003ac 9fbe      	MUL  R27,R30
0003ad d01d      	RCALL __MULF127
0003ae 9faf      	MUL  R26,R31
0003af d01b      	RCALL __MULF127
0003b0 9fae      	MUL  R26,R30
0003b1 0d11      	ADD  R17,R1
0003b2 1f29      	ADC  R18,R25
0003b3 1f39      	ADC  R19,R25
0003b4 1f49      	ADC  R20,R25
0003b5 1f59      	ADC  R21,R25
0003b6 2fe3      	MOV  R30,R19
0003b7 2ff4      	MOV  R31,R20
0003b8 2f65      	MOV  R22,R21
0003b9 2f52      	MOV  R21,R18
0003ba 914f      	POP  R20
0003bb 913f      	POP  R19
0003bc 912f      	POP  R18
0003bd 911f      	POP  R17
0003be 900f      	POP  R0
0003bf 2366      	TST  R22
0003c0 f02a      	BRMI __MULF122
0003c1 0f55      	LSL  R21
0003c2 1fee      	ROL  R30
0003c3 1fff      	ROL  R31
0003c4 1f66      	ROL  R22
0003c5 c002      	RJMP __MULF123
                 __MULF122:
0003c6 9573      	INC  R23
0003c7 f24b      	BRVS __MULF125
                 __MULF123:
0003c8 decd      	RCALL __ROUND_REPACK
0003c9 915f      	POP  R21
0003ca 9508      	RET
                 
                 __MULF127:
0003cb 0d10      	ADD  R17,R0
0003cc 1d21      	ADC  R18,R1
0003cd 1f39      	ADC  R19,R25
0003ce c002      	RJMP __MULF128
                 __MULF126:
0003cf 0d20      	ADD  R18,R0
0003d0 1d31      	ADC  R19,R1
                 __MULF128:
0003d1 1f49      	ADC  R20,R25
0003d2 1f59      	ADC  R21,R25
0003d3 9508      	RET
                 
                 __DIVF21:
0003d4 935f      	PUSH R21
0003d5 dedc      	RCALL __UNPACK
0003d6 3870      	CPI  R23,0x80
0003d7 f421      	BRNE __DIVF210
0003d8 2011      	TST  R1
                 __DIVF211:
0003d9 f40a      	BRPL __DIVF219
0003da cf9f      	RJMP __MINRES
                 __DIVF219:
0003db cfa4      	RJMP __MAXRES
                 __DIVF210:
0003dc 3890      	CPI  R25,0x80
0003dd f409      	BRNE __DIVF218
                 __DIVF217:
0003de cf95      	RJMP __ZERORES
                 __DIVF218:
0003df 2401      	EOR  R0,R1
0003e0 9408      	SEC
0003e1 0b97      	SBC  R25,R23
0003e2 f41b      	BRVC __DIVF216
0003e3 f3d4      	BRLT __DIVF217
0003e4 2000      	TST  R0
0003e5 cff3      	RJMP __DIVF211
                 __DIVF216:
0003e6 2f79      	MOV  R23,R25
0003e7 931f      	PUSH R17
0003e8 932f      	PUSH R18
0003e9 933f      	PUSH R19
0003ea 934f      	PUSH R20
0003eb 2411      	CLR  R1
0003ec 2711      	CLR  R17
0003ed 2722      	CLR  R18
0003ee 2733      	CLR  R19
0003ef 2744      	CLR  R20
0003f0 2755      	CLR  R21
0003f1 e290      	LDI  R25,32
                 __DIVF212:
0003f2 17ae      	CP   R26,R30
0003f3 07bf      	CPC  R27,R31
0003f4 0786      	CPC  R24,R22
0003f5 0741      	CPC  R20,R17
0003f6 f030      	BRLO __DIVF213
0003f7 1bae      	SUB  R26,R30
0003f8 0bbf      	SBC  R27,R31
0003f9 0b86      	SBC  R24,R22
0003fa 0b41      	SBC  R20,R17
0003fb 9408      	SEC
0003fc c001      	RJMP __DIVF214
                 __DIVF213:
0003fd 9488      	CLC
                 __DIVF214:
0003fe 1f55      	ROL  R21
0003ff 1f22      	ROL  R18
000400 1f33      	ROL  R19
000401 1c11      	ROL  R1
000402 1faa      	ROL  R26
000403 1fbb      	ROL  R27
000404 1f88      	ROL  R24
000405 1f44      	ROL  R20
000406 959a      	DEC  R25
000407 f751      	BRNE __DIVF212
000408 01f9      	MOVW R30,R18
000409 2d61      	MOV  R22,R1
00040a 914f      	POP  R20
00040b 913f      	POP  R19
00040c 912f      	POP  R18
00040d 911f      	POP  R17
00040e 2366      	TST  R22
00040f f032      	BRMI __DIVF215
000410 0f55      	LSL  R21
000411 1fee      	ROL  R30
000412 1fff      	ROL  R31
000413 1f66      	ROL  R22
000414 957a      	DEC  R23
000415 f243      	BRVS __DIVF217
                 __DIVF215:
000416 de7f      	RCALL __ROUND_REPACK
000417 915f      	POP  R21
000418 9508      	RET
                 
                 __CMPF12:
000419 2399      	TST  R25
00041a f09a      	BRMI __CMPF120
00041b 2377      	TST  R23
00041c f042      	BRMI __CMPF121
00041d 1797      	CP   R25,R23
00041e f048      	BRLO __CMPF122
00041f f429      	BRNE __CMPF121
000420 17ae      	CP   R26,R30
000421 07bf      	CPC  R27,R31
000422 0786      	CPC  R24,R22
000423 f020      	BRLO __CMPF122
000424 f031      	BREQ __CMPF123
                 __CMPF121:
000425 9498      	CLZ
000426 9488      	CLC
000427 9508      	RET
                 __CMPF122:
000428 9498      	CLZ
000429 9408      	SEC
00042a 9508      	RET
                 __CMPF123:
00042b 9418      	SEZ
00042c 9488      	CLC
00042d 9508      	RET
                 __CMPF120:
00042e 2377      	TST  R23
00042f f7c2      	BRPL __CMPF122
000430 1797      	CP   R25,R23
000431 f398      	BRLO __CMPF121
000432 f7a9      	BRNE __CMPF122
000433 17ea      	CP   R30,R26
000434 07fb      	CPC  R31,R27
000435 0768      	CPC  R22,R24
000436 f388      	BRLO __CMPF122
000437 f399      	BREQ __CMPF123
000438 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000439 95f0      	COM  R31
00043a 9560      	COM  R22
00043b 9570      	COM  R23
00043c 95e1      	NEG  R30
00043d 4fff      	SBCI R31,-1
00043e 4f6f      	SBCI R22,-1
00043f 4f7f      	SBCI R23,-1
000440 9508      	RET
                 
                 __CWD1:
000441 2f6f      	MOV  R22,R31
000442 0f66      	ADD  R22,R22
000443 0b66      	SBC  R22,R22
000444 2f76      	MOV  R23,R22
000445 9508      	RET
                 
                 __EQB12:
000446 17ea      	CP   R30,R26
000447 e0e1      	LDI  R30,1
000448 f009      	BREQ __EQB12T
000449 27ee      	CLR  R30
                 __EQB12T:
00044a 9508      	RET
                 
                 __SWAPD12:
00044b 2e18      	MOV  R1,R24
00044c 2f86      	MOV  R24,R22
00044d 2d61      	MOV  R22,R1
00044e 2e19      	MOV  R1,R25
00044f 2f97      	MOV  R25,R23
000450 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000451 2e1b      	MOV  R1,R27
000452 2fbf      	MOV  R27,R31
000453 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000454 2e1a      	MOV  R1,R26
000455 2fae      	MOV  R26,R30
000456 2de1      	MOV  R30,R1
000457 9508      	RET
                 
                 __CPD02:
000458 2400      	CLR  R0
000459 160a      	CP   R0,R26
00045a 060b      	CPC  R0,R27
00045b 0608      	CPC  R0,R24
00045c 0609      	CPC  R0,R25
00045d 9508      	RET
                 
                 __CPD12:
00045e 17ea      	CP   R30,R26
00045f 07fb      	CPC  R31,R27
000460 0768      	CPC  R22,R24
000461 0779      	CPC  R23,R25
000462 9508      	RET
                 
                 __SAVELOCR6:
000463 935a      	ST   -Y,R21
                 __SAVELOCR5:
000464 934a      	ST   -Y,R20
                 __SAVELOCR4:
000465 933a      	ST   -Y,R19
                 __SAVELOCR3:
000466 932a      	ST   -Y,R18
                 __SAVELOCR2:
000467 931a      	ST   -Y,R17
000468 930a      	ST   -Y,R16
000469 9508      	RET
                 
                 __LOADLOCR6:
00046a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00046b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00046c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00046d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00046e 8119      	LDD  R17,Y+1
00046f 8108      	LD   R16,Y
000470 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  34 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   9 r17:  19 r18:  26 r19:  22 r20:  32 r21:  87 r22:  76 r23:  67 
r24:  40 r25:  41 r26:  65 r27:  41 r28:   4 r29:   1 r30: 168 r31:  78 
x  :  14 y  : 119 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   7 and   :   3 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  34 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  18 
brlt  :   2 brmi  :   9 brne  :  20 brpl  :   7 brsh  :   1 brtc  :   1 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   0 call  :  60 
cbi   :   3 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  26 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :  10 cpc   :  15 cpi   :  40 cpse  :   0 dec   :   8 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  24 ld    :  12 ldd   :  62 ldi   :  91 
lds   :  16 lpm   :   7 lsl   :  11 lsr   :   3 mov   :  51 movw  :  23 
mul   :   9 muls  :   1 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   0 out   :  15 pop   :  20 push  :  20 rcall :  24 ret   :  42 
reti  :   0 rjmp  :  45 rol   :  24 ror   :  12 sbc   :   7 sbci  :  16 
sbi   :   2 sbic  :   0 sbis  :   1 sbiw  :  13 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   4 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  19 std   :  40 sts   :  12 sub   :   4 subi  :  12 swap  :   0 
tst   :  17 wdr   :   1 
Instructions used: 72 out of 116 (62.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008e2   2236     38   2274   32768   6.9%
[.dseg] 0x000060 0x00027a      0     26     26    2048   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
